<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20201001 14:29:53.239" generator="Robot 3.2.2 (Python 3.5.2 on linux)" rpa="false">
<suite source="/root/cord/test/cord-tester/src/test/cord-api/Tests/WorkflowValidations/SIAB.robot" id="s1" name="SIAB">
<kw type="setup" name="Setup">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XOS_USER}</arg>
<arg>${XOS_PASSWD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.648">${auth} = ['admin@opencord.org', 'letmein']</msg>
<status status="PASS" endtime="20201001 14:29:53.648" starttime="20201001 14:29:53.647"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.649">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20201001 14:29:53.649" starttime="20201001 14:29:53.648"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>http://${server_ip}:${server_port}</arg>
<arg>auth=${AUTH}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.650">Creating Session using : alias=127.0.0.1, url=http://127.0.0.1:30006, headers={'Content-Type': 'application/json'},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7f933b909eb8&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20201001 14:29:53.650" starttime="20201001 14:29:53.649"></status>
</kw>
<kw library="XOS" name="Get Service Owner Id">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${ATT_SERVICE}</arg>
</arguments>
<assign>
<var>${att_workflow_service_id}</var>
</assign>
<kw library="XOS" name="CORD Get">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.683">GET Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 headers={'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=None 
 </msg>
<msg level="INFO" timestamp="20201001 14:29:53.683">GET Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg level="INFO" timestamp="20201001 14:29:53.683">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.683" starttime="20201001 14:29:53.651"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.684">{"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.684" starttime="20201001 14:29:53.684"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.685">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.685" starttime="20201001 14:29:53.685"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.685">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.685" starttime="20201001 14:29:53.651"></status>
</kw>
<kw library="RequestsLibrary" name="To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.686">To JSON using : content={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} </msg>
<msg level="INFO" timestamp="20201001 14:29:53.686">To JSON using : pretty_print=False </msg>
<msg level="INFO" timestamp="20201001 14:29:53.686">${jsondata} = {'items': [{'name': 'att-workflow-driver', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'updated': 1601560389.74147, 'kind': 'oss', 'service_interfaces_ids': [], 'whitelist_...</msg>
<status status="PASS" endtime="20201001 14:29:53.686" starttime="20201001 14:29:53.686"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.687">{'items': [{'name': 'att-workflow-driver', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'updated': 1601560389.74147, 'kind': 'oss', 'service_interfaces_ids': [], 'whitelist_entries_ids': [1], 'xos_managed': True, 'slices_ids': [], 'subscribed_links_ids': [], 'provided_dependencies_ids': [], 'tags_ids': [], 'backend_code': 0, 'addresspools_ids': [], 'policy_status': 'Policy in process', 'class_names': 'AttWorkflowDriverService,Service,Service_decl,XOSBase', 'serviceattributes_ids': [], 'created': 1601560331.675389, 'backend_status': 'Provisioning in progress', 'leaf_model_name': 'AttWorkflowDriverService', 'no_sync': False, 'backend_need_delete_policy': False, 'deleted': False, 'published': True, 'backend_need_reap': False, 'backend_need_delete': False, 'write_protect': False, 'id': 2, 'service_instances_ids': [55], 'lazy_blocked': False, 'backend_register': '{}', 'no_policy': False, 'serviceports_ids': [], 'policy_code': 0, 'subscribed_dependencies_ids': [7], 'owned_trust_domains_ids': [], 'enabled': True}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.687" starttime="20201001 14:29:53.686"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.687">Length is 1</msg>
<msg level="INFO" timestamp="20201001 14:29:53.687">${length} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.688" starttime="20201001 14:29:53.687"></status>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | ${length} ]">
<kw type="foritem" name="${INDEX} = 0">
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.688">${value} = {'name': 'att-workflow-driver', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'updated': 1601560389.74147, 'kind': 'oss', 'service_interfaces_ids': [], 'whitelist_entries_ids...</msg>
<status status="PASS" endtime="20201001 14:29:53.689" starttime="20201001 14:29:53.688"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.689">${id} = 2</msg>
<status status="PASS" endtime="20201001 14:29:53.689" starttime="20201001 14:29:53.689"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.689" starttime="20201001 14:29:53.688"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.689" starttime="20201001 14:29:53.688"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.689">${att_workflow_service_id} = 2</msg>
<status status="PASS" endtime="20201001 14:29:53.689" starttime="20201001 14:29:53.650"></status>
</kw>
<kw library="XOS" name="Get Service Owner Id">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${VOLT_SERVICE}</arg>
</arguments>
<assign>
<var>${volt_service_id}</var>
</assign>
<kw library="XOS" name="CORD Get">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.720">GET Request : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 path_url=/xosapi/v1/volt/voltservices 
 headers={'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=None 
 </msg>
<msg level="INFO" timestamp="20201001 14:29:53.720">GET Response : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg level="INFO" timestamp="20201001 14:29:53.720">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.720" starttime="20201001 14:29:53.690"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.721">{"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.721" starttime="20201001 14:29:53.721"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.721">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.722" starttime="20201001 14:29:53.721"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.722">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20201001 14:29:53.722" starttime="20201001 14:29:53.690"></status>
</kw>
<kw library="RequestsLibrary" name="To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.722">To JSON using : content={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} </msg>
<msg level="INFO" timestamp="20201001 14:29:53.723">To JSON using : pretty_print=False </msg>
<msg level="INFO" timestamp="20201001 14:29:53.723">${jsondata} = {'items': [{'name': 'volt', 'self_content_type_id': 'volt.voltservice_decl', 'updated': 1601560390.676351, 'kind': 'data', 'service_interfaces_ids': [], 'voltha_pass': 'admin', 'policy_code': 0, 'xos_...</msg>
<status status="PASS" endtime="20201001 14:29:53.723" starttime="20201001 14:29:53.722"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.723">{'items': [{'name': 'volt', 'self_content_type_id': 'volt.voltservice_decl', 'updated': 1601560390.676351, 'kind': 'data', 'service_interfaces_ids': [], 'voltha_pass': 'admin', 'policy_code': 0, 'xos_managed': True, 'slices_ids': [], 'subscribed_links_ids': [], 'provided_dependencies_ids': [7, 5], 'tags_ids': [], 'backend_code': 0, 'volt_devices_ids': [1], 'addresspools_ids': [], 'policy_status': 'Policy in process', 'class_names': 'VOLTService,VOLTService_decl,Service,Service_decl,XOSBase', 'serviceattributes_ids': [], 'created': 1601560332.170006, 'voltha_url': 'voltha.voltha.svc.cluster.local', 'backend_status': 'Provisioning in progress', 'leaf_model_name': 'VOLTService', 'no_sync': False, 'backend_need_delete_policy': False, 'serviceports_ids': [], 'published': True, 'backend_need_reap': False, 'lazy_blocked': False, 'backend_need_delete': False, 'write_protect': False, 'id': 3, 'service_instances_ids': [], 'voltha_port': 8882, 'backend_register': '{}', 'voltha_user': 'voltha', 'no_policy': False, 'deleted': False, 'subscribed_dependencies_ids': [6, 4], 'owned_trust_domains_ids': [], 'enabled': True}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.723" starttime="20201001 14:29:53.723"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.724">Length is 1</msg>
<msg level="INFO" timestamp="20201001 14:29:53.724">${length} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.724" starttime="20201001 14:29:53.723"></status>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | ${length} ]">
<kw type="foritem" name="${INDEX} = 0">
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.725">${value} = {'name': 'volt', 'self_content_type_id': 'volt.voltservice_decl', 'updated': 1601560390.676351, 'kind': 'data', 'service_interfaces_ids': [], 'voltha_pass': 'admin', 'policy_code': 0, 'xos_managed': T...</msg>
<status status="PASS" endtime="20201001 14:29:53.725" starttime="20201001 14:29:53.724"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.725">${id} = 3</msg>
<status status="PASS" endtime="20201001 14:29:53.725" starttime="20201001 14:29:53.725"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.725" starttime="20201001 14:29:53.724"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.725" starttime="20201001 14:29:53.724"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.726">${volt_service_id} = 3</msg>
<status status="PASS" endtime="20201001 14:29:53.726" starttime="20201001 14:29:53.690"></status>
</kw>
<kw library="CORDRobot" name="Json To List">
<arguments>
<arg>${WHITELIST_PATHFILE}</arg>
<arg>AttWhiteListInfo</arg>
</arguments>
<assign>
<var>${AttWhiteListList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.726">${AttWhiteListList} = [{'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000'}]</msg>
<status status="PASS" endtime="20201001 14:29:53.726" starttime="20201001 14:29:53.726"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${AttWhiteListList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.727">${AttWhiteListList} = [{'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000'}]</msg>
<status status="PASS" endtime="20201001 14:29:53.727" starttime="20201001 14:29:53.727"></status>
</kw>
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.727">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:29:53.728" starttime="20201001 14:29:53.727"></status>
</kw>
<kw library="CORDRobot" name="Set Field Value In Dict">
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>owner_id</arg>
<arg>${att_workflow_service_id}</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.728">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:29:53.728" starttime="20201001 14:29:53.728"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>serial_number</arg>
</arguments>
<assign>
<var>${onu_device}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.729">${onu_device} = PSMO00000000</msg>
<status status="PASS" endtime="20201001 14:29:53.729" starttime="20201001 14:29:53.728"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.729">PSMO00000000</msg>
<status status="PASS" endtime="20201001 14:29:53.729" starttime="20201001 14:29:53.729"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.730">${onu_device} = PSMO00000000</msg>
<status status="PASS" endtime="20201001 14:29:53.730" starttime="20201001 14:29:53.729"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>pon_port_id</arg>
</arguments>
<assign>
<var>${onu_location}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.730">${onu_location} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.730" starttime="20201001 14:29:53.730"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_location}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.731">${onu_location} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.731" starttime="20201001 14:29:53.730"></status>
</kw>
<kw library="CORDRobot" name="Json To List">
<arguments>
<arg>${SUBSCRIBER_PATHFILE}</arg>
<arg>SubscriberInfo</arg>
</arguments>
<assign>
<var>${SubscriberList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.731">${SubscriberList} = [{'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}]</msg>
<status status="PASS" endtime="20201001 14:29:53.731" starttime="20201001 14:29:53.731"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SubscriberList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.732">${SubscriberList} = [{'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}]</msg>
<status status="PASS" endtime="20201001 14:29:53.732" starttime="20201001 14:29:53.732"></status>
</kw>
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.733">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:29:53.733" starttime="20201001 14:29:53.732"></status>
</kw>
<kw library="CORDRobot" name="Get Field Value From Dict">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>s_tag</arg>
</arguments>
<assign>
<var>${s_tag}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.733">key... status
key... c_tag
key... s_tag</msg>
<msg level="INFO" timestamp="20201001 14:29:53.733">${s_tag} = 222</msg>
<status status="PASS" endtime="20201001 14:29:53.733" starttime="20201001 14:29:53.733"></status>
</kw>
<kw library="CORDRobot" name="Get Field Value From Dict">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>c_tag</arg>
</arguments>
<assign>
<var>${c_tag}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.733">key... status
key... c_tag</msg>
<msg level="INFO" timestamp="20201001 14:29:53.734">${c_tag} = 111</msg>
<status status="PASS" endtime="20201001 14:29:53.734" starttime="20201001 14:29:53.733"></status>
</kw>
<kw library="CORDRobot" name="Json To List">
<arguments>
<arg>${VOLT_DEVICE_PATHFILE}</arg>
<arg>VOLTDeviceInfo</arg>
</arguments>
<assign>
<var>${VoltDeviceList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.734">${VoltDeviceList} = [{'name': 'PONSIM OLT', 'switch_datapath_id': 'of:0000000000000001', 'outer_tpid': '0x8100', 'volt_service_id': 2, 'host': 'olt0.voltha.svc', 'uplink': '2', 'switch_port': '2', 'device_type': 'ponsim_...</msg>
<status status="PASS" endtime="20201001 14:29:53.734" starttime="20201001 14:29:53.734"></status>
</kw>
<kw library="CORDRobot" name="Set Field Value In Dict">
<arguments>
<arg>${VoltDeviceList[0]}</arg>
<arg>volt_service_id</arg>
<arg>${volt_service_id}</arg>
</arguments>
<assign>
<var>${VoltDeviceDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.735">${VoltDeviceDict} = {'name': 'PONSIM OLT', 'switch_datapath_id': 'of:0000000000000001', 'outer_tpid': '0x8100', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'switch_port': '2', 'device_type': 'ponsim_o...</msg>
<status status="PASS" endtime="20201001 14:29:53.735" starttime="20201001 14:29:53.734"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.735">${VoltDeviceList} = [{'name': 'PONSIM OLT', 'switch_datapath_id': 'of:0000000000000001', 'outer_tpid': '0x8100', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'switch_port': '2', 'device_type': 'ponsim_...</msg>
<status status="PASS" endtime="20201001 14:29:53.736" starttime="20201001 14:29:53.735"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceDict}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.736">${VoltDeviceDict} = {'name': 'PONSIM OLT', 'switch_datapath_id': 'of:0000000000000001', 'outer_tpid': '0x8100', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'switch_port': '2', 'device_type': 'ponsim_o...</msg>
<status status="PASS" endtime="20201001 14:29:53.736" starttime="20201001 14:29:53.736"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${s_tag}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.736">${s_tag} = 222</msg>
<status status="PASS" endtime="20201001 14:29:53.737" starttime="20201001 14:29:53.736"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${c_tag}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.737">${c_tag} = 111</msg>
<status status="PASS" endtime="20201001 14:29:53.737" starttime="20201001 14:29:53.737"></status>
</kw>
<kw library="ATTWorkFlowDriver" name="Retrieve Whitelist Entry">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${whitelist_id}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>ATT_WHITELIST</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.750">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries
Test passed: 200: {"items": [{"policed": 1601560389.830894, "backend_need_delete_policy": true, "backend_register": "{}", "backend_status": "Provisioning in progress", "id": 1, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverwhitelistentry", "backend_code": 0, "pon_port_id": 1, "serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "no_sync": false, "owner_id": 2, "updated": 1601560389.830894, "deleted": false, "policy_status": "done", "lazy_blocked": false, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverWhiteListEntry", "created": 1601560389.836139, "write_protect": false, "no_policy": false, "xos_managed": true, "class_names": "AttWorkflowDriverWhiteListEntry,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.750">${json_result} = {'items': [{'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1...</msg>
<status status="PASS" endtime="20201001 14:29:53.750" starttime="20201001 14:29:53.738"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.751">{'items': [{'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'owner_id': 2, 'backend_code': 0, 'policy_status': 'done', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'created': 1601560389.836139, 'backend_status': 'Provisioning in progress', 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'pon_port_id': 1, 'backend_need_delete_policy': True, 'xos_managed': True, 'backend_need_reap': False, 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'write_protect': False, 'id': 1, 'lazy_blocked': False, 'backend_register': '{}', 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.751" starttime="20201001 14:29:53.750"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.751">${json_result_list} = [{'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'owner_i...</msg>
<status status="PASS" endtime="20201001 14:29:53.751" starttime="20201001 14:29:53.751"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.752">data {'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'owner_id': 2, 'backend_code': 0, 'policy_status': 'done', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'created': 1601560389.836139, 'backend_status': 'Provisioning in progress', 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'pon_port_id': 1, 'backend_need_delete_policy': True, 'xos_managed': True, 'backend_need_reap': False, 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'write_protect': False, 'id': 1, 'lazy_blocked': False, 'backend_register': '{}', 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'owner_id': 2, 'backend_code': 0, 'policy_status': 'done', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'created': 1601560389.836139, 'backend_status': 'Provisioning in progress', 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'pon_port_id': 1, 'backend_need_delete_policy': True, 'xos_managed': True, 'backend_need_reap': False, 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'write_protect': False, 'id': 1, 'lazy_blocked': False, 'backend_register': '{}', 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.752">${getJsonDict} = {'policed': 1601560389.830894, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'updated': 1601560389.830894, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'owner_id...</msg>
<status status="PASS" endtime="20201001 14:29:53.752" starttime="20201001 14:29:53.752"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.752">${id} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.752" starttime="20201001 14:29:53.752"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.753">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.753" starttime="20201001 14:29:53.737"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.753">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:29:53.753" starttime="20201001 14:29:53.753"></status>
</kw>
<kw library="ATTWorkFlowDriver" name="Retrieve ATT Service Instance ID">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${att_si_id}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.775">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.776">${json_result} = {'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO...</msg>
<status status="PASS" endtime="20201001 14:29:53.776" starttime="20201001 14:29:53.754"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.776">{'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.776" starttime="20201001 14:29:53.776"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.777">${json_result_list} = [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000',...</msg>
<status status="PASS" endtime="20201001 14:29:53.777" starttime="20201001 14:29:53.776"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.777">data {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.778">${getJsonDict} = {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', ...</msg>
<status status="PASS" endtime="20201001 14:29:53.778" starttime="20201001 14:29:53.777"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.778">${id} = 55</msg>
<status status="PASS" endtime="20201001 14:29:53.778" starttime="20201001 14:29:53.778"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.778">${att_si_id} = 55</msg>
<status status="PASS" endtime="20201001 14:29:53.778" starttime="20201001 14:29:53.753"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${att_si_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.779">${att_si_id} = 55</msg>
<status status="PASS" endtime="20201001 14:29:53.779" starttime="20201001 14:29:53.779"></status>
</kw>
<kw library="OperatingSystem" name="Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1</arg>
</arguments>
<assign>
<var>${RG_CONTAINER}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.806">Running command 'kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1 2&gt;&amp;1'.</msg>
<msg level="INFO" timestamp="20201001 14:29:53.925">${RG_CONTAINER} = rg0-0-54d479558c-dx9s8</msg>
<status status="PASS" endtime="20201001 14:29:53.925" starttime="20201001 14:29:53.779"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RG_CONTAINER}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.928">${RG_CONTAINER} = rg0-0-54d479558c-dx9s8</msg>
<status status="PASS" endtime="20201001 14:29:53.928" starttime="20201001 14:29:53.927"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="ATTWorkFlowDriver" name="Validate ATT Workflow Driver SI">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="ATTWorkFlowDriver" name="Service Instance Status Check">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.962">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.963">${json_result} = {'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO...</msg>
<status status="PASS" endtime="20201001 14:29:53.963" starttime="20201001 14:29:53.931"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.964">{'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:29:53.965" starttime="20201001 14:29:53.963"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.966">${json_result_list} = [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000',...</msg>
<status status="PASS" endtime="20201001 14:29:53.966" starttime="20201001 14:29:53.965"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.966">data {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:29:53.967">${getJsonDict} = {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', ...</msg>
<status status="PASS" endtime="20201001 14:29:53.967" starttime="20201001 14:29:53.966"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.968">${onu_state} = ENABLED</msg>
<status status="PASS" endtime="20201001 14:29:53.968" starttime="20201001 14:29:53.967"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.968">${authentication_state} = AWAITING</msg>
<status status="PASS" endtime="20201001 14:29:53.968" starttime="20201001 14:29:53.968"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.969">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" endtime="20201001 14:29:53.969" starttime="20201001 14:29:53.968"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:29:53.969">${onu_state} = ENABLED</msg>
<msg level="INFO" timestamp="20201001 14:29:53.969">${authentication_status} = AWAITING</msg>
<msg level="INFO" timestamp="20201001 14:29:53.969">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" endtime="20201001 14:29:53.969" starttime="20201001 14:29:53.931"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.970" starttime="20201001 14:29:53.969"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.970" starttime="20201001 14:29:53.970"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.971" starttime="20201001 14:29:53.971"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.971" starttime="20201001 14:29:53.929"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:53.971" starttime="20201001 14:29:53.928"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{container_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:53.972">@{container_list} = [ ]</msg>
<status status="PASS" endtime="20201001 14:29:53.972" starttime="20201001 14:29:53.972"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>att-workflow-att-workflow-driver</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.973" starttime="20201001 14:29:53.972"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-fabric-crossconnect</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.973" starttime="20201001 14:29:53.973"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-rcord</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.974" starttime="20201001 14:29:53.974"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-volt</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.974" starttime="20201001 14:29:53.974"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>xos-core</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.975" starttime="20201001 14:29:53.974"></status>
</kw>
<kw library="Collections" name="Append To List">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>vcore</arg>
</arguments>
<status status="PASS" endtime="20201001 14:29:53.975" starttime="20201001 14:29:53.975"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${container_list}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:53.976">${container_list} = ['att-workflow-att-workflow-driver', 'seba-services-fabric-crossconnect', 'seba-services-rcord', 'seba-services-volt', 'xos-core', 'vcore']</msg>
<status status="PASS" endtime="20201001 14:29:53.976" starttime="20201001 14:29:53.975"></status>
</kw>
<kw name="Setup SSH Keys to Localhost">
<kw library="OperatingSystem" name="Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:54.007">Running command 'yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa'.</msg>
<status status="PASS" endtime="20201001 14:29:54.250" starttime="20201001 14:29:53.977"></status>
</kw>
<kw library="OperatingSystem" name="Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:54.280">Running command 'cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys'.</msg>
<status status="PASS" endtime="20201001 14:29:54.282" starttime="20201001 14:29:54.251"></status>
</kw>
<kw library="OperatingSystem" name="Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>chmod og-wx ~/.ssh/authorized_keys</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:54.310">Running command 'chmod og-wx ~/.ssh/authorized_keys 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20201001 14:29:54.313" starttime="20201001 14:29:54.284"></status>
</kw>
<status status="PASS" endtime="20201001 14:29:54.315" starttime="20201001 14:29:53.976"></status>
</kw>
<kw library="Kubernetes" name="Get Current Datetime On Kubernetes Node">
<doc>Get UTC datetime in RFC3339ish format</doc>
<arguments>
<arg>${kube_node_ip}</arg>
<arg>${local_user}</arg>
<arg>${local_pass}</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<kw library="utils" name="Login And Run Command On Remote System">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified), switch to root user, executes command, return output</doc>
<arguments>
<arg>date -u +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw library="utils" name="Login To Remote System">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified) and returns connection ID</doc>
<arguments>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>${container_type}</arg>
<arg>${container_name}</arg>
<arg>${prompt}</arg>
<arg>${prompt_timeout}</arg>
<arg>${container_prompt}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<kw library="SSHLibrary" name="Open Connection">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${ip}</arg>
<arg>prompt=${prompt}</arg>
<arg>timeout=${prompt_timeout}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:29:54.321">${conn_id} = 1</msg>
<status status="PASS" endtime="20201001 14:29:54.321" starttime="20201001 14:29:54.320"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pass}' != '${None}'</arg>
<arg>SSHLibrary.Login</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>ELSE</arg>
<arg>SSHLibrary.Login With Public Key</arg>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<kw library="SSHLibrary" name="Login With Public Key">
<doc>Logs into the SSH server using key-based authentication.</doc>
<arguments>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:29:54.323">Logging into '10.16.0.131:22' as 'root'.</msg>
<msg level="FAIL" timestamp="20201001 14:30:44.391">No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</msg>
<status status="FAIL" endtime="20201001 14:30:44.392" starttime="20201001 14:29:54.322"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.392" starttime="20201001 14:29:54.322"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.392" starttime="20201001 14:29:54.318"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.392" starttime="20201001 14:29:54.317"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.392" starttime="20201001 14:29:54.316"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.393" starttime="20201001 14:29:53.647"></status>
</kw>
<test id="s1-t1" name="ONU in Correct Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>multicast</tag>
<tag>stable</tag>
<tag>test1</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.394" critical="yes" starttime="20201001 14:30:44.393">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t2" name="ONU in Correct Location -&gt; Remove ONU from Whitelist -&gt; Add ONU to Whitelist">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove ONU from whitelist
Validate failed authentication/DHCP/E2E ping
Add ONU to whitelist
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test2</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.395" critical="yes" starttime="20201001 14:30:44.395">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t3" name="ONU in Correct Location -&gt; ONU in Wrong Location -&gt; ONU in Correct Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Update whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping
Update whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test3</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.396" critical="yes" starttime="20201001 14:30:44.396">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t4" name="ONU in Correct Location -&gt; Remove Subscriber -&gt; Create Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove subscriber model
Validate failed authentication/DHCP/E2E ping
Recreate subscriber model
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test4</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.398" critical="yes" starttime="20201001 14:30:44.397">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t5" name="ONU in Correct Location (Skip Subscriber Provisioning) -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip provisioning subscriber
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test5</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.399" critical="yes" starttime="20201001 14:30:44.398">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t6" name="ONU in Correct Location (Skip Authentication)">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip RG authentication
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test6</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.400" critical="yes" starttime="20201001 14:30:44.399">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t7" name="ONU not in Whitelist">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test7</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.401" critical="yes" starttime="20201001 14:30:44.400">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t8" name="ONU not in Whitelist (Skip Subscriber Provisioning) -&gt; Add ONU to Whitelist -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU and subscriber provisioning
Validate successful authentication but failed DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test8</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.402" critical="yes" starttime="20201001 14:30:44.402">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t9" name="ONU in Wrong Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test9</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.403" critical="yes" starttime="20201001 14:30:44.403">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<test id="s1-t10" name="ONU in Wrong Location (Skip Subscriber Provisioning) -&gt; ONU in Correct Location -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location and skip subscriber provisioning
Validate failed authentication/DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test10</tag>
</tags>
<status status="FAIL" endtime="20201001 14:30:44.404" critical="yes" starttime="20201001 14:30:44.404">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .</status>
</test>
<kw type="teardown" name="Teardown">
<kw name="Setup Test">
<kw library="OperatingSystem" name="Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:44.436">Running command 'date +"%Y-%m-%dT%H:%M:%S.%NZ" 2&gt;&amp;1'.</msg>
<msg level="INFO" timestamp="20201001 14:30:44.440">${datetime} = 2020-10-01T14:30:44.437705209Z</msg>
<status status="PASS" endtime="20201001 14:30:44.440" starttime="20201001 14:30:44.408"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:44.443">${datetime} = 2020-10-01T14:30:44.437705209Z</msg>
<status status="PASS" endtime="20201001 14:30:44.443" starttime="20201001 14:30:44.441"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Subscriber</arg>
</arguments>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:44.445">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:44.445" starttime="20201001 14:30:44.445"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:44.447">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:44.447" starttime="20201001 14:30:44.446"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:44.471">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:44.471">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:44.471">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:44.471" starttime="20201001 14:30:44.447"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:44.472">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:44.472" starttime="20201001 14:30:44.472"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:44.473">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:44.473">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:44.473" starttime="20201001 14:30:44.472"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.474" starttime="20201001 14:30:44.445"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:44.474" starttime="20201001 14:30:44.444"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:46.475">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:46.476" starttime="20201001 14:30:46.475"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:46.477">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:46.477" starttime="20201001 14:30:46.476"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:46.491">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:46.491">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:46.492">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:46.492" starttime="20201001 14:30:46.477"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:46.492">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:46.492" starttime="20201001 14:30:46.492"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:46.493">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:46.493">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:46.493" starttime="20201001 14:30:46.492"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:46.494" starttime="20201001 14:30:46.476"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:46.494" starttime="20201001 14:30:46.474"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:48.495">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:48.495" starttime="20201001 14:30:48.495"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:48.496">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:48.496" starttime="20201001 14:30:48.496"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:48.511">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:48.511">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:48.511">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:48.511" starttime="20201001 14:30:48.497"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:48.511">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:48.512" starttime="20201001 14:30:48.511"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:48.512">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:48.512">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:48.512" starttime="20201001 14:30:48.512"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:48.513" starttime="20201001 14:30:48.495"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:48.513" starttime="20201001 14:30:48.494"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:50.514">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:50.514" starttime="20201001 14:30:50.514"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:50.516">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:50.516" starttime="20201001 14:30:50.515"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:50.530">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:50.530">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:50.530">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:50.531" starttime="20201001 14:30:50.516"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:50.531">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:50.531" starttime="20201001 14:30:50.531"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:50.532">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:50.532">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:50.532" starttime="20201001 14:30:50.532"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:50.532" starttime="20201001 14:30:50.515"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:50.533" starttime="20201001 14:30:50.513"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:52.534">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:52.534" starttime="20201001 14:30:52.534"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:52.536">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:52.536" starttime="20201001 14:30:52.535"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:52.553">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:52.553">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:52.553">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:52.553" starttime="20201001 14:30:52.536"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:52.554">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:52.554" starttime="20201001 14:30:52.553"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:52.554">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:52.555">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:52.555" starttime="20201001 14:30:52.554"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:52.555" starttime="20201001 14:30:52.534"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:52.555" starttime="20201001 14:30:52.533"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:54.556">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:54.556" starttime="20201001 14:30:54.556"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:54.558">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:54.558" starttime="20201001 14:30:54.557"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:54.572">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:54.572">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:54.572">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:54.573" starttime="20201001 14:30:54.558"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:54.573">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:54.573" starttime="20201001 14:30:54.573"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:54.574">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:54.574">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:54.574" starttime="20201001 14:30:54.573"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:54.574" starttime="20201001 14:30:54.557"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:54.574" starttime="20201001 14:30:54.556"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:56.576">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:56.576" starttime="20201001 14:30:56.575"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:56.577">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:56.577" starttime="20201001 14:30:56.577"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:56.617">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:56.617">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:56.618">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:56.618" starttime="20201001 14:30:56.577"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:56.618">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:56.618" starttime="20201001 14:30:56.618"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:56.619">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:56.619">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:56.619" starttime="20201001 14:30:56.619"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:56.620" starttime="20201001 14:30:56.576"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:56.620" starttime="20201001 14:30:56.575"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:58.621">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:30:58.622" starttime="20201001 14:30:58.621"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:58.623">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:30:58.623" starttime="20201001 14:30:58.622"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:30:58.636">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:58.636">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:30:58.636">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:30:58.636" starttime="20201001 14:30:58.623"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:58.636">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:30:58.637" starttime="20201001 14:30:58.636"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:30:58.637">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:30:58.637">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:30:58.637" starttime="20201001 14:30:58.637"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:58.638" starttime="20201001 14:30:58.622"></status>
</kw>
<status status="FAIL" endtime="20201001 14:30:58.638" starttime="20201001 14:30:58.621"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:00.639">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:00.639" starttime="20201001 14:31:00.639"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:00.640">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:00.641" starttime="20201001 14:31:00.640"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:00.654">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:00.654">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:00.654">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:00.654" starttime="20201001 14:31:00.641"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:00.655">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:00.655" starttime="20201001 14:31:00.655"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:00.656">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:00.656">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:00.656" starttime="20201001 14:31:00.655"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:00.656" starttime="20201001 14:31:00.639"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:00.656" starttime="20201001 14:31:00.638"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:02.658">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:02.658" starttime="20201001 14:31:02.658"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:02.659">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:02.659" starttime="20201001 14:31:02.659"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:02.674">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:02.674">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:02.674">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:02.674" starttime="20201001 14:31:02.659"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:02.675">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:02.675" starttime="20201001 14:31:02.674"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:02.675">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:02.675">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:02.675" starttime="20201001 14:31:02.675"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:02.676" starttime="20201001 14:31:02.658"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:02.676" starttime="20201001 14:31:02.657"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:04.677">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:04.677" starttime="20201001 14:31:04.677"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:04.678">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:04.678" starttime="20201001 14:31:04.678"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:04.692">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:04.692">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:04.692">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:04.692" starttime="20201001 14:31:04.679"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:04.692">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:04.693" starttime="20201001 14:31:04.692"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:04.693">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:04.693">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:04.693" starttime="20201001 14:31:04.693"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:04.694" starttime="20201001 14:31:04.677"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:04.694" starttime="20201001 14:31:04.676"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:06.695">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:06.695" starttime="20201001 14:31:06.695"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:06.696">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:06.696" starttime="20201001 14:31:06.696"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:06.710">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:06.710">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:06.710">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:06.710" starttime="20201001 14:31:06.696"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:06.711">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:06.711" starttime="20201001 14:31:06.711"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:06.712">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:06.712">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:06.712" starttime="20201001 14:31:06.711"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:06.712" starttime="20201001 14:31:06.695"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:06.712" starttime="20201001 14:31:06.694"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:08.714">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:08.714" starttime="20201001 14:31:08.713"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:08.715">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:08.715" starttime="20201001 14:31:08.715"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:08.729">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:08.729">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:08.730">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:08.730" starttime="20201001 14:31:08.715"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:08.730">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:08.730" starttime="20201001 14:31:08.730"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:08.731">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:08.731">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:08.731" starttime="20201001 14:31:08.730"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:08.731" starttime="20201001 14:31:08.714"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:08.732" starttime="20201001 14:31:08.713"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:10.733">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:10.733" starttime="20201001 14:31:10.732"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:10.734">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:10.734" starttime="20201001 14:31:10.734"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:10.756">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:10.756">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:10.756">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:10.756" starttime="20201001 14:31:10.734"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:10.757">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:10.757" starttime="20201001 14:31:10.757"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:10.758">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:10.758">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:10.758" starttime="20201001 14:31:10.757"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:10.758" starttime="20201001 14:31:10.733"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:10.758" starttime="20201001 14:31:10.732"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:12.760">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:12.760" starttime="20201001 14:31:12.759"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:12.761">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:12.761" starttime="20201001 14:31:12.761"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:12.799">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:12.799">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:12.799">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:12.799" starttime="20201001 14:31:12.761"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:12.800">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:12.800" starttime="20201001 14:31:12.800"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:12.801">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:12.801">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:12.801" starttime="20201001 14:31:12.800"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:12.801" starttime="20201001 14:31:12.760"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:12.801" starttime="20201001 14:31:12.759"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:14.803">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:14.803" starttime="20201001 14:31:14.802"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:14.804">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:14.804" starttime="20201001 14:31:14.803"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:14.817">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:14.818">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:14.818">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:14.818" starttime="20201001 14:31:14.804"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:14.818">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:14.818" starttime="20201001 14:31:14.818"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:14.819">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:14.819">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:14.819" starttime="20201001 14:31:14.819"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:14.819" starttime="20201001 14:31:14.803"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:14.820" starttime="20201001 14:31:14.802"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:16.821">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:16.821" starttime="20201001 14:31:16.821"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:16.822">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:16.822" starttime="20201001 14:31:16.822"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:16.847">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:16.847">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:16.847">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:16.847" starttime="20201001 14:31:16.823"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:16.848">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:16.848" starttime="20201001 14:31:16.847"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:16.848">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:16.849">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:16.849" starttime="20201001 14:31:16.848"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:16.849" starttime="20201001 14:31:16.821"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:16.849" starttime="20201001 14:31:16.820"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:18.851">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:18.851" starttime="20201001 14:31:18.850"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:18.852">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:18.852" starttime="20201001 14:31:18.852"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:18.866">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:18.866">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:18.866">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:18.866" starttime="20201001 14:31:18.852"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:18.867">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:18.867" starttime="20201001 14:31:18.866"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:18.867">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:18.868">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:18.868" starttime="20201001 14:31:18.867"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:18.868" starttime="20201001 14:31:18.851"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:18.868" starttime="20201001 14:31:18.849"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:20.870">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:20.871" starttime="20201001 14:31:20.870"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:20.872">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:20.872" starttime="20201001 14:31:20.871"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:20.887">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:20.887">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:20.887">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:20.887" starttime="20201001 14:31:20.872"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:20.888">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:20.888" starttime="20201001 14:31:20.887"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:20.888">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:20.889">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:20.889" starttime="20201001 14:31:20.888"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:20.889" starttime="20201001 14:31:20.871"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:20.889" starttime="20201001 14:31:20.869"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:22.890">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:22.890" starttime="20201001 14:31:22.890"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:22.892">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:22.892" starttime="20201001 14:31:22.891"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:22.913">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:22.913">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:22.913">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:22.913" starttime="20201001 14:31:22.892"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:22.914">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:22.914" starttime="20201001 14:31:22.913"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:22.914">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:22.915">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:22.915" starttime="20201001 14:31:22.914"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:22.915" starttime="20201001 14:31:22.891"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:22.915" starttime="20201001 14:31:22.889"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:24.916">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:24.916" starttime="20201001 14:31:24.916"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:24.918">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:24.918" starttime="20201001 14:31:24.917"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:24.932">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:24.932">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:24.932">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:24.932" starttime="20201001 14:31:24.918"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:24.933">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:24.933" starttime="20201001 14:31:24.932"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:24.933">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:24.933">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:24.933" starttime="20201001 14:31:24.933"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:24.934" starttime="20201001 14:31:24.917"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:24.934" starttime="20201001 14:31:24.915"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:26.935">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:26.935" starttime="20201001 14:31:26.935"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:26.936">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:26.936" starttime="20201001 14:31:26.936"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:26.950">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:26.951">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:26.951">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:26.951" starttime="20201001 14:31:26.937"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:26.951">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:26.952" starttime="20201001 14:31:26.951"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:26.952">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:26.952">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:26.952" starttime="20201001 14:31:26.952"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:26.953" starttime="20201001 14:31:26.935"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:26.953" starttime="20201001 14:31:26.934"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:28.955">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:28.955" starttime="20201001 14:31:28.954"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:28.956">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:28.956" starttime="20201001 14:31:28.955"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:28.997">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:28.997">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:28.997">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:28.997" starttime="20201001 14:31:28.956"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:28.998">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:28.998" starttime="20201001 14:31:28.998"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:28.999">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:28.999">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:28.999" starttime="20201001 14:31:28.998"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:28.999" starttime="20201001 14:31:28.955"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:29.000" starttime="20201001 14:31:28.953"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:31.001">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:31.001" starttime="20201001 14:31:31.001"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:31.002">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:31.002" starttime="20201001 14:31:31.002"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:31.016">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:31.016">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:31.016">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:31.016" starttime="20201001 14:31:31.002"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:31.017">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:31.017" starttime="20201001 14:31:31.017"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:31.017">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:31.018">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:31.018" starttime="20201001 14:31:31.017"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:31.018" starttime="20201001 14:31:31.001"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:31.018" starttime="20201001 14:31:31.000"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:33.020">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:33.020" starttime="20201001 14:31:33.019"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:33.021">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:33.021" starttime="20201001 14:31:33.020"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:33.035">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:33.035">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:33.036">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:33.036" starttime="20201001 14:31:33.021"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:33.036">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:33.036" starttime="20201001 14:31:33.036"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:33.037">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:33.037">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:33.037" starttime="20201001 14:31:33.036"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:33.037" starttime="20201001 14:31:33.020"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:33.037" starttime="20201001 14:31:33.019"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:35.039">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:35.039" starttime="20201001 14:31:35.039"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:35.040">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:35.040" starttime="20201001 14:31:35.040"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:35.054">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:35.054">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:35.054">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:35.054" starttime="20201001 14:31:35.041"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:35.055">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:35.055" starttime="20201001 14:31:35.055"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:35.056">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:35.056">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:35.056" starttime="20201001 14:31:35.055"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:35.056" starttime="20201001 14:31:35.039"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:35.056" starttime="20201001 14:31:35.038"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:37.058">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:37.058" starttime="20201001 14:31:37.057"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:37.059">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:37.059" starttime="20201001 14:31:37.059"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:37.073">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:37.073">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:37.073">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:37.073" starttime="20201001 14:31:37.059"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:37.074">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:37.074" starttime="20201001 14:31:37.074"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:37.075">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:37.075">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:37.075" starttime="20201001 14:31:37.074"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:37.075" starttime="20201001 14:31:37.058"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:37.076" starttime="20201001 14:31:37.057"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:39.077">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:39.077" starttime="20201001 14:31:39.077"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:39.079">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:39.079" starttime="20201001 14:31:39.078"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:39.093">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:39.094">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:39.094">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:39.094" starttime="20201001 14:31:39.079"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:39.094">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:39.094" starttime="20201001 14:31:39.094"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:39.095">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:39.095">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:39.095" starttime="20201001 14:31:39.095"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:39.096" starttime="20201001 14:31:39.078"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:39.096" starttime="20201001 14:31:39.076"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:41.097">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:41.097" starttime="20201001 14:31:41.097"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:41.098">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:41.098" starttime="20201001 14:31:41.098"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:41.121">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:41.121">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:41.121">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:41.121" starttime="20201001 14:31:41.098"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:41.122">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:41.122" starttime="20201001 14:31:41.122"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:41.123">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:41.123">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:41.123" starttime="20201001 14:31:41.122"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:41.123" starttime="20201001 14:31:41.097"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:41.124" starttime="20201001 14:31:41.096"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:43.125">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:43.125" starttime="20201001 14:31:43.124"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:43.126">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:43.126" starttime="20201001 14:31:43.126"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:43.141">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:43.141">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:43.141">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:43.141" starttime="20201001 14:31:43.126"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:43.142">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:43.142" starttime="20201001 14:31:43.142"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:43.143">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:43.143">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:43.143" starttime="20201001 14:31:43.142"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:43.143" starttime="20201001 14:31:43.125"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:43.143" starttime="20201001 14:31:43.124"></status>
</kw>
<kw name="Create Subscriber">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.145">${SubscriberDict} = {'status': 'pre-provisioned', 'c_tag': 111, 's_tag': 222, 'name': 'QQClient0', 'onu_device': 'PSMO00000000', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" endtime="20201001 14:31:45.145" starttime="20201001 14:31:45.144"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.146">${data} = {"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" endtime="20201001 14:31:45.146" starttime="20201001 14:31:45.145"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.195">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Content-Length': '177', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"status": "pre-provisioned", "c_tag": 111, "s_tag": 222, "name": "QQClient0", "onu_device": "PSMO00000000", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:45.195">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:45.195">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:45.195" starttime="20201001 14:31:45.146"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:45.196">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" endtime="20201001 14:31:45.196" starttime="20201001 14:31:45.195"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:45.196">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:45.197">400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:45.197" starttime="20201001 14:31:45.196"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:45.197" starttime="20201001 14:31:45.145"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:45.197" starttime="20201001 14:31:45.144"></status>
</kw>
<msg level="FAIL" timestamp="20201001 14:31:45.197">Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:45.197" starttime="20201001 14:30:44.443"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Whitelist</arg>
</arguments>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.199">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:45.199" starttime="20201001 14:31:45.198"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.200">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:45.200" starttime="20201001 14:31:45.199"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.258">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:45.258">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:45.259">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:45.259" starttime="20201001 14:31:45.200"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:45.259">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:45.259" starttime="20201001 14:31:45.259"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:45.260">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:45.260">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:45.260" starttime="20201001 14:31:45.260"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:45.261">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:45.261" starttime="20201001 14:31:45.199"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:45.261">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:45.261">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:45.261" starttime="20201001 14:31:45.261"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:45.262">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:45.262" starttime="20201001 14:31:45.262"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:45.263" starttime="20201001 14:31:45.198"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:47.264">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:47.264" starttime="20201001 14:31:47.264"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:47.265">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:47.265" starttime="20201001 14:31:47.265"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:47.281">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:47.281">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:47.281">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:47.281" starttime="20201001 14:31:47.265"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:47.282">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:47.282" starttime="20201001 14:31:47.281"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:47.282">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:47.283">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:47.283" starttime="20201001 14:31:47.282"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:47.283">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:47.283" starttime="20201001 14:31:47.264"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:47.284">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:47.284">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:47.284" starttime="20201001 14:31:47.283"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:47.284">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:47.284" starttime="20201001 14:31:47.284"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:47.285" starttime="20201001 14:31:47.263"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:49.286">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:49.286" starttime="20201001 14:31:49.286"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:49.287">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:49.287" starttime="20201001 14:31:49.287"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:49.303">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:49.303">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:49.303">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:49.303" starttime="20201001 14:31:49.288"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:49.303">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:49.304" starttime="20201001 14:31:49.303"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:49.304">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:49.304">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:49.304" starttime="20201001 14:31:49.304"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:49.305">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:49.305" starttime="20201001 14:31:49.286"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:49.305">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:49.305">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:49.305" starttime="20201001 14:31:49.305"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:49.306">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:49.306" starttime="20201001 14:31:49.306"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:49.306" starttime="20201001 14:31:49.285"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:51.308">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:51.308" starttime="20201001 14:31:51.308"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:51.309">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:51.309" starttime="20201001 14:31:51.309"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:51.325">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:51.325">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:51.325">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:51.325" starttime="20201001 14:31:51.309"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:51.326">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:51.326" starttime="20201001 14:31:51.325"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:51.326">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:51.327">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:51.327" starttime="20201001 14:31:51.326"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:51.327">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:51.327" starttime="20201001 14:31:51.308"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:51.328">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:51.328">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:51.328" starttime="20201001 14:31:51.327"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:51.328">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:51.328" starttime="20201001 14:31:51.328"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:51.329" starttime="20201001 14:31:51.307"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:53.330">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:53.330" starttime="20201001 14:31:53.330"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:53.331">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:53.331" starttime="20201001 14:31:53.331"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:53.346">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:53.347">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:53.347">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:53.347" starttime="20201001 14:31:53.331"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:53.347">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:53.347" starttime="20201001 14:31:53.347"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:53.348">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:53.348">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:53.348" starttime="20201001 14:31:53.348"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:53.349">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:53.349" starttime="20201001 14:31:53.330"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:53.349">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:53.349">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:53.349" starttime="20201001 14:31:53.349"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:53.350">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:53.350" starttime="20201001 14:31:53.350"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:53.350" starttime="20201001 14:31:53.329"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:55.352">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:55.352" starttime="20201001 14:31:55.351"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:55.353">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:55.353" starttime="20201001 14:31:55.353"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:55.369">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:55.369">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:55.369">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:55.369" starttime="20201001 14:31:55.353"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:55.370">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:55.370" starttime="20201001 14:31:55.369"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:55.370">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:55.371">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:55.371" starttime="20201001 14:31:55.370"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:55.371">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:55.371" starttime="20201001 14:31:55.352"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:55.372">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:55.372">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:55.372" starttime="20201001 14:31:55.371"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:55.372">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:55.372" starttime="20201001 14:31:55.372"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:55.373" starttime="20201001 14:31:55.351"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:57.374">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:57.374" starttime="20201001 14:31:57.373"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:57.375">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:57.375" starttime="20201001 14:31:57.375"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:57.398">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:57.398">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:57.398">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:57.398" starttime="20201001 14:31:57.375"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:57.399">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:57.399" starttime="20201001 14:31:57.398"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:57.399">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:57.399">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:57.400" starttime="20201001 14:31:57.399"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:57.400">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:57.400" starttime="20201001 14:31:57.374"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:57.401">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:57.401">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:57.401" starttime="20201001 14:31:57.400"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:57.401">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:57.401" starttime="20201001 14:31:57.401"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:57.402" starttime="20201001 14:31:57.373"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:59.403">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:31:59.403" starttime="20201001 14:31:59.403"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:59.404">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:31:59.404" starttime="20201001 14:31:59.404"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:59.421">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:59.421">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:31:59.422">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:31:59.422" starttime="20201001 14:31:59.404"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:59.422">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:31:59.422" starttime="20201001 14:31:59.422"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:59.423">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:31:59.423">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:31:59.423" starttime="20201001 14:31:59.423"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:31:59.424">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:31:59.424" starttime="20201001 14:31:59.403"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:31:59.424">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:31:59.424">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:31:59.425" starttime="20201001 14:31:59.424"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:31:59.425">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:31:59.425" starttime="20201001 14:31:59.425"></status>
</kw>
<status status="FAIL" endtime="20201001 14:31:59.425" starttime="20201001 14:31:59.402"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:01.427">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:01.427" starttime="20201001 14:32:01.426"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:01.428">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:01.428" starttime="20201001 14:32:01.428"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:01.472">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:01.472">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:01.472">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:01.472" starttime="20201001 14:32:01.428"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:01.473">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:01.473" starttime="20201001 14:32:01.472"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:01.474">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:01.474">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:01.474" starttime="20201001 14:32:01.473"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:01.474">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:01.474" starttime="20201001 14:32:01.427"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:01.475">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:01.475">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:01.475" starttime="20201001 14:32:01.474"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:01.476">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:01.476" starttime="20201001 14:32:01.475"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:01.476" starttime="20201001 14:32:01.426"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:03.477">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:03.477" starttime="20201001 14:32:03.477"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:03.478">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:03.479" starttime="20201001 14:32:03.478"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:03.494">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:03.494">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:03.494">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:03.494" starttime="20201001 14:32:03.479"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:03.495">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:03.495" starttime="20201001 14:32:03.495"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:03.496">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:03.496">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:03.496" starttime="20201001 14:32:03.495"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:03.496">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:03.496" starttime="20201001 14:32:03.478"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:03.497">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:03.497">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:03.497" starttime="20201001 14:32:03.496"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:03.498">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:03.498" starttime="20201001 14:32:03.497"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:03.498" starttime="20201001 14:32:03.476"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:05.499">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:05.499" starttime="20201001 14:32:05.499"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:05.500">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:05.501" starttime="20201001 14:32:05.500"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:05.516">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:05.516">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:05.516">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:05.516" starttime="20201001 14:32:05.501"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:05.517">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:05.517" starttime="20201001 14:32:05.516"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:05.517">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:05.517">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:05.517" starttime="20201001 14:32:05.517"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:05.518">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:05.518" starttime="20201001 14:32:05.500"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:05.518">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:05.518">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:05.519" starttime="20201001 14:32:05.518"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:05.519">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:05.519" starttime="20201001 14:32:05.519"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:05.519" starttime="20201001 14:32:05.498"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:07.521">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:07.521" starttime="20201001 14:32:07.520"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:07.522">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:07.522" starttime="20201001 14:32:07.522"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:07.557">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:07.557">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:07.557">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:07.557" starttime="20201001 14:32:07.522"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:07.558">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:07.558" starttime="20201001 14:32:07.557"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:07.558">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:07.558">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:07.558" starttime="20201001 14:32:07.558"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:07.559">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:07.559" starttime="20201001 14:32:07.521"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:07.560">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:07.560">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:07.560" starttime="20201001 14:32:07.559"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:07.560">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:07.560" starttime="20201001 14:32:07.560"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:07.561" starttime="20201001 14:32:07.520"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:09.562">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:09.562" starttime="20201001 14:32:09.561"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:09.563">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:09.563" starttime="20201001 14:32:09.563"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:09.578">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:09.579">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:09.579">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:09.579" starttime="20201001 14:32:09.563"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:09.579">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:09.579" starttime="20201001 14:32:09.579"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:09.580">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:09.580">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:09.580" starttime="20201001 14:32:09.580"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:09.581">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:09.581" starttime="20201001 14:32:09.562"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:09.581">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:09.581">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:09.581" starttime="20201001 14:32:09.581"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:09.582">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:09.582" starttime="20201001 14:32:09.582"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:09.582" starttime="20201001 14:32:09.561"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:11.584">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:11.584" starttime="20201001 14:32:11.583"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:11.585">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:11.585" starttime="20201001 14:32:11.584"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:11.601">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:11.601">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:11.601">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:11.601" starttime="20201001 14:32:11.585"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:11.602">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:11.602" starttime="20201001 14:32:11.601"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:11.602">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:11.603">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:11.603" starttime="20201001 14:32:11.602"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:11.603">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:11.603" starttime="20201001 14:32:11.584"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:11.604">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:11.604">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:11.604" starttime="20201001 14:32:11.603"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:11.604">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:11.605" starttime="20201001 14:32:11.604"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:11.605" starttime="20201001 14:32:11.583"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:13.606">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:13.606" starttime="20201001 14:32:13.606"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:13.607">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:13.607" starttime="20201001 14:32:13.607"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:13.634">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:13.634">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:13.634">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:13.634" starttime="20201001 14:32:13.608"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:13.635">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:13.635" starttime="20201001 14:32:13.635"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:13.636">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:13.636">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:13.636" starttime="20201001 14:32:13.635"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:13.636">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:13.636" starttime="20201001 14:32:13.606"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:13.637">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:13.637">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:13.637" starttime="20201001 14:32:13.637"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:13.638">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:13.638" starttime="20201001 14:32:13.637"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:13.638" starttime="20201001 14:32:13.605"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:15.639">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:15.640" starttime="20201001 14:32:15.639"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:15.641">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:15.641" starttime="20201001 14:32:15.640"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:15.660">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:15.660">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:15.660">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:15.660" starttime="20201001 14:32:15.641"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:15.661">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:15.661" starttime="20201001 14:32:15.660"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:15.661">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:15.661">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:15.661" starttime="20201001 14:32:15.661"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:15.662">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:15.662" starttime="20201001 14:32:15.640"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:15.662">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:15.663">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:15.663" starttime="20201001 14:32:15.662"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:15.663">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:15.663" starttime="20201001 14:32:15.663"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:15.663" starttime="20201001 14:32:15.639"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:17.665">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:17.665" starttime="20201001 14:32:17.664"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:17.666">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:17.666" starttime="20201001 14:32:17.666"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:17.699">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:17.700">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:17.700">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:17.700" starttime="20201001 14:32:17.666"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:17.700">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:17.701" starttime="20201001 14:32:17.700"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:17.701">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:17.701">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:17.701" starttime="20201001 14:32:17.701"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:17.702">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:17.702" starttime="20201001 14:32:17.665"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:17.702">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:17.702">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:17.703" starttime="20201001 14:32:17.702"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:17.703">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:17.703" starttime="20201001 14:32:17.703"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:17.703" starttime="20201001 14:32:17.664"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:19.705">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:19.705" starttime="20201001 14:32:19.704"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:19.706">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:19.706" starttime="20201001 14:32:19.706"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:19.733">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:19.733">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:19.733">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:19.733" starttime="20201001 14:32:19.706"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:19.734">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:19.734" starttime="20201001 14:32:19.733"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:19.734">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:19.734">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:19.734" starttime="20201001 14:32:19.734"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:19.735">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:19.735" starttime="20201001 14:32:19.705"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:19.736">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:19.736">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:19.736" starttime="20201001 14:32:19.735"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:19.736">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:19.736" starttime="20201001 14:32:19.736"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:19.737" starttime="20201001 14:32:19.704"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:21.738">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:21.738" starttime="20201001 14:32:21.738"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:21.739">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:21.739" starttime="20201001 14:32:21.739"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:21.755">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:21.755">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:21.755">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:21.755" starttime="20201001 14:32:21.740"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:21.755">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:21.756" starttime="20201001 14:32:21.755"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:21.756">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:21.756">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:21.756" starttime="20201001 14:32:21.756"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:21.757">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:21.757" starttime="20201001 14:32:21.738"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:21.757">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:21.758">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:21.758" starttime="20201001 14:32:21.757"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:21.758">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:21.758" starttime="20201001 14:32:21.758"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:21.759" starttime="20201001 14:32:21.737"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:23.760">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:23.760" starttime="20201001 14:32:23.760"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:23.761">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:23.761" starttime="20201001 14:32:23.761"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:23.777">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:23.777">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:23.777">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:23.777" starttime="20201001 14:32:23.761"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:23.778">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:23.778" starttime="20201001 14:32:23.778"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:23.779">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:23.779">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:23.779" starttime="20201001 14:32:23.778"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:23.779">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:23.779" starttime="20201001 14:32:23.760"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:23.780">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:23.780">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:23.780" starttime="20201001 14:32:23.779"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:23.781">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:23.781" starttime="20201001 14:32:23.780"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:23.781" starttime="20201001 14:32:23.759"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:25.782">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:25.782" starttime="20201001 14:32:25.782"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:25.783">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:25.783" starttime="20201001 14:32:25.783"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:25.809">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:25.809">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:25.810">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:25.810" starttime="20201001 14:32:25.784"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:25.811">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:25.811" starttime="20201001 14:32:25.810"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:25.811">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:25.812">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:25.812" starttime="20201001 14:32:25.811"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:25.812">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:25.812" starttime="20201001 14:32:25.782"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:25.813">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:25.813">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:25.813" starttime="20201001 14:32:25.812"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:25.813">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:25.813" starttime="20201001 14:32:25.813"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:25.814" starttime="20201001 14:32:25.781"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:27.815">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:27.815" starttime="20201001 14:32:27.815"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:27.816">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:27.816" starttime="20201001 14:32:27.816"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:27.841">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:27.841">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:27.841">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:27.841" starttime="20201001 14:32:27.817"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:27.842">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:27.842" starttime="20201001 14:32:27.841"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:27.842">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:27.843">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:27.843" starttime="20201001 14:32:27.842"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:27.843">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:27.843" starttime="20201001 14:32:27.815"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:27.844">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:27.844">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:27.844" starttime="20201001 14:32:27.843"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:27.844">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:27.845" starttime="20201001 14:32:27.844"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:27.845" starttime="20201001 14:32:27.814"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:29.846">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:29.846" starttime="20201001 14:32:29.846"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:29.847">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:29.847" starttime="20201001 14:32:29.847"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:29.863">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:29.863">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:29.863">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:29.863" starttime="20201001 14:32:29.847"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:29.864">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:29.864" starttime="20201001 14:32:29.863"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:29.864">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:29.864">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:29.864" starttime="20201001 14:32:29.864"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:29.865">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:29.865" starttime="20201001 14:32:29.846"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:29.865">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:29.866">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:29.866" starttime="20201001 14:32:29.865"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:29.866">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:29.866" starttime="20201001 14:32:29.866"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:29.866" starttime="20201001 14:32:29.845"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:31.868">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:31.868" starttime="20201001 14:32:31.867"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:31.869">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:31.869" starttime="20201001 14:32:31.869"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:31.906">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:31.906">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:31.906">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:31.906" starttime="20201001 14:32:31.869"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:31.907">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:31.907" starttime="20201001 14:32:31.906"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:31.908">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:31.908">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:31.908" starttime="20201001 14:32:31.907"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:31.908">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:31.908" starttime="20201001 14:32:31.868"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:31.909">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:31.909">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:31.909" starttime="20201001 14:32:31.908"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:31.909">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:31.910" starttime="20201001 14:32:31.909"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:31.910" starttime="20201001 14:32:31.867"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:33.911">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:33.911" starttime="20201001 14:32:33.911"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:33.912">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:33.912" starttime="20201001 14:32:33.912"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:33.928">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:33.928">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:33.928">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:33.928" starttime="20201001 14:32:33.913"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:33.929">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:33.929" starttime="20201001 14:32:33.928"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:33.929">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:33.929">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:33.929" starttime="20201001 14:32:33.929"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:33.930">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:33.930" starttime="20201001 14:32:33.911"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:33.930">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:33.931">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:33.931" starttime="20201001 14:32:33.930"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:33.931">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:33.931" starttime="20201001 14:32:33.931"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:33.932" starttime="20201001 14:32:33.910"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:35.933">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:35.933" starttime="20201001 14:32:35.932"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:35.934">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:35.934" starttime="20201001 14:32:35.934"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:35.949">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:35.949">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:35.949">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:35.949" starttime="20201001 14:32:35.934"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:35.950">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:35.950" starttime="20201001 14:32:35.949"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:35.951">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:35.951">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:35.951" starttime="20201001 14:32:35.950"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:35.951">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:35.951" starttime="20201001 14:32:35.933"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:35.952">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:35.952">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:35.952" starttime="20201001 14:32:35.952"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:35.953">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:35.953" starttime="20201001 14:32:35.952"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:35.953" starttime="20201001 14:32:35.932"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:37.954">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:37.954" starttime="20201001 14:32:37.954"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:37.956">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:37.956" starttime="20201001 14:32:37.955"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:37.971">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:37.971">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:37.971">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:37.971" starttime="20201001 14:32:37.956"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:37.972">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:37.972" starttime="20201001 14:32:37.972"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:37.973">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:37.973">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:37.973" starttime="20201001 14:32:37.972"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:37.973">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:37.973" starttime="20201001 14:32:37.955"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:37.974">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:37.974">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:37.974" starttime="20201001 14:32:37.973"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:37.975">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:37.975" starttime="20201001 14:32:37.974"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:37.975" starttime="20201001 14:32:37.953"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:39.976">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:39.976" starttime="20201001 14:32:39.976"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:39.977">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:39.977" starttime="20201001 14:32:39.977"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:40.005">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:40.005">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:40.005">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:40.005" starttime="20201001 14:32:39.978"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:40.006">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:40.006" starttime="20201001 14:32:40.005"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:40.006">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:40.007">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:40.007" starttime="20201001 14:32:40.006"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:40.007">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:40.007" starttime="20201001 14:32:39.976"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:40.008">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:40.008">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:40.008" starttime="20201001 14:32:40.007"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:40.009">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:40.009" starttime="20201001 14:32:40.008"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:40.009" starttime="20201001 14:32:39.975"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:42.010">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:42.010" starttime="20201001 14:32:42.010"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:42.011">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:42.012" starttime="20201001 14:32:42.011"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:42.027">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:42.027">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:42.027">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:42.027" starttime="20201001 14:32:42.012"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:42.027">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:42.028" starttime="20201001 14:32:42.027"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:42.028">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:42.028">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:42.028" starttime="20201001 14:32:42.028"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:42.029">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:42.029" starttime="20201001 14:32:42.011"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:42.029">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:42.029">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:42.029" starttime="20201001 14:32:42.029"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:42.030">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:42.030" starttime="20201001 14:32:42.030"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:42.030" starttime="20201001 14:32:42.009"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:44.032">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:44.032" starttime="20201001 14:32:44.031"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:44.033">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:44.033" starttime="20201001 14:32:44.032"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:44.070">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:44.070">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:44.070">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:44.070" starttime="20201001 14:32:44.033"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:44.071">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:44.071" starttime="20201001 14:32:44.071"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:44.072">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:44.072">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:44.072" starttime="20201001 14:32:44.072"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:44.072">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:44.072" starttime="20201001 14:32:44.032"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:44.073">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:44.073">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:44.073" starttime="20201001 14:32:44.073"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:44.074">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:44.074" starttime="20201001 14:32:44.073"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:44.074" starttime="20201001 14:32:44.031"></status>
</kw>
<kw name="Create Whitelist">
<kw library="CORDRobot" name="List To Dict">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.076">${AttWhiteListDict} = {'pon_port_id': 1, 'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000'}</msg>
<status status="PASS" endtime="20201001 14:32:46.076" starttime="20201001 14:32:46.075"></status>
</kw>
<kw library="XOS" name="CORD Post">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.077">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}</msg>
<status status="PASS" endtime="20201001 14:32:46.077" starttime="20201001 14:32:46.076"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.105">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Content-Length': '102', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "owner_id": 2, "pon_port_id": 1}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:46.105">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:32:46.105">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20201001 14:32:46.105" starttime="20201001 14:32:46.077"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.106">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" endtime="20201001 14:32:46.106" starttime="20201001 14:32:46.106"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.107">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:32:46.107">500 != 200</msg>
<status status="FAIL" endtime="20201001 14:32:46.107" starttime="20201001 14:32:46.106"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:46.107">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" endtime="20201001 14:32:46.107" starttime="20201001 14:32:46.076"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.108">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:32:46.108">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:46.108" starttime="20201001 14:32:46.107"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.109">${whitelist_id} = 1</msg>
<status status="PASS" endtime="20201001 14:32:46.109" starttime="20201001 14:32:46.108"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:46.109" starttime="20201001 14:32:46.075"></status>
</kw>
<msg level="FAIL" timestamp="20201001 14:32:46.109">Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</msg>
<status status="FAIL" endtime="20201001 14:32:46.109" starttime="20201001 14:31:45.198"></status>
</kw>
<kw name="Subscriber Ready to Authenticate">
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>15s</arg>
<arg>Validate ONU States</arg>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="ONU" name="Validate ONU States">
<doc>Check that ONU has the expected 'operational_status' and 'admin_status'</doc>
<arguments>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="ONU" name="ONU Status Check">
<doc>Returns "operational_status" and "admin_status" of
a particular ONU device from "onu device list"</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${operational_status}</var>
<var>${admin_status}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>ONU_DEVICE</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.149">get url... http://127.0.0.1:30006/xosapi/v1/volt/onudevices
Test passed: 200: {"items": [{"volt_service_instances_ids": [], "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1601560398.631499, \"exponent\": 0}", "connect_status": "REACHABLE", "device_type": "ponsim_onu", "backend_status": "OK", "id": 1, "backend_need_delete": true, "self_content_type_id": "volt.onudevice_decl", "backend_code": 1, "pon_port_id": 1, "serial_number": "PSMO00000000", "enacted": 1601560395.255242, "no_sync": false, "updated": 1601560395.255242, "vendor": "ponsim", "deleted": false, "ani_ports_ids": [4], "policy_status": "Policy in process", "lazy_blocked": false, "oper_status": "ACTIVE", "admin_state": "ENABLED", "backend_need_reap": false, "policy_code": 0, "leaf_model_name": "ONUDevice", "created": 1601560395.261057, "write_protect": false, "no_policy": false, "reason": "", "uni_ports_ids": [3], "device_id": "000153e96afe4b98", "xos_managed": false, "class_names": "ONUDevice,ONUDevice_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.149">${json_result} = {'items': [{'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_...</msg>
<status status="PASS" endtime="20201001 14:32:46.149" starttime="20201001 14:32:46.111"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.150">{'items': [{'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_ids': [4], 'backend_code': 1, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'enacted': 1601560395.255242, 'backend_status': 'OK', 'leaf_model_name': 'ONUDevice', 'pon_port_id': 1, 'backend_need_delete_policy': False, 'created': 1601560395.261057, 'xos_managed': False, 'backend_need_reap': False, 'connect_status': 'REACHABLE', 'oper_status': 'ACTIVE', 'backend_need_delete': True, 'device_id': '000153e96afe4b98', 'write_protect': False, 'id': 1, 'uni_ports_ids': [3], 'volt_service_instances_ids': [], 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'reason': '', 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:32:46.150" starttime="20201001 14:32:46.149"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.150">${json_result_list} = [{'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_ids': [4],...</msg>
<status status="PASS" endtime="20201001 14:32:46.150" starttime="20201001 14:32:46.150"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.151">data {'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_ids': [4], 'backend_code': 1, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'enacted': 1601560395.255242, 'backend_status': 'OK', 'leaf_model_name': 'ONUDevice', 'pon_port_id': 1, 'backend_need_delete_policy': False, 'created': 1601560395.261057, 'xos_managed': False, 'backend_need_reap': False, 'connect_status': 'REACHABLE', 'oper_status': 'ACTIVE', 'backend_need_delete': True, 'device_id': '000153e96afe4b98', 'write_protect': False, 'id': 1, 'uni_ports_ids': [3], 'volt_service_instances_ids': [], 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'reason': '', 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_ids': [4], 'backend_code': 1, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'enacted': 1601560395.255242, 'backend_status': 'OK', 'leaf_model_name': 'ONUDevice', 'pon_port_id': 1, 'backend_need_delete_policy': False, 'created': 1601560395.261057, 'xos_managed': False, 'backend_need_reap': False, 'connect_status': 'REACHABLE', 'oper_status': 'ACTIVE', 'backend_need_delete': True, 'device_id': '000153e96afe4b98', 'write_protect': False, 'id': 1, 'uni_ports_ids': [3], 'volt_service_instances_ids': [], 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'reason': '', 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.151">${getJsonDict} = {'self_content_type_id': 'volt.onudevice_decl', 'updated': 1601560395.255242, 'serial_number': 'PSMO00000000', 'policy_code': 0, 'vendor': 'ponsim', 'device_type': 'ponsim_onu', 'ani_ports_ids': [4], ...</msg>
<status status="PASS" endtime="20201001 14:32:46.151" starttime="20201001 14:32:46.150"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>oper_status</arg>
</arguments>
<assign>
<var>${operational_status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.151">${operational_status} = ACTIVE</msg>
<status status="PASS" endtime="20201001 14:32:46.151" starttime="20201001 14:32:46.151"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>admin_state</arg>
</arguments>
<assign>
<var>${admin_status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.152">${admin_status} = ENABLED</msg>
<status status="PASS" endtime="20201001 14:32:46.152" starttime="20201001 14:32:46.152"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:46.152">${operational_status} = ACTIVE</msg>
<msg level="INFO" timestamp="20201001 14:32:46.152">${admin_status} = ENABLED</msg>
<status status="PASS" endtime="20201001 14:32:46.152" starttime="20201001 14:32:46.110"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${operational_status}</arg>
<arg>${expected_op_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.153" starttime="20201001 14:32:46.152"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${admin_status}</arg>
<arg>${expected_admin_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.153" starttime="20201001 14:32:46.153"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.154" starttime="20201001 14:32:46.110"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.154" starttime="20201001 14:32:46.110"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw library="ATTWorkFlowDriver" name="Validate ATT Workflow Driver SI">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw library="ATTWorkFlowDriver" name="Service Instance Status Check">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.193">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.193">${json_result} = {'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO...</msg>
<status status="PASS" endtime="20201001 14:32:46.194" starttime="20201001 14:32:46.155"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.194">{'items': [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:32:46.194" starttime="20201001 14:32:46.194"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.195">${json_result_list} = [{'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000',...</msg>
<status status="PASS" endtime="20201001 14:32:46.195" starttime="20201001 14:32:46.194"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.195">data {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', 'policy_code': 1, 'policy_status': 'done', 'subscribed_links_ids': [], 'provided_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'backend_code': 0, 'changed_by_policy': 1601560398.9453, 'owner_id': 2, 'ports_ids': [], 'xos_managed': True, 'created': 1601560395.823846, 'mac_address': '', 'backend_status': 'Provisioning in progress', 'status_message': 'ONU has been validated - Awaiting Authentication', 'authentication_state': 'AWAITING', 'backend_need_delete_policy': False, 'of_dpid': 'of:0000d0d3e158fede', 'link_deleted_count': 0, 'uni_port_id': 128, 'service_instance_attributes_ids': [], 'backend_need_reap': False, 'backend_need_delete': False, 'ip_address': '', 'admin_onu_state': 'ENABLED', 'write_protect': False, 'id': 55, 'oper_onu_status': 'ENABLED', 'lazy_blocked': False, 'backend_register': '{}', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'child_serviceinstances_ids': [], 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.196">${getJsonDict} = {'policed': 1601560395.817033, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'dhcp_state': 'AWAITING', 'updated': 1601560395.817033, 'serial_number': 'PSMO00000000', ...</msg>
<status status="PASS" endtime="20201001 14:32:46.196" starttime="20201001 14:32:46.195"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.196">${onu_state} = ENABLED</msg>
<status status="PASS" endtime="20201001 14:32:46.196" starttime="20201001 14:32:46.196"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.197">${authentication_state} = AWAITING</msg>
<status status="PASS" endtime="20201001 14:32:46.197" starttime="20201001 14:32:46.196"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.197">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" endtime="20201001 14:32:46.197" starttime="20201001 14:32:46.197"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:46.197">${onu_state} = ENABLED</msg>
<msg level="INFO" timestamp="20201001 14:32:46.197">${authentication_status} = AWAITING</msg>
<msg level="INFO" timestamp="20201001 14:32:46.197">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" endtime="20201001 14:32:46.198" starttime="20201001 14:32:46.155"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.198" starttime="20201001 14:32:46.198"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.199" starttime="20201001 14:32:46.198"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.200" starttime="20201001 14:32:46.199"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.200" starttime="20201001 14:32:46.199"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.200" starttime="20201001 14:32:46.154"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.200" starttime="20201001 14:32:46.154"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate Subscriber Status</arg>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="Subscriber" name="Validate Subscriber Status">
<doc>Check that a subscriber has the expected status</doc>
<arguments>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw library="Subscriber" name="Subscriber Status Check">
<doc>Returns Status from Subscribers List for a particular ONU device</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw library="CORDRobot" name="Api Get">
<arguments>
<arg>VOLT_SUBSCRIBER</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.268">get url... http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers
Test passed: 200: {"items": [{"ips_ids": [], "policed": 1601560398.894617, "c_tag": 111, "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1601560399.529146, \"exponent\": 0}", "backend_status": "OK", "changed_by_policy": 1601560398.894742, "id": 54, "s_tag": 222, "backend_need_delete": true, "provided_links_ids": [], "child_serviceinstances_ids": [], "self_content_type_id": "rcord.rcordsubscriber_decl", "backend_code": 1, "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "ports_ids": [], "enacted": 1601560398.894742, "no_sync": false, "owner_id": 1, "status": "awaiting-auth", "updated": 1601560398.894617, "downstream_bps_id": 2, "deleted": false, "policy_status": "done", "lazy_blocked": false, "tech_profile_id": 64, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "RCORDSubscriber", "name": "QQClient0-0", "created": 1601560392.558882, "write_protect": false, "no_policy": false, "upstream_bps_id": 2, "creator_id": 1, "xos_managed": true, "onu_device": "PSMO00000000", "subscribed_links_ids": [], "class_names": "RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.268">${json_result} = {'items': [{'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bp...</msg>
<status status="PASS" endtime="20201001 14:32:46.268" starttime="20201001 14:32:46.202"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:32:46.269">{'items': [{'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bps_id': 2, 'created': 1601560392.558882, 'policy_status': 'done', 'subscribed_links_ids': [], 'id': 54, 'status': 'awaiting-auth', 'backend_code': 1, 'updated': 1601560398.894617, 'changed_by_policy': 1601560398.894742, 'owner_id': 1, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'enacted': 1601560398.894742, 'mac_address': '', 'backend_status': 'OK', 'leaf_model_name': 'RCORDSubscriber', 'tech_profile_id': 64, 'backend_need_delete_policy': False, 'link_deleted_count': 0, 'xos_managed': True, 'service_instance_attributes_ids': [], 's_tag': 222, 'name': 'QQClient0-0', 'backend_need_delete': True, 'downstream_bps_id': 2, 'write_protect': False, 'provided_links_ids': [], 'creator_id': 1, 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'child_serviceinstances_ids': [], 'onu_device': 'PSMO00000000', 'deleted': False, 'no_sync': False, 'no_policy': False}]}</msg>
<status status="PASS" endtime="20201001 14:32:46.269" starttime="20201001 14:32:46.268"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.269">${json_result_list} = [{'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bps_id': 2, ...</msg>
<status status="PASS" endtime="20201001 14:32:46.269" starttime="20201001 14:32:46.269"></status>
</kw>
<kw library="CORDRobot" name="Get Dict From List Of Dict">
<arguments>
<arg>${json_result_list}</arg>
<arg>onu_device</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.270">data {'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bps_id': 2, 'created': 1601560392.558882, 'policy_status': 'done', 'subscribed_links_ids': [], 'id': 54, 'status': 'awaiting-auth', 'backend_code': 1, 'updated': 1601560398.894617, 'changed_by_policy': 1601560398.894742, 'owner_id': 1, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'enacted': 1601560398.894742, 'mac_address': '', 'backend_status': 'OK', 'leaf_model_name': 'RCORDSubscriber', 'tech_profile_id': 64, 'backend_need_delete_policy': False, 'link_deleted_count': 0, 'xos_managed': True, 'service_instance_attributes_ids': [], 's_tag': 222, 'name': 'QQClient0-0', 'backend_need_delete': True, 'downstream_bps_id': 2, 'write_protect': False, 'provided_links_ids': [], 'creator_id': 1, 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'child_serviceinstances_ids': [], 'onu_device': 'PSMO00000000', 'deleted': False, 'no_sync': False, 'no_policy': False}
return_dict {'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bps_id': 2, 'created': 1601560392.558882, 'policy_status': 'done', 'subscribed_links_ids': [], 'id': 54, 'status': 'awaiting-auth', 'backend_code': 1, 'updated': 1601560398.894617, 'changed_by_policy': 1601560398.894742, 'owner_id': 1, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'enacted': 1601560398.894742, 'mac_address': '', 'backend_status': 'OK', 'leaf_model_name': 'RCORDSubscriber', 'tech_profile_id': 64, 'backend_need_delete_policy': False, 'link_deleted_count': 0, 'xos_managed': True, 'service_instance_attributes_ids': [], 's_tag': 222, 'name': 'QQClient0-0', 'backend_need_delete': True, 'downstream_bps_id': 2, 'write_protect': False, 'provided_links_ids': [], 'creator_id': 1, 'lazy_blocked': False, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'child_serviceinstances_ids': [], 'onu_device': 'PSMO00000000', 'deleted': False, 'no_sync': False, 'no_policy': False}</msg>
<msg level="INFO" timestamp="20201001 14:32:46.270">${getJsonDict} = {'policed': 1601560398.894617, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'c_tag': 111, 'ports_ids': [], 'backend_need_reap': False, 'ips_ids': [], 'policy_code': 1, 'upstream_bps_id': 2, '...</msg>
<status status="PASS" endtime="20201001 14:32:46.270" starttime="20201001 14:32:46.269"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:32:46.271">${status} = awaiting-auth</msg>
<status status="PASS" endtime="20201001 14:32:46.271" starttime="20201001 14:32:46.270"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:32:46.271">${status} = awaiting-auth</msg>
<status status="PASS" endtime="20201001 14:32:46.271" starttime="20201001 14:32:46.201"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${accepted_status}' == '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>ELSE</arg>
<arg>Should Contain Any</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>${accepted_status}</arg>
</arguments>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" endtime="20201001 14:32:46.272" starttime="20201001 14:32:46.272"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.272" starttime="20201001 14:32:46.271"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.272" starttime="20201001 14:32:46.200"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.273" starttime="20201001 14:32:46.200"></status>
</kw>
<status status="PASS" endtime="20201001 14:32:46.273" starttime="20201001 14:32:46.109"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:46.273" starttime="20201001 14:30:44.407"></status>
</kw>
<kw library="RequestsLibrary" name="Delete All Sessions">
<doc>Removes all the session objects</doc>
<msg level="INFO" timestamp="20201001 14:32:46.273">Delete All Sessions</msg>
<status status="PASS" endtime="20201001 14:32:46.273" starttime="20201001 14:32:46.273"></status>
</kw>
<status status="FAIL" endtime="20201001 14:32:46.274" starttime="20201001 14:30:44.405">Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</kw>
<doc>Test various E2E conditions for seba-in-a-box</doc>
<status status="FAIL" endtime="20201001 14:32:46.274" starttime="20201001 14:29:53.241">Suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 14:04:13 2020 from 127.0.0.1
root@openCORD1:~# .

Also suite teardown failed:
Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</suite>
<statistics>
<total>
<stat pass="0" fail="10">Critical Tests</stat>
<stat pass="0" fail="10">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="10">latest</stat>
<stat pass="0" fail="1">multicast</stat>
<stat pass="0" fail="10">stable</stat>
<stat pass="0" fail="1">test1</stat>
<stat pass="0" fail="1">test10</stat>
<stat pass="0" fail="1">test2</stat>
<stat pass="0" fail="1">test3</stat>
<stat pass="0" fail="1">test4</stat>
<stat pass="0" fail="1">test5</stat>
<stat pass="0" fail="1">test6</stat>
<stat pass="0" fail="1">test7</stat>
<stat pass="0" fail="1">test8</stat>
<stat pass="0" fail="1">test9</stat>
</tag>
<suite>
<stat pass="0" name="SIAB" id="s1" fail="10">SIAB</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
