<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201001 14:04:12.374" generator="Robot 3.2.2 (Python 3.5.2 on linux)">
<suite name="SIAB" id="s1" source="/root/cord/test/cord-tester/src/test/cord-api/Tests/WorkflowValidations/SIAB.robot">
<kw type="setup" name="Setup">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XOS_USER}</arg>
<arg>${XOS_PASSWD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.791">${auth} = ['admin@opencord.org', 'letmein']</msg>
<status status="PASS" starttime="20201001 14:04:12.790" endtime="20201001 14:04:12.791"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.792">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201001 14:04:12.791" endtime="20201001 14:04:12.792"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>http://${server_ip}:${server_port}</arg>
<arg>auth=${AUTH}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.793">Creating Session using : alias=127.0.0.1, url=http://127.0.0.1:30006, headers={'Content-Type': 'application/json'},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7f0b8d971160&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 14:04:12.792" endtime="20201001 14:04:12.793"></status>
</kw>
<kw name="Get Service Owner Id" library="XOS">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${ATT_SERVICE}</arg>
</arguments>
<assign>
<var>${att_workflow_service_id}</var>
</assign>
<kw name="CORD Get" library="XOS">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.831">GET Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=None 
 </msg>
<msg level="INFO" timestamp="20201001 14:04:12.832">GET Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg level="INFO" timestamp="20201001 14:04:12.832">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.794" endtime="20201001 14:04:12.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.833">{"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.832" endtime="20201001 14:04:12.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.834">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.833" endtime="20201001 14:04:12.834"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.834">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.794" endtime="20201001 14:04:12.834"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.835">To JSON using : content={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1601560389.74147, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [55], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1601560331.675389, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} </msg>
<msg level="INFO" timestamp="20201001 14:04:12.835">To JSON using : pretty_print=False </msg>
<msg level="INFO" timestamp="20201001 14:04:12.835">${jsondata} = {'items': [{'name': 'att-workflow-driver', 'subscribed_dependencies_ids': [7], 'enabled': True, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'leaf_model_name': 'AttWorkflowD...</msg>
<status status="PASS" starttime="20201001 14:04:12.834" endtime="20201001 14:04:12.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.835">{'items': [{'name': 'att-workflow-driver', 'subscribed_dependencies_ids': [7], 'enabled': True, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'leaf_model_name': 'AttWorkflowDriverService', 'backend_need_delete': False, 'backend_register': '{}', 'class_names': 'AttWorkflowDriverService,Service,Service_decl,XOSBase', 'no_sync': False, 'tags_ids': [], 'deleted': False, 'published': True, 'no_policy': False, 'slices_ids': [], 'backend_need_delete_policy': False, 'owned_trust_domains_ids': [], 'created': 1601560331.675389, 'backend_status': 'Provisioning in progress', 'serviceattributes_ids': [], 'kind': 'oss', 'backend_need_reap': False, 'addresspools_ids': [], 'subscribed_links_ids': [], 'policy_code': 0, 'policy_status': 'Policy in process', 'service_instances_ids': [55], 'whitelist_entries_ids': [1], 'id': 2, 'write_protect': False, 'xos_managed': True, 'updated': 1601560389.74147, 'serviceports_ids': [], 'provided_dependencies_ids': [], 'service_interfaces_ids': [], 'lazy_blocked': False, 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.835" endtime="20201001 14:04:12.835"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.836">Length is 1</msg>
<msg level="INFO" timestamp="20201001 14:04:12.836">${length} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.836" endtime="20201001 14:04:12.836"></status>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | ${length} ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.837">${value} = {'name': 'att-workflow-driver', 'subscribed_dependencies_ids': [7], 'enabled': True, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'leaf_model_name': 'AttWorkflowDriverServic...</msg>
<status status="PASS" starttime="20201001 14:04:12.837" endtime="20201001 14:04:12.837"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.838">${id} = 2</msg>
<status status="PASS" starttime="20201001 14:04:12.837" endtime="20201001 14:04:12.838"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:12.836" endtime="20201001 14:04:12.838"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:12.836" endtime="20201001 14:04:12.838"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.838">${att_workflow_service_id} = 2</msg>
<status status="PASS" starttime="20201001 14:04:12.793" endtime="20201001 14:04:12.838"></status>
</kw>
<kw name="Get Service Owner Id" library="XOS">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${VOLT_SERVICE}</arg>
</arguments>
<assign>
<var>${volt_service_id}</var>
</assign>
<kw name="CORD Get" library="XOS">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.868">GET Request : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 path_url=/xosapi/v1/volt/voltservices 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=None 
 </msg>
<msg level="INFO" timestamp="20201001 14:04:12.869">GET Response : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg level="INFO" timestamp="20201001 14:04:12.869">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.839" endtime="20201001 14:04:12.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.869">{"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.869" endtime="20201001 14:04:12.869"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.870">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.870" endtime="20201001 14:04:12.870"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.870">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 14:04:12.839" endtime="20201001 14:04:12.870"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.871">To JSON using : content={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 3, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1601560390.676351, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1601560332.170006, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} </msg>
<msg level="INFO" timestamp="20201001 14:04:12.871">To JSON using : pretty_print=False </msg>
<msg level="INFO" timestamp="20201001 14:04:12.871">${jsondata} = {'items': [{'name': 'volt', 'voltha_pass': 'admin', 'write_protect': False, 'backend_need_delete_policy': False, 'voltha_user': 'voltha', 'leaf_model_name': 'VOLTService', 'backend_need_delete': False...</msg>
<status status="PASS" starttime="20201001 14:04:12.870" endtime="20201001 14:04:12.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.872">{'items': [{'name': 'volt', 'voltha_pass': 'admin', 'write_protect': False, 'backend_need_delete_policy': False, 'voltha_user': 'voltha', 'leaf_model_name': 'VOLTService', 'backend_need_delete': False, 'backend_register': '{}', 'tags_ids': [], 'published': True, 'self_content_type_id': 'volt.voltservice_decl', 'addresspools_ids': [], 'serviceports_ids': [], 'voltha_port': 8882, 'subscribed_dependencies_ids': [6, 4], 'no_policy': False, 'slices_ids': [], 'enabled': True, 'owned_trust_domains_ids': [], 'class_names': 'VOLTService,VOLTService_decl,Service,Service_decl,XOSBase', 'volt_devices_ids': [1], 'created': 1601560332.170006, 'backend_status': 'Provisioning in progress', 'serviceattributes_ids': [], 'kind': 'data', 'backend_need_reap': False, 'voltha_url': 'voltha.voltha.svc.cluster.local', 'subscribed_links_ids': [], 'policy_code': 0, 'policy_status': 'Policy in process', 'service_instances_ids': [], 'id': 3, 'no_sync': False, 'xos_managed': True, 'updated': 1601560390.676351, 'deleted': False, 'provided_dependencies_ids': [7, 5], 'service_interfaces_ids': [], 'lazy_blocked': False, 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.871" endtime="20201001 14:04:12.872"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.872">Length is 1</msg>
<msg level="INFO" timestamp="20201001 14:04:12.872">${length} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.872" endtime="20201001 14:04:12.872"></status>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | ${length} ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.873">${value} = {'name': 'volt', 'voltha_pass': 'admin', 'write_protect': False, 'backend_need_delete_policy': False, 'voltha_user': 'voltha', 'leaf_model_name': 'VOLTService', 'backend_need_delete': False, 'backend_...</msg>
<status status="PASS" starttime="20201001 14:04:12.873" endtime="20201001 14:04:12.873"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.874">${id} = 3</msg>
<status status="PASS" starttime="20201001 14:04:12.873" endtime="20201001 14:04:12.874"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:12.873" endtime="20201001 14:04:12.874"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:12.872" endtime="20201001 14:04:12.874"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.874">${volt_service_id} = 3</msg>
<status status="PASS" starttime="20201001 14:04:12.838" endtime="20201001 14:04:12.874"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${WHITELIST_PATHFILE}</arg>
<arg>AttWhiteListInfo</arg>
</arguments>
<assign>
<var>${AttWhiteListList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.875">${AttWhiteListList} = [{'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000', 'pon_port_id': 1}]</msg>
<status status="PASS" starttime="20201001 14:04:12.874" endtime="20201001 14:04:12.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${AttWhiteListList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.875">${AttWhiteListList} = [{'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000', 'pon_port_id': 1}]</msg>
<status status="PASS" starttime="20201001 14:04:12.875" endtime="20201001 14:04:12.875"></status>
</kw>
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.876">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': '1', 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:04:12.876" endtime="20201001 14:04:12.876"></status>
</kw>
<kw name="Set Field Value In Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>owner_id</arg>
<arg>${att_workflow_service_id}</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.876">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:04:12.876" endtime="20201001 14:04:12.876"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>serial_number</arg>
</arguments>
<assign>
<var>${onu_device}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.877">${onu_device} = PSMO00000000</msg>
<status status="PASS" starttime="20201001 14:04:12.877" endtime="20201001 14:04:12.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.877">PSMO00000000</msg>
<status status="PASS" starttime="20201001 14:04:12.877" endtime="20201001 14:04:12.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.878">${onu_device} = PSMO00000000</msg>
<status status="PASS" starttime="20201001 14:04:12.878" endtime="20201001 14:04:12.878"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>pon_port_id</arg>
</arguments>
<assign>
<var>${onu_location}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.878">${onu_location} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.878" endtime="20201001 14:04:12.878"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_location}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.879">${onu_location} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.879" endtime="20201001 14:04:12.879"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${SUBSCRIBER_PATHFILE}</arg>
<arg>SubscriberInfo</arg>
</arguments>
<assign>
<var>${SubscriberList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.880">${SubscriberList} = [{'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}]</msg>
<status status="PASS" starttime="20201001 14:04:12.879" endtime="20201001 14:04:12.880"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SubscriberList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.880">${SubscriberList} = [{'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}]</msg>
<status status="PASS" starttime="20201001 14:04:12.880" endtime="20201001 14:04:12.880"></status>
</kw>
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.881">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:04:12.880" endtime="20201001 14:04:12.881"></status>
</kw>
<kw name="Get Field Value From Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>s_tag</arg>
</arguments>
<assign>
<var>${s_tag}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.881">key... tech_profile_id
key... downstream_bps_id
key... upstream_bps_id
key... s_tag</msg>
<msg level="INFO" timestamp="20201001 14:04:12.881">${s_tag} = 222</msg>
<status status="PASS" starttime="20201001 14:04:12.881" endtime="20201001 14:04:12.881"></status>
</kw>
<kw name="Get Field Value From Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>c_tag</arg>
</arguments>
<assign>
<var>${c_tag}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.882">key... tech_profile_id
key... downstream_bps_id
key... upstream_bps_id
key... s_tag
key... status
key... c_tag</msg>
<msg level="INFO" timestamp="20201001 14:04:12.882">${c_tag} = 111</msg>
<status status="PASS" starttime="20201001 14:04:12.881" endtime="20201001 14:04:12.882"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${VOLT_DEVICE_PATHFILE}</arg>
<arg>VOLTDeviceInfo</arg>
</arguments>
<assign>
<var>${VoltDeviceList}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.882">${VoltDeviceList} = [{'switch_datapath_id': 'of:0000000000000001', 'name': 'PONSIM OLT', 'port': 50060, 'switch_port': '2', 'volt_service_id': 2, 'host': 'olt0.voltha.svc', 'uplink': '2', 'device_type': 'ponsim_olt', 'ou...</msg>
<status status="PASS" starttime="20201001 14:04:12.882" endtime="20201001 14:04:12.882"></status>
</kw>
<kw name="Set Field Value In Dict" library="CORDRobot">
<arguments>
<arg>${VoltDeviceList[0]}</arg>
<arg>volt_service_id</arg>
<arg>${volt_service_id}</arg>
</arguments>
<assign>
<var>${VoltDeviceDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.883">${VoltDeviceDict} = {'switch_datapath_id': 'of:0000000000000001', 'name': 'PONSIM OLT', 'port': 50060, 'switch_port': '2', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'device_type': 'ponsim_olt', 'out...</msg>
<status status="PASS" starttime="20201001 14:04:12.883" endtime="20201001 14:04:12.883"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceList}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.884">${VoltDeviceList} = [{'switch_datapath_id': 'of:0000000000000001', 'name': 'PONSIM OLT', 'port': 50060, 'switch_port': '2', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'device_type': 'ponsim_olt', 'ou...</msg>
<status status="PASS" starttime="20201001 14:04:12.883" endtime="20201001 14:04:12.884"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceDict}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.884">${VoltDeviceDict} = {'switch_datapath_id': 'of:0000000000000001', 'name': 'PONSIM OLT', 'port': 50060, 'switch_port': '2', 'volt_service_id': 3, 'host': 'olt0.voltha.svc', 'uplink': '2', 'device_type': 'ponsim_olt', 'out...</msg>
<status status="PASS" starttime="20201001 14:04:12.884" endtime="20201001 14:04:12.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${s_tag}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.885">${s_tag} = 222</msg>
<status status="PASS" starttime="20201001 14:04:12.884" endtime="20201001 14:04:12.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${c_tag}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.885">${c_tag} = 111</msg>
<status status="PASS" starttime="20201001 14:04:12.885" endtime="20201001 14:04:12.885"></status>
</kw>
<kw name="Retrieve Whitelist Entry" library="ATTWorkFlowDriver">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${whitelist_id}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_WHITELIST</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.898">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries
Test passed: 200: {"items": [{"policed": 1601560389.830894, "backend_need_delete_policy": true, "backend_register": "{}", "backend_status": "Provisioning in progress", "id": 1, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverwhitelistentry", "backend_code": 0, "pon_port_id": 1, "serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "no_sync": false, "owner_id": 2, "updated": 1601560389.830894, "deleted": false, "policy_status": "done", "lazy_blocked": false, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverWhiteListEntry", "created": 1601560389.836139, "write_protect": false, "no_policy": false, "xos_managed": true, "class_names": "AttWorkflowDriverWhiteListEntry,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:04:12.898">${json_result} = {'items': [{'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': Fal...</msg>
<status status="PASS" starttime="20201001 14:04:12.886" endtime="20201001 14:04:12.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.899">{'items': [{'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_register': '{}', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'no_policy': False, 'backend_need_reap': False, 'policy_code': 1, 'created': 1601560389.836139, 'id': 1, 'no_sync': False, 'xos_managed': True, 'updated': 1601560389.830894, 'deleted': False, 'lazy_blocked': False, 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.898" endtime="20201001 14:04:12.899"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.899">${json_result_list} = [{'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': False, 'devic...</msg>
<status status="PASS" starttime="20201001 14:04:12.899" endtime="20201001 14:04:12.899"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.900">data {'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_register': '{}', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'no_policy': False, 'backend_need_reap': False, 'policy_code': 1, 'created': 1601560389.836139, 'id': 1, 'no_sync': False, 'xos_managed': True, 'updated': 1601560389.830894, 'deleted': False, 'lazy_blocked': False, 'backend_code': 0}
return_dict {'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': False, 'device_id': 'of:0000d0d3e158fede', 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase', 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_register': '{}', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'no_policy': False, 'backend_need_reap': False, 'policy_code': 1, 'created': 1601560389.836139, 'id': 1, 'no_sync': False, 'xos_managed': True, 'updated': 1601560389.830894, 'deleted': False, 'lazy_blocked': False, 'backend_code': 0}</msg>
<msg level="INFO" timestamp="20201001 14:04:12.900">${getJsonDict} = {'policed': 1601560389.830894, 'write_protect': False, 'pon_port_id': 1, 'backend_need_delete_policy': True, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'backend_need_delete': False, 'device...</msg>
<status status="PASS" starttime="20201001 14:04:12.900" endtime="20201001 14:04:12.900"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.900">${id} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.900" endtime="20201001 14:04:12.901"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.901">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.885" endtime="20201001 14:04:12.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.901">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:04:12.901" endtime="20201001 14:04:12.901"></status>
</kw>
<kw name="Retrieve ATT Service Instance ID" library="ATTWorkFlowDriver">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${att_si_id}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.922">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:04:12.922">${json_result} = {'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy...</msg>
<status status="PASS" starttime="20201001 14:04:12.902" endtime="20201001 14:04:12.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.922">{'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:04:12.922" endtime="20201001 14:04:12.922"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.923">${json_result_list} = [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, ...</msg>
<status status="PASS" starttime="20201001 14:04:12.923" endtime="20201001 14:04:12.923"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.923">data {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}
return_dict {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}</msg>
<msg level="INFO" timestamp="20201001 14:04:12.924">${getJsonDict} = {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, '...</msg>
<status status="PASS" starttime="20201001 14:04:12.923" endtime="20201001 14:04:12.924"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.924">${id} = 55</msg>
<status status="PASS" starttime="20201001 14:04:12.924" endtime="20201001 14:04:12.924"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:12.924">${att_si_id} = 55</msg>
<status status="PASS" starttime="20201001 14:04:12.901" endtime="20201001 14:04:12.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${att_si_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:12.925">${att_si_id} = 55</msg>
<status status="PASS" starttime="20201001 14:04:12.925" endtime="20201001 14:04:12.925"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1</arg>
</arguments>
<assign>
<var>${RG_CONTAINER}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:12.954">Running command 'kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1 2&gt;&amp;1'.</msg>
<msg level="INFO" timestamp="20201001 14:04:13.112">${RG_CONTAINER} = rg0-0-54d479558c-dx9s8</msg>
<status status="PASS" starttime="20201001 14:04:12.925" endtime="20201001 14:04:13.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RG_CONTAINER}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.115">${RG_CONTAINER} = rg0-0-54d479558c-dx9s8</msg>
<status status="PASS" starttime="20201001 14:04:13.114" endtime="20201001 14:04:13.116"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate ATT Workflow Driver SI" library="ATTWorkFlowDriver">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Service Instance Status Check" library="ATTWorkFlowDriver">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.145">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:04:13.145">${json_result} = {'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy...</msg>
<status status="PASS" starttime="20201001 14:04:13.118" endtime="20201001 14:04:13.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.146">{'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:04:13.145" endtime="20201001 14:04:13.146"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.146">${json_result_list} = [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, ...</msg>
<status status="PASS" starttime="20201001 14:04:13.146" endtime="20201001 14:04:13.146"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.147">data {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}
return_dict {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}</msg>
<msg level="INFO" timestamp="20201001 14:04:13.147">${getJsonDict} = {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, '...</msg>
<status status="PASS" starttime="20201001 14:04:13.146" endtime="20201001 14:04:13.147"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.148">${onu_state} = ENABLED</msg>
<status status="PASS" starttime="20201001 14:04:13.147" endtime="20201001 14:04:13.148"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.148">${authentication_state} = AWAITING</msg>
<status status="PASS" starttime="20201001 14:04:13.148" endtime="20201001 14:04:13.148"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.149">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20201001 14:04:13.148" endtime="20201001 14:04:13.149"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:04:13.149">${onu_state} = ENABLED</msg>
<msg level="INFO" timestamp="20201001 14:04:13.149">${authentication_status} = AWAITING</msg>
<msg level="INFO" timestamp="20201001 14:04:13.149">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20201001 14:04:13.118" endtime="20201001 14:04:13.149"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.150" endtime="20201001 14:04:13.150"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.150" endtime="20201001 14:04:13.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.151" endtime="20201001 14:04:13.151"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:13.117" endtime="20201001 14:04:13.151"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:13.116" endtime="20201001 14:04:13.151"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{container_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.152">@{container_list} = [ ]</msg>
<status status="PASS" starttime="20201001 14:04:13.152" endtime="20201001 14:04:13.152"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>att-workflow-att-workflow-driver</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.152" endtime="20201001 14:04:13.152"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-fabric-crossconnect</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.152" endtime="20201001 14:04:13.153"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-rcord</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.153" endtime="20201001 14:04:13.153"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-volt</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.154" endtime="20201001 14:04:13.154"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>xos-core</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.154" endtime="20201001 14:04:13.154"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>vcore</arg>
</arguments>
<status status="PASS" starttime="20201001 14:04:13.154" endtime="20201001 14:04:13.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${container_list}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.155">${container_list} = ['att-workflow-att-workflow-driver', 'seba-services-fabric-crossconnect', 'seba-services-rcord', 'seba-services-volt', 'xos-core', 'vcore']</msg>
<status status="PASS" starttime="20201001 14:04:13.155" endtime="20201001 14:04:13.155"></status>
</kw>
<kw name="Setup SSH Keys to Localhost">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.184">Running command 'yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa'.</msg>
<status status="PASS" starttime="20201001 14:04:13.156" endtime="20201001 14:04:13.366"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.397">Running command 'cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys'.</msg>
<status status="PASS" starttime="20201001 14:04:13.368" endtime="20201001 14:04:13.401"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>chmod og-wx ~/.ssh/authorized_keys</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.430">Running command 'chmod og-wx ~/.ssh/authorized_keys 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20201001 14:04:13.402" endtime="20201001 14:04:13.433"></status>
</kw>
<status status="PASS" starttime="20201001 14:04:13.155" endtime="20201001 14:04:13.434"></status>
</kw>
<kw name="Get Current Datetime On Kubernetes Node" library="Kubernetes">
<doc>Get UTC datetime in RFC3339ish format</doc>
<arguments>
<arg>${kube_node_ip}</arg>
<arg>${local_user}</arg>
<arg>${local_pass}</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<kw name="Login And Run Command On Remote System" library="utils">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified), switch to root user, executes command, return output</doc>
<arguments>
<arg>date -u +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Login To Remote System" library="utils">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified) and returns connection ID</doc>
<arguments>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>${container_type}</arg>
<arg>${container_name}</arg>
<arg>${prompt}</arg>
<arg>${prompt_timeout}</arg>
<arg>${container_prompt}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${ip}</arg>
<arg>prompt=${prompt}</arg>
<arg>timeout=${prompt_timeout}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:04:13.441">${conn_id} = 1</msg>
<status status="PASS" starttime="20201001 14:04:13.440" endtime="20201001 14:04:13.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pass}' != '${None}'</arg>
<arg>SSHLibrary.Login</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>ELSE</arg>
<arg>SSHLibrary.Login With Public Key</arg>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<kw name="Login With Public Key" library="SSHLibrary">
<doc>Logs into the SSH server using key-based authentication.</doc>
<arguments>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:04:13.443">Logging into '127.0.0.1:22' as 'root'.</msg>
<msg level="FAIL" timestamp="20201001 14:05:03.515">No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</msg>
<status status="FAIL" starttime="20201001 14:04:13.442" endtime="20201001 14:05:03.516"></status>
</kw>
<status status="FAIL" starttime="20201001 14:04:13.442" endtime="20201001 14:05:03.516"></status>
</kw>
<status status="FAIL" starttime="20201001 14:04:13.438" endtime="20201001 14:05:03.516"></status>
</kw>
<status status="FAIL" starttime="20201001 14:04:13.437" endtime="20201001 14:05:03.516"></status>
</kw>
<status status="FAIL" starttime="20201001 14:04:13.436" endtime="20201001 14:05:03.516"></status>
</kw>
<status status="FAIL" starttime="20201001 14:04:12.790" endtime="20201001 14:05:03.517"></status>
</kw>
<test name="ONU in Correct Location" id="s1-t1">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>multicast</tag>
<tag>stable</tag>
<tag>test1</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.517" endtime="20201001 14:05:03.518">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Correct Location -&gt; Remove ONU from Whitelist -&gt; Add ONU to Whitelist" id="s1-t2">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove ONU from whitelist
Validate failed authentication/DHCP/E2E ping
Add ONU to whitelist
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test2</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.519" endtime="20201001 14:05:03.519">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Correct Location -&gt; ONU in Wrong Location -&gt; ONU in Correct Location" id="s1-t3">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Update whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping
Update whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test3</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.520" endtime="20201001 14:05:03.521">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Correct Location -&gt; Remove Subscriber -&gt; Create Subscriber" id="s1-t4">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove subscriber model
Validate failed authentication/DHCP/E2E ping
Recreate subscriber model
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test4</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.521" endtime="20201001 14:05:03.522">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Correct Location (Skip Subscriber Provisioning) -&gt; Provision Subscriber" id="s1-t5">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip provisioning subscriber
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test5</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.523" endtime="20201001 14:05:03.523">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Correct Location (Skip Authentication)" id="s1-t6">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip RG authentication
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test6</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.524" endtime="20201001 14:05:03.525">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU not in Whitelist" id="s1-t7">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test7</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.525" endtime="20201001 14:05:03.526">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU not in Whitelist (Skip Subscriber Provisioning) -&gt; Add ONU to Whitelist -&gt; Provision Subscriber" id="s1-t8">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU and subscriber provisioning
Validate successful authentication but failed DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test8</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.526" endtime="20201001 14:05:03.527">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Wrong Location" id="s1-t9">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test9</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.528" endtime="20201001 14:05:03.528">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test name="ONU in Wrong Location (Skip Subscriber Provisioning) -&gt; ONU in Correct Location -&gt; Provision Subscriber" id="s1-t10">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location and skip subscriber provisioning
Validate failed authentication/DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test10</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20201001 14:05:03.529" endtime="20201001 14:05:03.529">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<kw type="teardown" name="Teardown">
<kw name="Setup Test">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:03.564">Running command 'date +"%Y-%m-%dT%H:%M:%S.%NZ" 2&gt;&amp;1'.</msg>
<msg level="INFO" timestamp="20201001 14:05:03.569">${datetime} = 2020-10-01T14:05:03.566671234Z</msg>
<status status="PASS" starttime="20201001 14:05:03.533" endtime="20201001 14:05:03.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:03.572">${datetime} = 2020-10-01T14:05:03.566671234Z</msg>
<status status="PASS" starttime="20201001 14:05:03.570" endtime="20201001 14:05:03.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Subscriber</arg>
</arguments>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:03.574">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:03.574" endtime="20201001 14:05:03.574"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:03.576">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:03.575" endtime="20201001 14:05:03.576"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:03.596">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:03.596">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:03.596">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:03.576" endtime="20201001 14:05:03.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:03.597">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:03.597" endtime="20201001 14:05:03.597"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:03.598">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:03.598">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:03.598" endtime="20201001 14:05:03.599"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:03.574" endtime="20201001 14:05:03.599"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:03.573" endtime="20201001 14:05:03.599"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:05.601">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:05.600" endtime="20201001 14:05:05.601"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:05.602">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:05.602" endtime="20201001 14:05:05.602"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:05.627">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:05.627">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:05.627">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:05.602" endtime="20201001 14:05:05.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:05.628">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:05.627" endtime="20201001 14:05:05.628"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:05.628">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:05.629">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:05.628" endtime="20201001 14:05:05.629"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:05.601" endtime="20201001 14:05:05.629"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:05.600" endtime="20201001 14:05:05.629"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:07.631">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:07.630" endtime="20201001 14:05:07.631"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:07.632">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:07.631" endtime="20201001 14:05:07.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:07.655">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:07.655">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:07.655">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:07.632" endtime="20201001 14:05:07.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:07.656">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:07.656" endtime="20201001 14:05:07.656"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:07.657">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:07.657">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:07.656" endtime="20201001 14:05:07.657"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:07.631" endtime="20201001 14:05:07.657"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:07.630" endtime="20201001 14:05:07.657"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:09.659">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:09.658" endtime="20201001 14:05:09.659"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:09.660">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:09.660" endtime="20201001 14:05:09.660"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:09.674">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:09.674">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:09.675">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:09.660" endtime="20201001 14:05:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:09.675">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:09.675" endtime="20201001 14:05:09.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:09.676">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:09.676">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:09.675" endtime="20201001 14:05:09.676"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:09.659" endtime="20201001 14:05:09.676"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:09.658" endtime="20201001 14:05:09.676"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:11.678">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:11.678" endtime="20201001 14:05:11.678"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:11.680">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:11.679" endtime="20201001 14:05:11.680"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:11.694">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:11.694">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:11.694">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:11.680" endtime="20201001 14:05:11.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:11.695">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:11.694" endtime="20201001 14:05:11.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:11.695">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:11.696">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:11.695" endtime="20201001 14:05:11.696"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:11.678" endtime="20201001 14:05:11.696"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:11.677" endtime="20201001 14:05:11.696"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:13.697">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:13.697" endtime="20201001 14:05:13.697"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:13.699">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:13.698" endtime="20201001 14:05:13.699"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:13.721">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:13.721">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:13.722">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:13.699" endtime="20201001 14:05:13.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:13.722">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:13.722" endtime="20201001 14:05:13.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:13.723">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:13.723">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:13.722" endtime="20201001 14:05:13.723"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:13.698" endtime="20201001 14:05:13.723"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:13.696" endtime="20201001 14:05:13.724"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:15.725">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:15.724" endtime="20201001 14:05:15.725"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:15.726">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:15.726" endtime="20201001 14:05:15.726"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:15.748">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:15.748">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:15.748">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:15.726" endtime="20201001 14:05:15.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:15.749">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:15.749" endtime="20201001 14:05:15.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:15.750">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:15.750">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:15.750" endtime="20201001 14:05:15.750"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:15.725" endtime="20201001 14:05:15.751"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:15.724" endtime="20201001 14:05:15.751"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:17.752">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:17.752" endtime="20201001 14:05:17.752"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:17.754">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:17.753" endtime="20201001 14:05:17.754"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:17.773">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:17.773">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:17.773">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:17.754" endtime="20201001 14:05:17.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:17.774">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:17.774" endtime="20201001 14:05:17.774"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:17.775">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:17.775">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:17.774" endtime="20201001 14:05:17.775"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:17.753" endtime="20201001 14:05:17.775"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:17.751" endtime="20201001 14:05:17.775"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:19.777">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:19.776" endtime="20201001 14:05:19.777"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:19.778">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:19.777" endtime="20201001 14:05:19.778"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:19.802">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:19.802">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:19.803">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:19.778" endtime="20201001 14:05:19.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:19.803">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:19.803" endtime="20201001 14:05:19.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:19.804">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:19.804">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:19.804" endtime="20201001 14:05:19.804"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:19.777" endtime="20201001 14:05:19.804"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:19.776" endtime="20201001 14:05:19.805"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:21.806">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:21.806" endtime="20201001 14:05:21.806"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:21.807">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:21.807" endtime="20201001 14:05:21.807"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:21.821">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:21.821">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:21.821">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:21.807" endtime="20201001 14:05:21.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:21.822">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:21.822" endtime="20201001 14:05:21.822"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:21.823">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:21.823">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:21.822" endtime="20201001 14:05:21.823"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:21.806" endtime="20201001 14:05:21.823"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:21.805" endtime="20201001 14:05:21.823"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:23.825">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:23.824" endtime="20201001 14:05:23.825"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:23.826">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:23.825" endtime="20201001 14:05:23.826"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:23.841">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:23.841">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:23.841">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:23.826" endtime="20201001 14:05:23.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:23.842">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:23.842" endtime="20201001 14:05:23.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:23.843">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:23.843">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:23.842" endtime="20201001 14:05:23.843"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:23.825" endtime="20201001 14:05:23.843"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:23.824" endtime="20201001 14:05:23.844"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:25.845">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:25.844" endtime="20201001 14:05:25.845"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:25.846">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:25.845" endtime="20201001 14:05:25.846"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:25.869">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:25.870">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:25.870">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:25.846" endtime="20201001 14:05:25.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:25.871">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:25.870" endtime="20201001 14:05:25.871"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:25.871">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:25.871">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:25.871" endtime="20201001 14:05:25.871"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:25.845" endtime="20201001 14:05:25.872"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:25.844" endtime="20201001 14:05:25.872"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:27.874">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:27.873" endtime="20201001 14:05:27.874"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:27.875">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:27.875" endtime="20201001 14:05:27.875"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:27.888">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:27.889">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:27.889">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:27.875" endtime="20201001 14:05:27.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:27.889">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:27.889" endtime="20201001 14:05:27.889"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:27.890">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:27.890">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:27.890" endtime="20201001 14:05:27.890"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:27.874" endtime="20201001 14:05:27.890"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:27.873" endtime="20201001 14:05:27.891"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:29.892">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:29.892" endtime="20201001 14:05:29.892"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:29.893">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:29.893" endtime="20201001 14:05:29.893"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:29.907">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:29.907">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:29.907">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:29.893" endtime="20201001 14:05:29.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:29.907">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:29.907" endtime="20201001 14:05:29.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:29.908">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:29.908">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:29.908" endtime="20201001 14:05:29.908"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:29.892" endtime="20201001 14:05:29.909"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:29.891" endtime="20201001 14:05:29.909"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:31.910">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:31.910" endtime="20201001 14:05:31.910"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:31.911">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:31.911" endtime="20201001 14:05:31.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:31.925">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:31.925">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:31.925">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:31.912" endtime="20201001 14:05:31.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:31.926">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:31.926" endtime="20201001 14:05:31.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:31.927">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:31.927">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:31.926" endtime="20201001 14:05:31.927"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:31.910" endtime="20201001 14:05:31.927"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:31.909" endtime="20201001 14:05:31.927"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:33.929">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:33.928" endtime="20201001 14:05:33.929"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:33.930">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:33.929" endtime="20201001 14:05:33.930"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:33.944">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:33.944">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:33.944">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:33.930" endtime="20201001 14:05:33.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:33.945">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:33.944" endtime="20201001 14:05:33.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:33.945">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:33.946">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:33.945" endtime="20201001 14:05:33.946"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:33.929" endtime="20201001 14:05:33.946"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:33.928" endtime="20201001 14:05:33.946"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:35.948">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:35.947" endtime="20201001 14:05:35.948"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:35.949">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:35.948" endtime="20201001 14:05:35.949"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:35.962">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:35.962">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:35.963">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:35.949" endtime="20201001 14:05:35.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:35.963">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:35.963" endtime="20201001 14:05:35.963"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:35.964">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:35.964">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:35.964" endtime="20201001 14:05:35.964"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:35.948" endtime="20201001 14:05:35.964"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:35.947" endtime="20201001 14:05:35.965"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:37.966">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:37.966" endtime="20201001 14:05:37.966"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:37.967">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:37.967" endtime="20201001 14:05:37.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:37.980">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:37.980">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:37.981">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:37.968" endtime="20201001 14:05:37.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:37.981">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:37.981" endtime="20201001 14:05:37.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:37.982">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:37.982">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:37.981" endtime="20201001 14:05:37.982"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:37.966" endtime="20201001 14:05:37.982"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:37.965" endtime="20201001 14:05:37.983"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:39.984">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:39.983" endtime="20201001 14:05:39.984"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:39.985">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:39.985" endtime="20201001 14:05:39.985"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:39.999">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:39.999">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:39.999">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:39.985" endtime="20201001 14:05:39.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:39.999">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:39.999" endtime="20201001 14:05:40.000"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:40.000">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:40.000">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:40.000" endtime="20201001 14:05:40.000"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:39.984" endtime="20201001 14:05:40.001"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:39.983" endtime="20201001 14:05:40.001"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:42.002">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:42.002" endtime="20201001 14:05:42.002"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:42.003">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:42.003" endtime="20201001 14:05:42.003"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:42.017">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:42.017">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:42.018">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:42.004" endtime="20201001 14:05:42.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:42.018">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:42.018" endtime="20201001 14:05:42.018"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:42.019">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:42.019">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:42.018" endtime="20201001 14:05:42.019"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:42.002" endtime="20201001 14:05:42.019"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:42.001" endtime="20201001 14:05:42.020"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:44.021">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:44.020" endtime="20201001 14:05:44.021"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:44.022">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:44.021" endtime="20201001 14:05:44.022"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:44.038">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:44.038">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:44.038">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:44.022" endtime="20201001 14:05:44.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:44.039">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:44.038" endtime="20201001 14:05:44.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:44.039">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:44.039">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:44.039" endtime="20201001 14:05:44.040"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:44.021" endtime="20201001 14:05:44.040"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:44.020" endtime="20201001 14:05:44.040"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:46.041">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:46.041" endtime="20201001 14:05:46.041"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:46.042">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:46.042" endtime="20201001 14:05:46.042"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:46.057">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:46.057">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:46.057">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:46.043" endtime="20201001 14:05:46.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:46.058">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:46.057" endtime="20201001 14:05:46.058"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:46.058">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:46.058">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:46.058" endtime="20201001 14:05:46.058"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:46.041" endtime="20201001 14:05:46.059"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:46.040" endtime="20201001 14:05:46.059"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:48.061">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:48.060" endtime="20201001 14:05:48.061"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:48.062">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:48.061" endtime="20201001 14:05:48.062"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:48.076">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:48.076">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:48.076">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:48.062" endtime="20201001 14:05:48.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:48.077">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:48.076" endtime="20201001 14:05:48.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:48.077">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:48.077">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:48.077" endtime="20201001 14:05:48.077"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:48.061" endtime="20201001 14:05:48.078"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:48.060" endtime="20201001 14:05:48.078"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:50.079">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:50.079" endtime="20201001 14:05:50.079"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:50.080">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:50.080" endtime="20201001 14:05:50.081"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:50.095">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:50.095">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:50.096">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:50.081" endtime="20201001 14:05:50.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:50.096">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:50.096" endtime="20201001 14:05:50.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:50.097">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:50.097">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:50.097" endtime="20201001 14:05:50.097"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:50.079" endtime="20201001 14:05:50.097"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:50.078" endtime="20201001 14:05:50.098"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:52.099">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:52.099" endtime="20201001 14:05:52.099"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:52.100">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:52.100" endtime="20201001 14:05:52.100"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:52.114">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:52.114">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:52.114">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:52.100" endtime="20201001 14:05:52.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:52.115">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:52.114" endtime="20201001 14:05:52.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:52.115">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:52.116">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:52.115" endtime="20201001 14:05:52.116"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:52.099" endtime="20201001 14:05:52.116"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:52.098" endtime="20201001 14:05:52.116"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:54.117">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:54.117" endtime="20201001 14:05:54.117"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:54.118">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:54.118" endtime="20201001 14:05:54.118"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:54.131">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:54.132">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:54.132">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:54.119" endtime="20201001 14:05:54.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:54.132">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:54.132" endtime="20201001 14:05:54.132"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:54.133">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:54.133">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:54.133" endtime="20201001 14:05:54.133"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:54.118" endtime="20201001 14:05:54.133"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:54.116" endtime="20201001 14:05:54.134"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:56.135">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:56.134" endtime="20201001 14:05:56.135"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:56.136">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:56.136" endtime="20201001 14:05:56.136"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:56.155">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:56.156">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:56.156">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:56.136" endtime="20201001 14:05:56.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:56.157">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:56.156" endtime="20201001 14:05:56.157"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:56.157">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:56.157">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:56.157" endtime="20201001 14:05:56.157"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:56.135" endtime="20201001 14:05:56.158"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:56.134" endtime="20201001 14:05:56.158"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:58.160">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:05:58.159" endtime="20201001 14:05:58.160"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:58.161">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:05:58.160" endtime="20201001 14:05:58.161"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:05:58.174">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:58.174">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:05:58.174">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:05:58.161" endtime="20201001 14:05:58.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:58.175">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:05:58.175" endtime="20201001 14:05:58.175"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:05:58.176">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:05:58.176">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:58.175" endtime="20201001 14:05:58.176"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:58.160" endtime="20201001 14:05:58.176"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:58.158" endtime="20201001 14:05:58.176"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:00.178">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:06:00.177" endtime="20201001 14:06:00.178"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:00.179">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:06:00.179" endtime="20201001 14:06:00.179"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:00.193">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:00.193">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:00.193">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:00.179" endtime="20201001 14:06:00.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:00.194">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:06:00.194" endtime="20201001 14:06:00.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:00.195">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:00.195">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:00.194" endtime="20201001 14:06:00.195"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:00.178" endtime="20201001 14:06:00.195"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:00.177" endtime="20201001 14:06:00.196"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:02.197">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:06:02.197" endtime="20201001 14:06:02.197"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:02.198">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:06:02.198" endtime="20201001 14:06:02.198"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:02.213">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:02.213">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:02.213">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:02.199" endtime="20201001 14:06:02.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:02.214">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:06:02.214" endtime="20201001 14:06:02.214"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:02.214">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:02.215">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:02.214" endtime="20201001 14:06:02.215"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:02.197" endtime="20201001 14:06:02.215"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:02.196" endtime="20201001 14:06:02.215"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.216">${SubscriberDict} = {'tech_profile_id': 64, 'downstream_bps_id': 2, 'upstream_bps_id': 2, 's_tag': 222, 'status': 'pre-provisioned', 'c_tag': 111, 'name': 'QQClient0', 'onu_device': 'PSMO00000000'}</msg>
<status status="PASS" starttime="20201001 14:06:04.216" endtime="20201001 14:06:04.216"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.218">${data} = {"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}</msg>
<status status="PASS" starttime="20201001 14:06:04.217" endtime="20201001 14:06:04.218"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.240">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '177', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"tech_profile_id": 64, "downstream_bps_id": 2, "upstream_bps_id": 2, "s_tag": 222, "status": "pre-provisioned", "c_tag": 111, "name": "QQClient0", "onu_device": "PSMO00000000"}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:04.240">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:04.240">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:04.218" endtime="20201001 14:06:04.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:04.241">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20201001 14:06:04.241" endtime="20201001 14:06:04.241"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:04.242">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:04.242">400 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:04.241" endtime="20201001 14:06:04.242"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:04.217" endtime="20201001 14:06:04.242"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:04.215" endtime="20201001 14:06:04.242"></status>
</kw>
<msg level="FAIL" timestamp="20201001 14:06:04.243">Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200</msg>
<status status="FAIL" starttime="20201001 14:05:03.572" endtime="20201001 14:06:04.243"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Whitelist</arg>
</arguments>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.244">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:04.244" endtime="20201001 14:06:04.244"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.245">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:04.245" endtime="20201001 14:06:04.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.280">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:04.280">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:04.280">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:04.245" endtime="20201001 14:06:04.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:04.281">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:04.281" endtime="20201001 14:06:04.281"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:04.282">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:04.282">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:04.281" endtime="20201001 14:06:04.282"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:04.282">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:04.244" endtime="20201001 14:06:04.282"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:04.283">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:04.283">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:04.282" endtime="20201001 14:06:04.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:04.284">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:04.284" endtime="20201001 14:06:04.284"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:04.243" endtime="20201001 14:06:04.285"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:06.286">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:06.286" endtime="20201001 14:06:06.286"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:06.287">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:06.287" endtime="20201001 14:06:06.287"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:06.302">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:06.302">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:06.302">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:06.287" endtime="20201001 14:06:06.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:06.303">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:06.303" endtime="20201001 14:06:06.303"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:06.304">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:06.304">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:06.303" endtime="20201001 14:06:06.304"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:06.304">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:06.286" endtime="20201001 14:06:06.304"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:06.305">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:06.305">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:06.305" endtime="20201001 14:06:06.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:06.306">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:06.305" endtime="20201001 14:06:06.306"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:06.285" endtime="20201001 14:06:06.306"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:08.307">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:08.307" endtime="20201001 14:06:08.307"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:08.308">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:08.308" endtime="20201001 14:06:08.309"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:08.323">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:08.323">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:08.323">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:08.309" endtime="20201001 14:06:08.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:08.324">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:08.323" endtime="20201001 14:06:08.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:08.324">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:08.324">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:08.324" endtime="20201001 14:06:08.324"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:08.325">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:08.308" endtime="20201001 14:06:08.325"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:08.325">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:08.325">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:08.325" endtime="20201001 14:06:08.326"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:08.326">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:08.326" endtime="20201001 14:06:08.326"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:08.306" endtime="20201001 14:06:08.326"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:10.328">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:10.328" endtime="20201001 14:06:10.328"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:10.329">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:10.329" endtime="20201001 14:06:10.329"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:10.349">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:10.349">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:10.350">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:10.329" endtime="20201001 14:06:10.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:10.350">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:10.350" endtime="20201001 14:06:10.350"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:10.351">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:10.351">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:10.350" endtime="20201001 14:06:10.351"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:10.351">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:10.328" endtime="20201001 14:06:10.351"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:10.352">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:10.352">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:10.352" endtime="20201001 14:06:10.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:10.353">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:10.352" endtime="20201001 14:06:10.353"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:10.327" endtime="20201001 14:06:10.353"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:12.354">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:12.354" endtime="20201001 14:06:12.354"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:12.356">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:12.355" endtime="20201001 14:06:12.356"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:12.371">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:12.371">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:12.372">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:12.356" endtime="20201001 14:06:12.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:12.372">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:12.372" endtime="20201001 14:06:12.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:12.373">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:12.373">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:12.372" endtime="20201001 14:06:12.373"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:12.373">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:12.355" endtime="20201001 14:06:12.373"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:12.374">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:12.374">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:12.374" endtime="20201001 14:06:12.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:12.375">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:12.374" endtime="20201001 14:06:12.375"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:12.353" endtime="20201001 14:06:12.375"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:14.376">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:14.376" endtime="20201001 14:06:14.376"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:14.378">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:14.377" endtime="20201001 14:06:14.378"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:14.393">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:14.393">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:14.393">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:14.378" endtime="20201001 14:06:14.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:14.394">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:14.394" endtime="20201001 14:06:14.394"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:14.394">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:14.395">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:14.394" endtime="20201001 14:06:14.395"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:14.395">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:14.377" endtime="20201001 14:06:14.395"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:14.396">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:14.396">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:14.395" endtime="20201001 14:06:14.396"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:14.396">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:14.396" endtime="20201001 14:06:14.397"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:14.375" endtime="20201001 14:06:14.397"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:16.398">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:16.398" endtime="20201001 14:06:16.398"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:16.399">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:16.399" endtime="20201001 14:06:16.399"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:16.415">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:16.415">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:16.415">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:16.399" endtime="20201001 14:06:16.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:16.416">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:16.416" endtime="20201001 14:06:16.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:16.417">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:16.417">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:16.416" endtime="20201001 14:06:16.417"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:16.417">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:16.398" endtime="20201001 14:06:16.417"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:16.418">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:16.418">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:16.418" endtime="20201001 14:06:16.418"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:16.419">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:16.418" endtime="20201001 14:06:16.419"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:16.397" endtime="20201001 14:06:16.419"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:18.421">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:18.420" endtime="20201001 14:06:18.421"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:18.422">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:18.422" endtime="20201001 14:06:18.422"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:18.443">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:18.443">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:18.443">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:18.422" endtime="20201001 14:06:18.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:18.444">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:18.443" endtime="20201001 14:06:18.444"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:18.444">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:18.445">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:18.444" endtime="20201001 14:06:18.445"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:18.445">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:18.421" endtime="20201001 14:06:18.445"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:18.446">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:18.446">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:18.445" endtime="20201001 14:06:18.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:18.446">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:18.446" endtime="20201001 14:06:18.447"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:18.420" endtime="20201001 14:06:18.447"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:20.448">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:20.448" endtime="20201001 14:06:20.448"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:20.449">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:20.449" endtime="20201001 14:06:20.450"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:20.514">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:20.514">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:20.514">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:20.450" endtime="20201001 14:06:20.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:20.515">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:20.515" endtime="20201001 14:06:20.515"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:20.516">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:20.516">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:20.515" endtime="20201001 14:06:20.516"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:20.516">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:20.449" endtime="20201001 14:06:20.516"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:20.517">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:20.517">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:20.517" endtime="20201001 14:06:20.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:20.518">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:20.517" endtime="20201001 14:06:20.518"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:20.447" endtime="20201001 14:06:20.518"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:22.519">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:22.519" endtime="20201001 14:06:22.519"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:22.521">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:22.520" endtime="20201001 14:06:22.521"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:22.538">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:22.539">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:22.539">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:22.521" endtime="20201001 14:06:22.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:22.540">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:22.539" endtime="20201001 14:06:22.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:22.540">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:22.540">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:22.540" endtime="20201001 14:06:22.540"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:22.541">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:22.520" endtime="20201001 14:06:22.541"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:22.541">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:22.542">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:22.541" endtime="20201001 14:06:22.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:22.542">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:22.542" endtime="20201001 14:06:22.542"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:22.518" endtime="20201001 14:06:22.542"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:24.544">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:24.543" endtime="20201001 14:06:24.544"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:24.545">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:24.545" endtime="20201001 14:06:24.545"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:24.560">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:24.560">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:24.560">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:24.545" endtime="20201001 14:06:24.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:24.561">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:24.561" endtime="20201001 14:06:24.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:24.562">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:24.562">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:24.561" endtime="20201001 14:06:24.562"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:24.562">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:24.544" endtime="20201001 14:06:24.562"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:24.563">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:24.563">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:24.562" endtime="20201001 14:06:24.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:24.564">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:24.563" endtime="20201001 14:06:24.564"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:24.543" endtime="20201001 14:06:24.564"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:26.565">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:26.565" endtime="20201001 14:06:26.565"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:26.566">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:26.566" endtime="20201001 14:06:26.566"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:26.582">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:26.582">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:26.582">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:26.567" endtime="20201001 14:06:26.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:26.583">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:26.583" endtime="20201001 14:06:26.583"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:26.584">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:26.584">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:26.583" endtime="20201001 14:06:26.584"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:26.584">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:26.565" endtime="20201001 14:06:26.584"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:26.585">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:26.585">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:26.584" endtime="20201001 14:06:26.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:26.585">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:26.585" endtime="20201001 14:06:26.585"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:26.564" endtime="20201001 14:06:26.586"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:28.587">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:28.587" endtime="20201001 14:06:28.587"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:28.588">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:28.588" endtime="20201001 14:06:28.588"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:28.603">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:28.603">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:28.603">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:28.589" endtime="20201001 14:06:28.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:28.604">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:28.603" endtime="20201001 14:06:28.604"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:28.604">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:28.604">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:28.604" endtime="20201001 14:06:28.604"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:28.605">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:28.587" endtime="20201001 14:06:28.605"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:28.605">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:28.606">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:28.605" endtime="20201001 14:06:28.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:28.606">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:28.606" endtime="20201001 14:06:28.606"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:28.586" endtime="20201001 14:06:28.606"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:30.608">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:30.607" endtime="20201001 14:06:30.608"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:30.609">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:30.609" endtime="20201001 14:06:30.609"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:30.624">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:30.625">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:30.625">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:30.609" endtime="20201001 14:06:30.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:30.625">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:30.625" endtime="20201001 14:06:30.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:30.626">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:30.626">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:30.626" endtime="20201001 14:06:30.626"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:30.627">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:30.608" endtime="20201001 14:06:30.627"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:30.627">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:30.627">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:30.627" endtime="20201001 14:06:30.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:30.628">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:30.628" endtime="20201001 14:06:30.628"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:30.607" endtime="20201001 14:06:30.628"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:32.630">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:32.629" endtime="20201001 14:06:32.630"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:32.631">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:32.630" endtime="20201001 14:06:32.631"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:32.647">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:32.647">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:32.647">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:32.631" endtime="20201001 14:06:32.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:32.648">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:32.648" endtime="20201001 14:06:32.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:32.649">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:32.649">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:32.648" endtime="20201001 14:06:32.649"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:32.649">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:32.630" endtime="20201001 14:06:32.649"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:32.650">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:32.650">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:32.649" endtime="20201001 14:06:32.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:32.651">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:32.650" endtime="20201001 14:06:32.651"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:32.629" endtime="20201001 14:06:32.651"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:34.652">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:34.652" endtime="20201001 14:06:34.652"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:34.653">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:34.653" endtime="20201001 14:06:34.653"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:34.670">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:34.670">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:34.670">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:34.654" endtime="20201001 14:06:34.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:34.671">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:34.671" endtime="20201001 14:06:34.671"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:34.672">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:34.672">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:34.671" endtime="20201001 14:06:34.672"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:34.672">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:34.652" endtime="20201001 14:06:34.672"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:34.673">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:34.673">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:34.672" endtime="20201001 14:06:34.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:34.674">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:34.673" endtime="20201001 14:06:34.674"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:34.651" endtime="20201001 14:06:34.674"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:36.675">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:36.675" endtime="20201001 14:06:36.675"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:36.676">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:36.676" endtime="20201001 14:06:36.676"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:36.701">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:36.701">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:36.701">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:36.677" endtime="20201001 14:06:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:36.702">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:36.701" endtime="20201001 14:06:36.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:36.702">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:36.703">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:36.702" endtime="20201001 14:06:36.703"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:36.703">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:36.675" endtime="20201001 14:06:36.703"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:36.704">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:36.704">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:36.703" endtime="20201001 14:06:36.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:36.704">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:36.704" endtime="20201001 14:06:36.705"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:36.674" endtime="20201001 14:06:36.705"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:38.706">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:38.706" endtime="20201001 14:06:38.706"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:38.707">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:38.707" endtime="20201001 14:06:38.707"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:38.723">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:38.723">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:38.723">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:38.708" endtime="20201001 14:06:38.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:38.724">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:38.723" endtime="20201001 14:06:38.724"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:38.724">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:38.724">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:38.724" endtime="20201001 14:06:38.725"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:38.725">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:38.706" endtime="20201001 14:06:38.725"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:38.726">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:38.726">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:38.725" endtime="20201001 14:06:38.726"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:38.726">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:38.726" endtime="20201001 14:06:38.726"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:38.705" endtime="20201001 14:06:38.727"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:40.728">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:40.727" endtime="20201001 14:06:40.728"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:40.729">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:40.729" endtime="20201001 14:06:40.729"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:40.745">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:40.745">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:40.745">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:40.729" endtime="20201001 14:06:40.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:40.746">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:40.745" endtime="20201001 14:06:40.746"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:40.746">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:40.747">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:40.746" endtime="20201001 14:06:40.747"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:40.747">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:40.728" endtime="20201001 14:06:40.747"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:40.748">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:40.748">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:40.747" endtime="20201001 14:06:40.748"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:40.748">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:40.748" endtime="20201001 14:06:40.749"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:40.727" endtime="20201001 14:06:40.749"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:42.750">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:42.750" endtime="20201001 14:06:42.750"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:42.751">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:42.751" endtime="20201001 14:06:42.751"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:42.775">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:42.775">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:42.775">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:42.752" endtime="20201001 14:06:42.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:42.776">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:42.776" endtime="20201001 14:06:42.776"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:42.777">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:42.777">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:42.776" endtime="20201001 14:06:42.777"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:42.777">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:42.750" endtime="20201001 14:06:42.777"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:42.778">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:42.778">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:42.777" endtime="20201001 14:06:42.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:42.779">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:42.778" endtime="20201001 14:06:42.779"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:42.749" endtime="20201001 14:06:42.779"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:44.780">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:44.780" endtime="20201001 14:06:44.780"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:44.781">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:44.781" endtime="20201001 14:06:44.781"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:44.796">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:44.797">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:44.797">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:44.781" endtime="20201001 14:06:44.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:44.797">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:44.797" endtime="20201001 14:06:44.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:44.798">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:44.798">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:44.798" endtime="20201001 14:06:44.798"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:44.799">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:44.780" endtime="20201001 14:06:44.799"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:44.799">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:44.799">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:44.799" endtime="20201001 14:06:44.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:44.800">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:44.800" endtime="20201001 14:06:44.800"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:44.779" endtime="20201001 14:06:44.800"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:46.802">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:46.801" endtime="20201001 14:06:46.802"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:46.803">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:46.803" endtime="20201001 14:06:46.803"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:46.819">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:46.819">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:46.819">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:46.803" endtime="20201001 14:06:46.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:46.820">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:46.820" endtime="20201001 14:06:46.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:46.821">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:46.821">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:46.820" endtime="20201001 14:06:46.821"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:46.821">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:46.802" endtime="20201001 14:06:46.821"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:46.822">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:46.822">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:46.821" endtime="20201001 14:06:46.822"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:46.823">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:46.822" endtime="20201001 14:06:46.823"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:46.801" endtime="20201001 14:06:46.823"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:48.824">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:48.824" endtime="20201001 14:06:48.824"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:48.826">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:48.825" endtime="20201001 14:06:48.826"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:48.852">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:48.852">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:48.853">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:48.826" endtime="20201001 14:06:48.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:48.853">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:48.853" endtime="20201001 14:06:48.853"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:48.854">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:48.854">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:48.854" endtime="20201001 14:06:48.854"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:48.855">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:48.825" endtime="20201001 14:06:48.855"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:48.855">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:48.855">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:48.855" endtime="20201001 14:06:48.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:48.856">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:48.856" endtime="20201001 14:06:48.856"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:48.823" endtime="20201001 14:06:48.856"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:50.858">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:50.857" endtime="20201001 14:06:50.858"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:50.859">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:50.858" endtime="20201001 14:06:50.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:50.878">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:50.878">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:50.878">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:50.859" endtime="20201001 14:06:50.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:50.879">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:50.878" endtime="20201001 14:06:50.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:50.879">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:50.880">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:50.879" endtime="20201001 14:06:50.880"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:50.880">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:50.858" endtime="20201001 14:06:50.880"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:50.881">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:50.881">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:50.880" endtime="20201001 14:06:50.881"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:50.881">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:50.881" endtime="20201001 14:06:50.881"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:50.857" endtime="20201001 14:06:50.882"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:52.883">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:52.883" endtime="20201001 14:06:52.883"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:52.884">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:52.884" endtime="20201001 14:06:52.884"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:52.901">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:52.901">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:52.901">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:52.885" endtime="20201001 14:06:52.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:52.902">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:52.901" endtime="20201001 14:06:52.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:52.902">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:52.903">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:52.902" endtime="20201001 14:06:52.903"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:52.903">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:52.883" endtime="20201001 14:06:52.903"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:52.904">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:52.904">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:52.903" endtime="20201001 14:06:52.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:52.905">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:52.904" endtime="20201001 14:06:52.905"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:52.882" endtime="20201001 14:06:52.905"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:54.906">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:54.906" endtime="20201001 14:06:54.906"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:54.907">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:54.907" endtime="20201001 14:06:54.907"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:54.928">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:54.928">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:54.928">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:54.908" endtime="20201001 14:06:54.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:54.929">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:54.928" endtime="20201001 14:06:54.929"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:54.930">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:54.930">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:54.929" endtime="20201001 14:06:54.930"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:54.930">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:54.906" endtime="20201001 14:06:54.930"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:54.931">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:54.931">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:54.930" endtime="20201001 14:06:54.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:54.932">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:54.931" endtime="20201001 14:06:54.932"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:54.905" endtime="20201001 14:06:54.932"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:56.933">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:56.933" endtime="20201001 14:06:56.933"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:56.934">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:56.934" endtime="20201001 14:06:56.934"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:56.950">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:56.950">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:56.950">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:56.935" endtime="20201001 14:06:56.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:56.951">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:56.950" endtime="20201001 14:06:56.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:56.951">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:56.952">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:56.951" endtime="20201001 14:06:56.952"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:56.952">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:56.933" endtime="20201001 14:06:56.952"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:56.953">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:56.953">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:56.952" endtime="20201001 14:06:56.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:56.953">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:56.953" endtime="20201001 14:06:56.953"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:56.932" endtime="20201001 14:06:56.954"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:58.955">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:06:58.955" endtime="20201001 14:06:58.955"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:58.956">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:06:58.956" endtime="20201001 14:06:58.956"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:58.974">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:58.974">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:06:58.974">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:06:58.956" endtime="20201001 14:06:58.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:58.975">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:06:58.975" endtime="20201001 14:06:58.975"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:58.976">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:06:58.976">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:06:58.975" endtime="20201001 14:06:58.976"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:06:58.976">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:06:58.955" endtime="20201001 14:06:58.976"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:06:58.977">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:06:58.977">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:58.977" endtime="20201001 14:06:58.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:06:58.978">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:06:58.978" endtime="20201001 14:06:58.978"></status>
</kw>
<status status="FAIL" starttime="20201001 14:06:58.954" endtime="20201001 14:06:58.978"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:00.980">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:07:00.979" endtime="20201001 14:07:00.980"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:00.981">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:07:00.981" endtime="20201001 14:07:00.981"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:01.013">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:01.013">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:01.013">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:07:00.981" endtime="20201001 14:07:01.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:01.014">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:07:01.014" endtime="20201001 14:07:01.014"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:01.015">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:07:01.015">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:07:01.015" endtime="20201001 14:07:01.015"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:01.015">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:07:00.980" endtime="20201001 14:07:01.016"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:01.016">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:07:01.016">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:07:01.016" endtime="20201001 14:07:01.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:01.017">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:07:01.017" endtime="20201001 14:07:01.017"></status>
</kw>
<status status="FAIL" starttime="20201001 14:07:00.979" endtime="20201001 14:07:01.017"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:03.018">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:07:03.018" endtime="20201001 14:07:03.019"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:03.020">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:07:03.019" endtime="20201001 14:07:03.020"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:03.076">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:03.076">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:03.076">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:07:03.020" endtime="20201001 14:07:03.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:03.077">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:07:03.077" endtime="20201001 14:07:03.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:03.078">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:07:03.078">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:07:03.077" endtime="20201001 14:07:03.078"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:03.078">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:07:03.019" endtime="20201001 14:07:03.078"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:03.079">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:07:03.079">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:07:03.078" endtime="20201001 14:07:03.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:03.080">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:07:03.079" endtime="20201001 14:07:03.080"></status>
</kw>
<status status="FAIL" starttime="20201001 14:07:03.018" endtime="20201001 14:07:03.080"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.081">${AttWhiteListDict} = {'device_id': 'of:0000d0d3e158fede', 'owner_id': 2, 'serial_number': 'PSMO00000000', 'pon_port_id': 1}</msg>
<status status="PASS" starttime="20201001 14:07:05.081" endtime="20201001 14:07:05.082"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.083">${data} = {"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}</msg>
<status status="PASS" starttime="20201001 14:07:05.082" endtime="20201001 14:07:05.083"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.099">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'Accept': '*/*', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4=', 'Content-Length': '102', 'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.24.0'} 
 body=b'{"device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "serial_number": "PSMO00000000", "owner_id": 2}' 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:05.099">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg level="INFO" timestamp="20201001 14:07:05.099">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20201001 14:07:05.083" endtime="20201001 14:07:05.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.100">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20201001 14:07:05.099" endtime="20201001 14:07:05.100"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.100">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20201001 14:07:05.100">500 != 200</msg>
<status status="FAIL" starttime="20201001 14:07:05.100" endtime="20201001 14:07:05.101"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:05.101">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20201001 14:07:05.082" endtime="20201001 14:07:05.101"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.102">${id} = None</msg>
<msg level="FAIL" timestamp="20201001 14:07:05.102">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:07:05.101" endtime="20201001 14:07:05.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.102">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20201001 14:07:05.102" endtime="20201001 14:07:05.102"></status>
</kw>
<status status="FAIL" starttime="20201001 14:07:05.081" endtime="20201001 14:07:05.103"></status>
</kw>
<msg level="FAIL" timestamp="20201001 14:07:05.103">Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20201001 14:06:04.243" endtime="20201001 14:07:05.103"></status>
</kw>
<kw name="Subscriber Ready to Authenticate">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>15s</arg>
<arg>Validate ONU States</arg>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate ONU States" library="ONU">
<doc>Check that ONU has the expected 'operational_status' and 'admin_status'</doc>
<arguments>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="ONU Status Check" library="ONU">
<doc>Returns "operational_status" and "admin_status" of
a particular ONU device from "onu device list"</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${operational_status}</var>
<var>${admin_status}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ONU_DEVICE</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.124">get url... http://127.0.0.1:30006/xosapi/v1/volt/onudevices
Test passed: 200: {"items": [{"volt_service_instances_ids": [], "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1601560398.631499, \"exponent\": 0}", "connect_status": "REACHABLE", "device_type": "ponsim_onu", "backend_status": "OK", "id": 1, "backend_need_delete": true, "self_content_type_id": "volt.onudevice_decl", "backend_code": 1, "pon_port_id": 1, "serial_number": "PSMO00000000", "enacted": 1601560395.255242, "no_sync": false, "updated": 1601560395.255242, "vendor": "ponsim", "deleted": false, "ani_ports_ids": [4], "policy_status": "Policy in process", "lazy_blocked": false, "oper_status": "ACTIVE", "admin_state": "ENABLED", "backend_need_reap": false, "policy_code": 0, "leaf_model_name": "ONUDevice", "created": 1601560395.261057, "write_protect": false, "no_policy": false, "reason": "", "uni_ports_ids": [3], "device_id": "000153e96afe4b98", "xos_managed": false, "class_names": "ONUDevice,ONUDevice_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.124">${json_result} = {'items': [{'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacte...</msg>
<status status="PASS" starttime="20201001 14:07:05.105" endtime="20201001 14:07:05.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.125">{'items': [{'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacted': 1601560395.255242, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'oper_status': 'ACTIVE', 'write_protect': False, 'deleted': False, 'no_policy': False, 'device_type': 'ponsim_onu', 'policy_code': 0, 'backend_need_delete_policy': False, 'serial_number': 'PSMO00000000', 'created': 1601560395.261057, 'backend_status': 'OK', 'uni_ports_ids': [3], 'vendor': 'ponsim', 'backend_need_reap': False, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'connect_status': 'REACHABLE', 'id': 1, 'no_sync': False, 'xos_managed': False, 'updated': 1601560395.255242, 'volt_service_instances_ids': [], 'reason': '', 'lazy_blocked': False, 'backend_code': 1}]}</msg>
<status status="PASS" starttime="20201001 14:07:05.124" endtime="20201001 14:07:05.125"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.125">${json_result_list} = [{'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacted': 160156...</msg>
<status status="PASS" starttime="20201001 14:07:05.125" endtime="20201001 14:07:05.125"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.126">data {'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacted': 1601560395.255242, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'oper_status': 'ACTIVE', 'write_protect': False, 'deleted': False, 'no_policy': False, 'device_type': 'ponsim_onu', 'policy_code': 0, 'backend_need_delete_policy': False, 'serial_number': 'PSMO00000000', 'created': 1601560395.261057, 'backend_status': 'OK', 'uni_ports_ids': [3], 'vendor': 'ponsim', 'backend_need_reap': False, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'connect_status': 'REACHABLE', 'id': 1, 'no_sync': False, 'xos_managed': False, 'updated': 1601560395.255242, 'volt_service_instances_ids': [], 'reason': '', 'lazy_blocked': False, 'backend_code': 1}
return_dict {'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacted': 1601560395.255242, 'backend_register': '{"next_run": 0, "last_success": 1601560398.631499, "exponent": 0}', 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase', 'oper_status': 'ACTIVE', 'write_protect': False, 'deleted': False, 'no_policy': False, 'device_type': 'ponsim_onu', 'policy_code': 0, 'backend_need_delete_policy': False, 'serial_number': 'PSMO00000000', 'created': 1601560395.261057, 'backend_status': 'OK', 'uni_ports_ids': [3], 'vendor': 'ponsim', 'backend_need_reap': False, 'admin_state': 'ENABLED', 'policy_status': 'Policy in process', 'connect_status': 'REACHABLE', 'id': 1, 'no_sync': False, 'xos_managed': False, 'updated': 1601560395.255242, 'volt_service_instances_ids': [], 'reason': '', 'lazy_blocked': False, 'backend_code': 1}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.126">${getJsonDict} = {'device_id': '000153e96afe4b98', 'ani_ports_ids': [4], 'pon_port_id': 1, 'self_content_type_id': 'volt.onudevice_decl', 'leaf_model_name': 'ONUDevice', 'backend_need_delete': True, 'enacted': 1601560...</msg>
<status status="PASS" starttime="20201001 14:07:05.126" endtime="20201001 14:07:05.126"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>oper_status</arg>
</arguments>
<assign>
<var>${operational_status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.126">${operational_status} = ACTIVE</msg>
<status status="PASS" starttime="20201001 14:07:05.126" endtime="20201001 14:07:05.127"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>admin_state</arg>
</arguments>
<assign>
<var>${admin_status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.127">${admin_status} = ENABLED</msg>
<status status="PASS" starttime="20201001 14:07:05.127" endtime="20201001 14:07:05.127"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:05.127">${operational_status} = ACTIVE</msg>
<msg level="INFO" timestamp="20201001 14:07:05.127">${admin_status} = ENABLED</msg>
<status status="PASS" starttime="20201001 14:07:05.104" endtime="20201001 14:07:05.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${operational_status}</arg>
<arg>${expected_op_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.128" endtime="20201001 14:07:05.128"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${admin_status}</arg>
<arg>${expected_admin_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.128" endtime="20201001 14:07:05.128"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.104" endtime="20201001 14:07:05.129"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.103" endtime="20201001 14:07:05.129"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw name="Validate ATT Workflow Driver SI" library="ATTWorkFlowDriver">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw name="Service Instance Status Check" library="ATTWorkFlowDriver">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.151">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1601560395.817033, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1601560398.9453, "id": 55, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1601560395.817033, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1601560395.823846, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.151">${json_result} = {'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy...</msg>
<status status="PASS" starttime="20201001 14:07:05.130" endtime="20201001 14:07:05.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.152">{'items': [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}]}</msg>
<status status="PASS" starttime="20201001 14:07:05.151" endtime="20201001 14:07:05.152"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.152">${json_result_list} = [{'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, ...</msg>
<status status="PASS" starttime="20201001 14:07:05.152" endtime="20201001 14:07:05.152"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.153">data {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}
return_dict {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, 'ip_address': '', 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'backend_need_delete': False, 'backend_register': '{}', 'link_deleted_count': 0, 'ports_ids': [], 'deleted': False, 'subscribed_links_ids': [], 'service_instance_attributes_ids': [], 'serial_number': 'PSMO00000000', 'status_message': 'ONU has been validated - Awaiting Authentication', 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase', 'mac_address': '', 'policy_status': 'done', 'backend_status': 'Provisioning in progress', 'authentication_state': 'AWAITING', 'no_policy': False, 'backend_need_reap': False, 'provided_links_ids': [], 'lazy_blocked': False, 'policy_code': 1, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'of_dpid': 'of:0000d0d3e158fede', 'id': 55, 'write_protect': False, 'admin_onu_state': 'ENABLED', 'updated': 1601560395.817033, 'no_sync': False, 'owner_id': 2, 'changed_by_policy': 1601560398.9453, 'oper_onu_status': 'ENABLED', 'backend_code': 0}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.153">${getJsonDict} = {'policed': 1601560395.817033, 'created': 1601560395.823846, 'dhcp_state': 'AWAITING', 'uni_port_id': 128, 'xos_managed': True, 'child_serviceinstances_ids': [], 'backend_need_delete_policy': False, '...</msg>
<status status="PASS" starttime="20201001 14:07:05.152" endtime="20201001 14:07:05.153"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.154">${onu_state} = ENABLED</msg>
<status status="PASS" starttime="20201001 14:07:05.153" endtime="20201001 14:07:05.154"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.154">${authentication_state} = AWAITING</msg>
<status status="PASS" starttime="20201001 14:07:05.154" endtime="20201001 14:07:05.154"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.155">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20201001 14:07:05.154" endtime="20201001 14:07:05.155"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:05.155">${onu_state} = ENABLED</msg>
<msg level="INFO" timestamp="20201001 14:07:05.155">${authentication_status} = AWAITING</msg>
<msg level="INFO" timestamp="20201001 14:07:05.155">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20201001 14:07:05.130" endtime="20201001 14:07:05.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.155" endtime="20201001 14:07:05.156"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.156" endtime="20201001 14:07:05.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.157" endtime="20201001 14:07:05.157"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.156" endtime="20201001 14:07:05.157"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.129" endtime="20201001 14:07:05.157"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.129" endtime="20201001 14:07:05.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate Subscriber Status</arg>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate Subscriber Status" library="Subscriber">
<doc>Check that a subscriber has the expected status</doc>
<arguments>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Subscriber Status Check" library="Subscriber">
<doc>Returns Status from Subscribers List for a particular ONU device</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>VOLT_SUBSCRIBER</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.192">get url... http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers
Test passed: 200: {"items": [{"ips_ids": [], "policed": 1601560398.894617, "c_tag": 111, "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1601560399.529146, \"exponent\": 0}", "backend_status": "OK", "changed_by_policy": 1601560398.894742, "id": 54, "s_tag": 222, "backend_need_delete": true, "provided_links_ids": [], "child_serviceinstances_ids": [], "self_content_type_id": "rcord.rcordsubscriber_decl", "backend_code": 1, "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "ports_ids": [], "enacted": 1601560398.894742, "no_sync": false, "owner_id": 1, "status": "awaiting-auth", "updated": 1601560398.894617, "downstream_bps_id": 2, "deleted": false, "policy_status": "done", "lazy_blocked": false, "tech_profile_id": 64, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "RCORDSubscriber", "name": "QQClient0-0", "created": 1601560392.558882, "write_protect": false, "no_policy": false, "upstream_bps_id": 2, "creator_id": 1, "xos_managed": true, "onu_device": "PSMO00000000", "subscribed_links_ids": [], "class_names": "RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.192">${json_result} = {'items': [{'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': Tr...</msg>
<status status="PASS" starttime="20201001 14:07:05.159" endtime="20201001 14:07:05.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg level="INFO" timestamp="20201001 14:07:05.193">{'items': [{'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': True, 'enacted': 1601560398.894742, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'subscribed_links_ids': [], 'link_deleted_count': 0, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'upstream_bps_id': 2, 'deleted': False, 'creator_id': 1, 'ips_ids': [], 'no_policy': False, 'service_instance_attributes_ids': [], 'owner_id': 1, 'updated': 1601560398.894617, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'downstream_bps_id': 2, 'mac_address': '', 's_tag': 222, 'backend_status': 'OK', 'onu_device': 'PSMO00000000', 'name': 'QQClient0-0', 'backend_need_reap': False, 'created': 1601560392.558882, 'tech_profile_id': 64, 'policy_code': 1, 'child_serviceinstances_ids': [], 'policy_status': 'done', 'id': 54, 'write_protect': False, 'xos_managed': True, 'provided_links_ids': [], 'no_sync': False, 'changed_by_policy': 1601560398.894742, 'lazy_blocked': False, 'backend_code': 1}]}</msg>
<status status="PASS" starttime="20201001 14:07:05.192" endtime="20201001 14:07:05.193"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.193">${json_result_list} = [{'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': True, 'enact...</msg>
<status status="PASS" starttime="20201001 14:07:05.193" endtime="20201001 14:07:05.193"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>onu_device</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.194">data {'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': True, 'enacted': 1601560398.894742, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'subscribed_links_ids': [], 'link_deleted_count': 0, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'upstream_bps_id': 2, 'deleted': False, 'creator_id': 1, 'ips_ids': [], 'no_policy': False, 'service_instance_attributes_ids': [], 'owner_id': 1, 'updated': 1601560398.894617, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'downstream_bps_id': 2, 'mac_address': '', 's_tag': 222, 'backend_status': 'OK', 'onu_device': 'PSMO00000000', 'name': 'QQClient0-0', 'backend_need_reap': False, 'created': 1601560392.558882, 'tech_profile_id': 64, 'policy_code': 1, 'child_serviceinstances_ids': [], 'policy_status': 'done', 'id': 54, 'write_protect': False, 'xos_managed': True, 'provided_links_ids': [], 'no_sync': False, 'changed_by_policy': 1601560398.894742, 'lazy_blocked': False, 'backend_code': 1}
return_dict {'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': True, 'enacted': 1601560398.894742, 'backend_register': '{"next_run": 0, "last_success": 1601560399.529146, "exponent": 0}', 'subscribed_links_ids': [], 'link_deleted_count': 0, 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'upstream_bps_id': 2, 'deleted': False, 'creator_id': 1, 'ips_ids': [], 'no_policy': False, 'service_instance_attributes_ids': [], 'owner_id': 1, 'updated': 1601560398.894617, 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase', 'downstream_bps_id': 2, 'mac_address': '', 's_tag': 222, 'backend_status': 'OK', 'onu_device': 'PSMO00000000', 'name': 'QQClient0-0', 'backend_need_reap': False, 'created': 1601560392.558882, 'tech_profile_id': 64, 'policy_code': 1, 'child_serviceinstances_ids': [], 'policy_status': 'done', 'id': 54, 'write_protect': False, 'xos_managed': True, 'provided_links_ids': [], 'no_sync': False, 'changed_by_policy': 1601560398.894742, 'lazy_blocked': False, 'backend_code': 1}</msg>
<msg level="INFO" timestamp="20201001 14:07:05.194">${getJsonDict} = {'policed': 1601560398.894617, 'ports_ids': [], 'leaf_model_name': 'RCORDSubscriber', 'backend_need_delete_policy': False, 'c_tag': 111, 'status': 'awaiting-auth', 'backend_need_delete': True, 'enacte...</msg>
<status status="PASS" starttime="20201001 14:07:05.194" endtime="20201001 14:07:05.194"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20201001 14:07:05.195">${status} = awaiting-auth</msg>
<status status="PASS" starttime="20201001 14:07:05.194" endtime="20201001 14:07:05.195"></status>
</kw>
<msg level="INFO" timestamp="20201001 14:07:05.195">${status} = awaiting-auth</msg>
<status status="PASS" starttime="20201001 14:07:05.158" endtime="20201001 14:07:05.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${accepted_status}' == '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>ELSE</arg>
<arg>Should Contain Any</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>${accepted_status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20201001 14:07:05.196" endtime="20201001 14:07:05.196"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.195" endtime="20201001 14:07:05.196"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.158" endtime="20201001 14:07:05.197"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.158" endtime="20201001 14:07:05.197"></status>
</kw>
<status status="PASS" starttime="20201001 14:07:05.103" endtime="20201001 14:07:05.197"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:03.532" endtime="20201001 14:07:05.197"></status>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg level="INFO" timestamp="20201001 14:07:05.197">Delete All Sessions</msg>
<status status="PASS" starttime="20201001 14:07:05.197" endtime="20201001 14:07:05.198"></status>
</kw>
<status status="FAIL" starttime="20201001 14:05:03.530" endtime="20201001 14:07:05.198">Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</kw>
<doc>Test various E2E conditions for seba-in-a-box</doc>
<status status="FAIL" starttime="20201001 14:04:12.376" endtime="20201001 14:07:05.198">Suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Thu Oct  1 13:07:33 2020 from 10.16.10.32
root@openCORD1:~# .

Also suite teardown failed:
Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</suite>
<statistics>
<total>
<stat fail="10" pass="0">Critical Tests</stat>
<stat fail="10" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="10" pass="0">latest</stat>
<stat fail="1" pass="0">multicast</stat>
<stat fail="10" pass="0">stable</stat>
<stat fail="1" pass="0">test1</stat>
<stat fail="1" pass="0">test10</stat>
<stat fail="1" pass="0">test2</stat>
<stat fail="1" pass="0">test3</stat>
<stat fail="1" pass="0">test4</stat>
<stat fail="1" pass="0">test5</stat>
<stat fail="1" pass="0">test6</stat>
<stat fail="1" pass="0">test7</stat>
<stat fail="1" pass="0">test8</stat>
<stat fail="1" pass="0">test9</stat>
</tag>
<suite>
<stat fail="10" name="SIAB" id="s1" pass="0">SIAB</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
