<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.6.9 on linux)" generated="20200914 00:46:14.878" rpa="false">
<suite id="s1" name="SIAB" source="/root/cord/test/cord-tester/src/test/cord-api/Tests/WorkflowValidations/SIAB.robot">
<kw name="Setup" type="setup">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XOS_USER}</arg>
<arg>${XOS_PASSWD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20200914 00:46:15.277" level="INFO">${auth} = ['admin@opencord.org', 'letmein']</msg>
<status status="PASS" starttime="20200914 00:46:15.277" endtime="20200914 00:46:15.277"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20200914 00:46:15.278" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200914 00:46:15.277" endtime="20200914 00:46:15.278"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>http://${server_ip}:${server_port}</arg>
<arg>auth=${AUTH}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.279" level="INFO">Creating Session using : alias=127.0.0.1, url=http://127.0.0.1:30006, headers={'Content-Type': 'application/json'},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7f7ed3aba9b0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200914 00:46:15.279" endtime="20200914 00:46:15.280"></status>
</kw>
<kw name="Get Service Owner Id" library="XOS">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${ATT_SERVICE}</arg>
</arguments>
<assign>
<var>${att_workflow_service_id}</var>
</assign>
<kw name="CORD Get" library="XOS">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:46:15.342" level="INFO">GET Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=None 
 </msg>
<msg timestamp="20200914 00:46:15.343" level="INFO">GET Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1600034237.844293, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [56], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1600034178.663421, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg timestamp="20200914 00:46:15.343" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.281" endtime="20200914 00:46:15.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.344" level="INFO">{"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1600034237.844293, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [56], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1600034178.663421, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.343" endtime="20200914 00:46:15.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:46:15.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.344" endtime="20200914 00:46:15.344"></status>
</kw>
<msg timestamp="20200914 00:46:15.344" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.280" endtime="20200914 00:46:15.345"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20200914 00:46:15.345" level="INFO">To JSON using : content={"items": [{"slices_ids": [], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "backend_register": "{}", "subscribed_dependencies_ids": [7], "backend_status": "Provisioning in progress", "id": 2, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverservice", "backend_code": 0, "no_sync": false, "updated": 1600034237.844293, "provided_dependencies_ids": [], "deleted": false, "published": true, "service_instances_ids": [56], "policy_status": "Policy in process", "lazy_blocked": false, "whitelist_entries_ids": [1], "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "oss", "leaf_model_name": "AttWorkflowDriverService", "name": "att-workflow-driver", "created": 1600034178.663421, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "tags_ids": [], "subscribed_links_ids": [], "class_names": "AttWorkflowDriverService,Service,Service_decl,XOSBase"}]} </msg>
<msg timestamp="20200914 00:46:15.345" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200914 00:46:15.345" level="INFO">${jsondata} = {'items': [{'slices_ids': [], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{}', 'subscribed_dependencies_ids': [7], 'backend_status': 'Provisioning in progr...</msg>
<status status="PASS" starttime="20200914 00:46:15.345" endtime="20200914 00:46:15.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.346" level="INFO">{'items': [{'slices_ids': [], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{}', 'subscribed_dependencies_ids': [7], 'backend_status': 'Provisioning in progress', 'id': 2, 'backend_need_delete': False, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverservice', 'backend_code': 0, 'no_sync': False, 'updated': 1600034237.844293, 'provided_dependencies_ids': [], 'deleted': False, 'published': True, 'service_instances_ids': [56], 'policy_status': 'Policy in process', 'lazy_blocked': False, 'whitelist_entries_ids': [1], 'service_interfaces_ids': [], 'serviceports_ids': [], 'backend_need_reap': False, 'policy_code': 0, 'kind': 'oss', 'leaf_model_name': 'AttWorkflowDriverService', 'name': 'att-workflow-driver', 'created': 1600034178.663421, 'write_protect': False, 'no_policy': False, 'enabled': True, 'serviceattributes_ids': [], 'addresspools_ids': [], 'xos_managed': True, 'tags_ids': [], 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverService,Service,Service_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.345" endtime="20200914 00:46:15.346"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200914 00:46:15.346" level="INFO">Length is 1</msg>
<msg timestamp="20200914 00:46:15.346" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.346" endtime="20200914 00:46:15.346"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 0 | ${length} ]" type="for">
<kw name="${INDEX} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20200914 00:46:15.347" level="INFO">${value} = {'slices_ids': [], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{}', 'subscribed_dependencies_ids': [7], 'backend_status': 'Provisioning in progress', 'id':...</msg>
<status status="PASS" starttime="20200914 00:46:15.347" endtime="20200914 00:46:15.347"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:46:15.348" level="INFO">${id} = 2</msg>
<status status="PASS" starttime="20200914 00:46:15.348" endtime="20200914 00:46:15.348"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.347" endtime="20200914 00:46:15.348"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.347" endtime="20200914 00:46:15.348"></status>
</kw>
<msg timestamp="20200914 00:46:15.348" level="INFO">${att_workflow_service_id} = 2</msg>
<status status="PASS" starttime="20200914 00:46:15.280" endtime="20200914 00:46:15.348"></status>
</kw>
<kw name="Get Service Owner Id" library="XOS">
<doc>Find the id of owner of an XOS service</doc>
<arguments>
<arg>${VOLT_SERVICE}</arg>
</arguments>
<assign>
<var>${volt_service_id}</var>
</assign>
<kw name="CORD Get" library="XOS">
<doc>Make a GET call to XOS</doc>
<arguments>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${server_ip}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:46:15.405" level="INFO">GET Request : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 path_url=/xosapi/v1/volt/voltservices 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=None 
 </msg>
<msg timestamp="20200914 00:46:15.406" level="INFO">GET Response : url=http://127.0.0.1:30006/xosapi/v1/volt/voltservices 
 status=200, reason=OK 
 body={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 4, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1600034238.730104, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1600034180.934103, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} 
 </msg>
<msg timestamp="20200914 00:46:15.406" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.349" endtime="20200914 00:46:15.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.406" level="INFO">{"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 4, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1600034238.730104, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1600034180.934103, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.406" endtime="20200914 00:46:15.406"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:46:15.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.407" endtime="20200914 00:46:15.407"></status>
</kw>
<msg timestamp="20200914 00:46:15.407" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200914 00:46:15.349" endtime="20200914 00:46:15.407"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20200914 00:46:15.408" level="INFO">To JSON using : content={"items": [{"slices_ids": [], "volt_devices_ids": [1], "owned_trust_domains_ids": [], "backend_need_delete_policy": false, "voltha_pass": "admin", "backend_register": "{}", "subscribed_dependencies_ids": [6, 4], "voltha_port": 8882, "backend_status": "Provisioning in progress", "id": 4, "backend_need_delete": false, "self_content_type_id": "volt.voltservice_decl", "backend_code": 0, "no_sync": false, "updated": 1600034238.730104, "voltha_url": "voltha.voltha.svc.cluster.local", "provided_dependencies_ids": [7, 5], "deleted": false, "published": true, "service_instances_ids": [], "policy_status": "Policy in process", "lazy_blocked": false, "service_interfaces_ids": [], "serviceports_ids": [], "backend_need_reap": false, "policy_code": 0, "kind": "data", "leaf_model_name": "VOLTService", "name": "volt", "created": 1600034180.934103, "write_protect": false, "no_policy": false, "enabled": true, "serviceattributes_ids": [], "addresspools_ids": [], "xos_managed": true, "voltha_user": "voltha", "tags_ids": [], "subscribed_links_ids": [], "class_names": "VOLTService,VOLTService_decl,Service,Service_decl,XOSBase"}]} </msg>
<msg timestamp="20200914 00:46:15.408" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200914 00:46:15.408" level="INFO">${jsondata} = {'items': [{'slices_ids': [], 'volt_devices_ids': [1], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'voltha_pass': 'admin', 'backend_register': '{}', 'subscribed_dependencies_id...</msg>
<status status="PASS" starttime="20200914 00:46:15.407" endtime="20200914 00:46:15.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jsondata}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.409" level="INFO">{'items': [{'slices_ids': [], 'volt_devices_ids': [1], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'voltha_pass': 'admin', 'backend_register': '{}', 'subscribed_dependencies_ids': [6, 4], 'voltha_port': 8882, 'backend_status': 'Provisioning in progress', 'id': 4, 'backend_need_delete': False, 'self_content_type_id': 'volt.voltservice_decl', 'backend_code': 0, 'no_sync': False, 'updated': 1600034238.730104, 'voltha_url': 'voltha.voltha.svc.cluster.local', 'provided_dependencies_ids': [7, 5], 'deleted': False, 'published': True, 'service_instances_ids': [], 'policy_status': 'Policy in process', 'lazy_blocked': False, 'service_interfaces_ids': [], 'serviceports_ids': [], 'backend_need_reap': False, 'policy_code': 0, 'kind': 'data', 'leaf_model_name': 'VOLTService', 'name': 'volt', 'created': 1600034180.934103, 'write_protect': False, 'no_policy': False, 'enabled': True, 'serviceattributes_ids': [], 'addresspools_ids': [], 'xos_managed': True, 'voltha_user': 'voltha', 'tags_ids': [], 'subscribed_links_ids': [], 'class_names': 'VOLTService,VOLTService_decl,Service,Service_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.408" endtime="20200914 00:46:15.409"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200914 00:46:15.409" level="INFO">Length is 1</msg>
<msg timestamp="20200914 00:46:15.409" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.409" endtime="20200914 00:46:15.409"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 0 | ${length} ]" type="for">
<kw name="${INDEX} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${jsondata['items']}</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20200914 00:46:15.410" level="INFO">${value} = {'slices_ids': [], 'volt_devices_ids': [1], 'owned_trust_domains_ids': [], 'backend_need_delete_policy': False, 'voltha_pass': 'admin', 'backend_register': '{}', 'subscribed_dependencies_ids': [6, 4],...</msg>
<status status="PASS" starttime="20200914 00:46:15.410" endtime="20200914 00:46:15.410"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${value}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:46:15.410" level="INFO">${id} = 4</msg>
<status status="PASS" starttime="20200914 00:46:15.410" endtime="20200914 00:46:15.410"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.409" endtime="20200914 00:46:15.410"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.409" endtime="20200914 00:46:15.411"></status>
</kw>
<msg timestamp="20200914 00:46:15.411" level="INFO">${volt_service_id} = 4</msg>
<status status="PASS" starttime="20200914 00:46:15.348" endtime="20200914 00:46:15.411"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${WHITELIST_PATHFILE}</arg>
<arg>AttWhiteListInfo</arg>
</arguments>
<assign>
<var>${AttWhiteListList}</var>
</assign>
<msg timestamp="20200914 00:46:15.411" level="INFO">${AttWhiteListList} = [{'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': '1'}]</msg>
<status status="PASS" starttime="20200914 00:46:15.411" endtime="20200914 00:46:15.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${AttWhiteListList}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.412" level="INFO">${AttWhiteListList} = [{'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': '1'}]</msg>
<status status="PASS" starttime="20200914 00:46:15.412" endtime="20200914 00:46:15.412"></status>
</kw>
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.412" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': '1'}</msg>
<status status="PASS" starttime="20200914 00:46:15.412" endtime="20200914 00:46:15.412"></status>
</kw>
<kw name="Set Field Value In Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>owner_id</arg>
<arg>${att_workflow_service_id}</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.413" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:46:15.413" endtime="20200914 00:46:15.413"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>serial_number</arg>
</arguments>
<assign>
<var>${onu_device}</var>
</assign>
<msg timestamp="20200914 00:46:15.413" level="INFO">${onu_device} = PSMO00000000</msg>
<status status="PASS" starttime="20200914 00:46:15.413" endtime="20200914 00:46:15.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.414" level="INFO">PSMO00000000</msg>
<status status="PASS" starttime="20200914 00:46:15.413" endtime="20200914 00:46:15.414"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.414" level="INFO">${onu_device} = PSMO00000000</msg>
<status status="PASS" starttime="20200914 00:46:15.414" endtime="20200914 00:46:15.414"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${AttWhiteListDict}</arg>
<arg>pon_port_id</arg>
</arguments>
<assign>
<var>${onu_location}</var>
</assign>
<msg timestamp="20200914 00:46:15.415" level="INFO">${onu_location} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.414" endtime="20200914 00:46:15.415"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${onu_location}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.415" level="INFO">${onu_location} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.415" endtime="20200914 00:46:15.415"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${SUBSCRIBER_PATHFILE}</arg>
<arg>SubscriberInfo</arg>
</arguments>
<assign>
<var>${SubscriberList}</var>
</assign>
<msg timestamp="20200914 00:46:15.416" level="INFO">${SubscriberList} = [{'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}]</msg>
<status status="PASS" starttime="20200914 00:46:15.415" endtime="20200914 00:46:15.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SubscriberList}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.416" level="INFO">${SubscriberList} = [{'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}]</msg>
<status status="PASS" starttime="20200914 00:46:15.416" endtime="20200914 00:46:15.417"></status>
</kw>
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.417" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:46:15.417" endtime="20200914 00:46:15.417"></status>
</kw>
<kw name="Get Field Value From Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>s_tag</arg>
</arguments>
<assign>
<var>${s_tag}</var>
</assign>
<msg timestamp="20200914 00:46:15.417" level="INFO">key... name
key... s_tag</msg>
<msg timestamp="20200914 00:46:15.417" level="INFO">${s_tag} = 222</msg>
<status status="PASS" starttime="20200914 00:46:15.417" endtime="20200914 00:46:15.418"></status>
</kw>
<kw name="Get Field Value From Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberDict}</arg>
<arg>c_tag</arg>
</arguments>
<assign>
<var>${c_tag}</var>
</assign>
<msg timestamp="20200914 00:46:15.418" level="INFO">key... name
key... s_tag
key... c_tag</msg>
<msg timestamp="20200914 00:46:15.418" level="INFO">${c_tag} = 111</msg>
<status status="PASS" starttime="20200914 00:46:15.418" endtime="20200914 00:46:15.418"></status>
</kw>
<kw name="Json To List" library="CORDRobot">
<arguments>
<arg>${VOLT_DEVICE_PATHFILE}</arg>
<arg>VOLTDeviceInfo</arg>
</arguments>
<assign>
<var>${VoltDeviceList}</var>
</assign>
<msg timestamp="20200914 00:46:15.419" level="INFO">${VoltDeviceList} = [{'device_type': 'ponsim_olt', 'host': 'olt0.voltha.svc', 'port': 50060, 'switch_datapath_id': 'of:0000000000000001', 'switch_port': '2', 'outer_tpid': '0x8100', 'name': 'PONSIM OLT', 'uplink': '2', '...</msg>
<status status="PASS" starttime="20200914 00:46:15.418" endtime="20200914 00:46:15.419"></status>
</kw>
<kw name="Set Field Value In Dict" library="CORDRobot">
<arguments>
<arg>${VoltDeviceList[0]}</arg>
<arg>volt_service_id</arg>
<arg>${volt_service_id}</arg>
</arguments>
<assign>
<var>${VoltDeviceDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.419" level="INFO">${VoltDeviceDict} = {'device_type': 'ponsim_olt', 'host': 'olt0.voltha.svc', 'port': 50060, 'switch_datapath_id': 'of:0000000000000001', 'switch_port': '2', 'outer_tpid': '0x8100', 'name': 'PONSIM OLT', 'uplink': '2', 'v...</msg>
<status status="PASS" starttime="20200914 00:46:15.419" endtime="20200914 00:46:15.419"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceList}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.420" level="INFO">${VoltDeviceList} = [{'device_type': 'ponsim_olt', 'host': 'olt0.voltha.svc', 'port': 50060, 'switch_datapath_id': 'of:0000000000000001', 'switch_port': '2', 'outer_tpid': '0x8100', 'name': 'PONSIM OLT', 'uplink': '2', '...</msg>
<status status="PASS" starttime="20200914 00:46:15.419" endtime="20200914 00:46:15.420"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VoltDeviceDict}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.420" level="INFO">${VoltDeviceDict} = {'device_type': 'ponsim_olt', 'host': 'olt0.voltha.svc', 'port': 50060, 'switch_datapath_id': 'of:0000000000000001', 'switch_port': '2', 'outer_tpid': '0x8100', 'name': 'PONSIM OLT', 'uplink': '2', 'v...</msg>
<status status="PASS" starttime="20200914 00:46:15.420" endtime="20200914 00:46:15.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${s_tag}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.421" level="INFO">${s_tag} = 222</msg>
<status status="PASS" starttime="20200914 00:46:15.420" endtime="20200914 00:46:15.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${c_tag}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.421" level="INFO">${c_tag} = 111</msg>
<status status="PASS" starttime="20200914 00:46:15.421" endtime="20200914 00:46:15.421"></status>
</kw>
<kw name="Retrieve Whitelist Entry" library="ATTWorkFlowDriver">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${whitelist_id}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_WHITELIST</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:46:15.434" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries
Test passed: 200: {"items": [{"policed": 1600034237.949397, "backend_need_delete_policy": true, "backend_register": "{}", "backend_status": "Provisioning in progress", "id": 1, "backend_need_delete": false, "self_content_type_id": "att-workflow-driver.attworkflowdriverwhitelistentry", "backend_code": 0, "pon_port_id": 1, "serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "no_sync": false, "owner_id": 2, "updated": 1600034237.949397, "deleted": false, "policy_status": "done", "lazy_blocked": false, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverWhiteListEntry", "created": 1600034237.960974, "write_protect": false, "no_policy": false, "xos_managed": true, "class_names": "AttWorkflowDriverWhiteListEntry,XOSBase"}]}</msg>
<msg timestamp="20200914 00:46:15.434" level="INFO">${json_result} = {'items': [{'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_conte...</msg>
<status status="PASS" starttime="20200914 00:46:15.422" endtime="20200914 00:46:15.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.435" level="INFO">{'items': [{'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_code': 0, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'no_sync': False, 'owner_id': 2, 'updated': 1600034237.949397, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'created': 1600034237.960974, 'write_protect': False, 'no_policy': False, 'xos_managed': True, 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.434" endtime="20200914 00:46:15.435"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:46:15.435" level="INFO">${json_result_list} = [{'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_content_type_id...</msg>
<status status="PASS" starttime="20200914 00:46:15.435" endtime="20200914 00:46:15.435"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.436" level="INFO">data {'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_code': 0, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'no_sync': False, 'owner_id': 2, 'updated': 1600034237.949397, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'created': 1600034237.960974, 'write_protect': False, 'no_policy': False, 'xos_managed': True, 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase'}
return_dict {'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_content_type_id': 'att-workflow-driver.attworkflowdriverwhitelistentry', 'backend_code': 0, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'no_sync': False, 'owner_id': 2, 'updated': 1600034237.949397, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverWhiteListEntry', 'created': 1600034237.960974, 'write_protect': False, 'no_policy': False, 'xos_managed': True, 'class_names': 'AttWorkflowDriverWhiteListEntry,XOSBase'}</msg>
<msg timestamp="20200914 00:46:15.436" level="INFO">${getJsonDict} = {'policed': 1600034237.949397, 'backend_need_delete_policy': True, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'id': 1, 'backend_need_delete': False, 'self_content_type_id'...</msg>
<status status="PASS" starttime="20200914 00:46:15.436" endtime="20200914 00:46:15.436"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:46:15.436" level="INFO">${id} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.436" endtime="20200914 00:46:15.436"></status>
</kw>
<msg timestamp="20200914 00:46:15.437" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.421" endtime="20200914 00:46:15.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.437" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:46:15.437" endtime="20200914 00:46:15.437"></status>
</kw>
<kw name="Retrieve ATT Service Instance ID" library="ATTWorkFlowDriver">
<doc>Returns the whitelist entry per the ONU serial number</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${att_si_id}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:46:15.457" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1600034248.171005, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1600034253.100256, "id": 56, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1600034248.171005, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1600034248.183122, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg timestamp="20200914 00:46:15.457" level="INFO">${json_result} = {'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56,...</msg>
<status status="PASS" starttime="20200914 00:46:15.438" endtime="20200914 00:46:15.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.458" level="INFO">{'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.457" endtime="20200914 00:46:15.458"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:46:15.458" level="INFO">${json_result_list} = [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_...</msg>
<status status="PASS" starttime="20200914 00:46:15.458" endtime="20200914 00:46:15.458"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${serial_number}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.459" level="INFO">data {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}
return_dict {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}</msg>
<msg timestamp="20200914 00:46:15.459" level="INFO">${getJsonDict} = {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_n...</msg>
<status status="PASS" starttime="20200914 00:46:15.458" endtime="20200914 00:46:15.459"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:46:15.459" level="INFO">${id} = 56</msg>
<status status="PASS" starttime="20200914 00:46:15.459" endtime="20200914 00:46:15.459"></status>
</kw>
<msg timestamp="20200914 00:46:15.460" level="INFO">${att_si_id} = 56</msg>
<status status="PASS" starttime="20200914 00:46:15.437" endtime="20200914 00:46:15.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${att_si_id}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.460" level="INFO">${att_si_id} = 56</msg>
<status status="PASS" starttime="20200914 00:46:15.460" endtime="20200914 00:46:15.460"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1</arg>
</arguments>
<assign>
<var>${RG_CONTAINER}</var>
</assign>
<msg timestamp="20200914 00:46:15.487" level="INFO">Running command 'kubectl -n voltha get pod|grep "^rg[0-]"|cut -d' ' -f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200914 00:46:15.671" level="INFO">${RG_CONTAINER} = rg0-0-6b66bfdb98-pdb2n</msg>
<status status="PASS" starttime="20200914 00:46:15.460" endtime="20200914 00:46:15.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RG_CONTAINER}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.675" level="INFO">${RG_CONTAINER} = rg0-0-6b66bfdb98-pdb2n</msg>
<status status="PASS" starttime="20200914 00:46:15.673" endtime="20200914 00:46:15.675"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate ATT Workflow Driver SI" library="ATTWorkFlowDriver">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Service Instance Status Check" library="ATTWorkFlowDriver">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:46:15.703" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1600034248.171005, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1600034253.100256, "id": 56, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1600034248.171005, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1600034248.183122, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg timestamp="20200914 00:46:15.703" level="INFO">${json_result} = {'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56,...</msg>
<status status="PASS" starttime="20200914 00:46:15.678" endtime="20200914 00:46:15.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.704" level="INFO">{'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:46:15.704" endtime="20200914 00:46:15.704"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:46:15.705" level="INFO">${json_result_list} = [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_...</msg>
<status status="PASS" starttime="20200914 00:46:15.704" endtime="20200914 00:46:15.705"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:46:15.705" level="INFO">data {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}
return_dict {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}</msg>
<msg timestamp="20200914 00:46:15.706" level="INFO">${getJsonDict} = {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_n...</msg>
<status status="PASS" starttime="20200914 00:46:15.705" endtime="20200914 00:46:15.706"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg timestamp="20200914 00:46:15.706" level="INFO">${onu_state} = ENABLED</msg>
<status status="PASS" starttime="20200914 00:46:15.706" endtime="20200914 00:46:15.706"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg timestamp="20200914 00:46:15.707" level="INFO">${authentication_state} = AWAITING</msg>
<status status="PASS" starttime="20200914 00:46:15.706" endtime="20200914 00:46:15.707"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg timestamp="20200914 00:46:15.707" level="INFO">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20200914 00:46:15.707" endtime="20200914 00:46:15.707"></status>
</kw>
<msg timestamp="20200914 00:46:15.708" level="INFO">${onu_state} = ENABLED</msg>
<msg timestamp="20200914 00:46:15.708" level="INFO">${authentication_status} = AWAITING</msg>
<msg timestamp="20200914 00:46:15.708" level="INFO">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20200914 00:46:15.677" endtime="20200914 00:46:15.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.708" endtime="20200914 00:46:15.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.708" endtime="20200914 00:46:15.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.709" endtime="20200914 00:46:15.709"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.676" endtime="20200914 00:46:15.710"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.675" endtime="20200914 00:46:15.710"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{container_list}</var>
</assign>
<msg timestamp="20200914 00:46:15.710" level="INFO">@{container_list} = [ ]</msg>
<status status="PASS" starttime="20200914 00:46:15.710" endtime="20200914 00:46:15.710"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>att-workflow-att-workflow-driver</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.710" endtime="20200914 00:46:15.711"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-fabric-crossconnect</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.711" endtime="20200914 00:46:15.711"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-rcord</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.711" endtime="20200914 00:46:15.711"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>seba-services-volt</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.711" endtime="20200914 00:46:15.712"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>xos-core</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.712" endtime="20200914 00:46:15.712"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${container_list}</arg>
<arg>vcore</arg>
</arguments>
<status status="PASS" starttime="20200914 00:46:15.712" endtime="20200914 00:46:15.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${container_list}</arg>
</arguments>
<msg timestamp="20200914 00:46:15.713" level="INFO">${container_list} = ['att-workflow-att-workflow-driver', 'seba-services-fabric-crossconnect', 'seba-services-rcord', 'seba-services-volt', 'xos-core', 'vcore']</msg>
<status status="PASS" starttime="20200914 00:46:15.713" endtime="20200914 00:46:15.713"></status>
</kw>
<kw name="Setup SSH Keys to Localhost">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa</arg>
</arguments>
<msg timestamp="20200914 00:46:15.742" level="INFO">Running command 'yes y 2&gt;/dev/null | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa'.</msg>
<status status="PASS" starttime="20200914 00:46:15.714" endtime="20200914 00:46:15.947"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</arg>
</arguments>
<msg timestamp="20200914 00:46:15.978" level="INFO">Running command 'cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys'.</msg>
<status status="PASS" starttime="20200914 00:46:15.949" endtime="20200914 00:46:15.982"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>chmod og-wx ~/.ssh/authorized_keys</arg>
</arguments>
<msg timestamp="20200914 00:46:16.012" level="INFO">Running command 'chmod og-wx ~/.ssh/authorized_keys 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20200914 00:46:15.984" endtime="20200914 00:46:16.016"></status>
</kw>
<status status="PASS" starttime="20200914 00:46:15.714" endtime="20200914 00:46:16.017"></status>
</kw>
<kw name="Get Current Datetime On Kubernetes Node" library="Kubernetes">
<doc>Get UTC datetime in RFC3339ish format</doc>
<arguments>
<arg>${kube_node_ip}</arg>
<arg>${local_user}</arg>
<arg>${local_pass}</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<kw name="Login And Run Command On Remote System" library="utils">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified), switch to root user, executes command, return output</doc>
<arguments>
<arg>date -u +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Login To Remote System" library="utils">
<doc>SSH into a remote host (and into a container on that host if container_type
and container_name are specified) and returns connection ID</doc>
<arguments>
<arg>${ip}</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>${container_type}</arg>
<arg>${container_name}</arg>
<arg>${prompt}</arg>
<arg>${prompt_timeout}</arg>
<arg>${container_prompt}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${ip}</arg>
<arg>prompt=${prompt}</arg>
<arg>timeout=${prompt_timeout}</arg>
</arguments>
<assign>
<var>${conn_id}</var>
</assign>
<msg timestamp="20200914 00:46:16.023" level="INFO">${conn_id} = 1</msg>
<status status="PASS" starttime="20200914 00:46:16.022" endtime="20200914 00:46:16.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pass}' != '${None}'</arg>
<arg>SSHLibrary.Login</arg>
<arg>${user}</arg>
<arg>${pass}</arg>
<arg>ELSE</arg>
<arg>SSHLibrary.Login With Public Key</arg>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<kw name="Login With Public Key" library="SSHLibrary">
<doc>Logs into the SSH server using key-based authentication.</doc>
<arguments>
<arg>${user}</arg>
<arg>%{HOME}/.ssh/id_rsa</arg>
</arguments>
<msg timestamp="20200914 00:46:16.025" level="INFO">Logging into '127.0.0.1:22' as 'root'.</msg>
<msg timestamp="20200914 00:47:06.100" level="FAIL">No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</msg>
<status status="FAIL" starttime="20200914 00:46:16.025" endtime="20200914 00:47:06.100"></status>
</kw>
<status status="FAIL" starttime="20200914 00:46:16.024" endtime="20200914 00:47:06.101"></status>
</kw>
<status status="FAIL" starttime="20200914 00:46:16.021" endtime="20200914 00:47:06.101"></status>
</kw>
<status status="FAIL" starttime="20200914 00:46:16.020" endtime="20200914 00:47:06.101"></status>
</kw>
<status status="FAIL" starttime="20200914 00:46:16.018" endtime="20200914 00:47:06.101"></status>
</kw>
<status status="FAIL" starttime="20200914 00:46:15.276" endtime="20200914 00:47:06.102"></status>
</kw>
<test id="s1-t1" name="ONU in Correct Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>multicast</tag>
<tag>stable</tag>
<tag>test1</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.102" endtime="20200914 00:47:06.103" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t2" name="ONU in Correct Location -&gt; Remove ONU from Whitelist -&gt; Add ONU to Whitelist">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove ONU from whitelist
Validate failed authentication/DHCP/E2E ping
Add ONU to whitelist
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test2</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.103" endtime="20200914 00:47:06.104" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t3" name="ONU in Correct Location -&gt; ONU in Wrong Location -&gt; ONU in Correct Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Update whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping
Update whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test3</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.104" endtime="20200914 00:47:06.105" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t4" name="ONU in Correct Location -&gt; Remove Subscriber -&gt; Create Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location
Validate successful authentication/DHCP/E2E ping
Remove subscriber model
Validate failed authentication/DHCP/E2E ping
Recreate subscriber model
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test4</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.105" endtime="20200914 00:47:06.106" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t5" name="ONU in Correct Location (Skip Subscriber Provisioning) -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip provisioning subscriber
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test5</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.107" endtime="20200914 00:47:06.107" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t6" name="ONU in Correct Location (Skip Authentication)">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with correct ONU location and skip RG authentication
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test6</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.108" endtime="20200914 00:47:06.108" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t7" name="ONU not in Whitelist">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test7</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.109" endtime="20200914 00:47:06.109" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t8" name="ONU not in Whitelist (Skip Subscriber Provisioning) -&gt; Add ONU to Whitelist -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Skip whitelist configuration for ONU and subscriber provisioning
Validate successful authentication but failed DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test8</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.110" endtime="20200914 00:47:06.110" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t9" name="ONU in Wrong Location">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location
Validate failed authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test9</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.111" endtime="20200914 00:47:06.111" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<test id="s1-t10" name="ONU in Wrong Location (Skip Subscriber Provisioning) -&gt; ONU in Correct Location -&gt; Provision Subscriber">
<doc>Validates E2E Ping Connectivity and object states for the given scenario:
Configure whitelist with wrong ONU location and skip subscriber provisioning
Validate failed authentication/DHCP/E2E ping
Configure whitelist with correct ONU location
Validate successful authentication (expected with the ONF pod setup) but failed DHCP/E2E ping
Provision subscriber
Validate successful authentication/DHCP/E2E ping</doc>
<tags>
<tag>latest</tag>
<tag>stable</tag>
<tag>test10</tag>
</tags>
<status status="FAIL" starttime="20200914 00:47:06.112" endtime="20200914 00:47:06.112" critical="yes">Parent suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .</status>
</test>
<kw name="Teardown" type="teardown">
<kw name="Setup Test">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date +"%Y-%m-%dT%H:%M:%S.%NZ"</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20200914 00:47:06.147" level="INFO">Running command 'date +"%Y-%m-%dT%H:%M:%S.%NZ" 2&gt;&amp;1'.</msg>
<msg timestamp="20200914 00:47:06.151" level="INFO">${datetime} = 2020-09-14T00:47:06.149331795Z</msg>
<status status="PASS" starttime="20200914 00:47:06.116" endtime="20200914 00:47:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20200914 00:47:06.155" level="INFO">${datetime} = 2020-09-14T00:47:06.149331795Z</msg>
<status status="PASS" starttime="20200914 00:47:06.153" endtime="20200914 00:47:06.155"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Subscriber</arg>
</arguments>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:06.157" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:06.156" endtime="20200914 00:47:06.157"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:06.158" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:06.158" endtime="20200914 00:47:06.159"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:06.191" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:06.191" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:06.191" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:06.159" endtime="20200914 00:47:06.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:06.192" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:06.191" endtime="20200914 00:47:06.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:06.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:06.193" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:06.192" endtime="20200914 00:47:06.193"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:06.157" endtime="20200914 00:47:06.193"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:06.155" endtime="20200914 00:47:06.194"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:08.195" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:08.195" endtime="20200914 00:47:08.195"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:08.196" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:08.196" endtime="20200914 00:47:08.196"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:08.210" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:08.210" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:08.210" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:08.196" endtime="20200914 00:47:08.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:08.210" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:08.210" endtime="20200914 00:47:08.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:08.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:08.211" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:08.211" endtime="20200914 00:47:08.211"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:08.195" endtime="20200914 00:47:08.211"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:08.194" endtime="20200914 00:47:08.212"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:10.213" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:10.212" endtime="20200914 00:47:10.213"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:10.214" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:10.214" endtime="20200914 00:47:10.214"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:10.227" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:10.227" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:10.228" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:10.214" endtime="20200914 00:47:10.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:10.228" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:10.228" endtime="20200914 00:47:10.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:10.229" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:10.228" endtime="20200914 00:47:10.229"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:10.213" endtime="20200914 00:47:10.229"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:10.212" endtime="20200914 00:47:10.229"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:12.231" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:12.230" endtime="20200914 00:47:12.231"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:12.232" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:12.231" endtime="20200914 00:47:12.232"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:12.254" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:12.254" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:12.254" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:12.232" endtime="20200914 00:47:12.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:12.255" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:12.254" endtime="20200914 00:47:12.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:12.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:12.255" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:12.255" endtime="20200914 00:47:12.255"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:12.231" endtime="20200914 00:47:12.256"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:12.230" endtime="20200914 00:47:12.256"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:14.257" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:14.257" endtime="20200914 00:47:14.257"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:14.258" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:14.258" endtime="20200914 00:47:14.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:14.271" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:14.271" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:14.271" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:14.259" endtime="20200914 00:47:14.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:14.272" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:14.272" endtime="20200914 00:47:14.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:14.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:14.273" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:14.272" endtime="20200914 00:47:14.273"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:14.257" endtime="20200914 00:47:14.273"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:14.256" endtime="20200914 00:47:14.273"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:16.275" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:16.274" endtime="20200914 00:47:16.275"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:16.276" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:16.275" endtime="20200914 00:47:16.276"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:16.289" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:16.289" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:16.289" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:16.276" endtime="20200914 00:47:16.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:16.290" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:16.290" endtime="20200914 00:47:16.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:16.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:16.291" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:16.290" endtime="20200914 00:47:16.291"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:16.275" endtime="20200914 00:47:16.291"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:16.274" endtime="20200914 00:47:16.291"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:18.292" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:18.292" endtime="20200914 00:47:18.292"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:18.293" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:18.293" endtime="20200914 00:47:18.293"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:18.314" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:18.314" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:18.314" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:18.294" endtime="20200914 00:47:18.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:18.315" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:18.314" endtime="20200914 00:47:18.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:18.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:18.315" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:18.315" endtime="20200914 00:47:18.316"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:18.292" endtime="20200914 00:47:18.316"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:18.291" endtime="20200914 00:47:18.316"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:20.317" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:20.317" endtime="20200914 00:47:20.317"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:20.319" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:20.318" endtime="20200914 00:47:20.319"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:20.333" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:20.333" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:20.334" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:20.319" endtime="20200914 00:47:20.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:20.334" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:20.334" endtime="20200914 00:47:20.334"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:20.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:20.335" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:20.334" endtime="20200914 00:47:20.335"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:20.317" endtime="20200914 00:47:20.335"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:20.316" endtime="20200914 00:47:20.335"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:22.337" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:22.336" endtime="20200914 00:47:22.337"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:22.338" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:22.337" endtime="20200914 00:47:22.338"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:22.351" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:22.351" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:22.351" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:22.338" endtime="20200914 00:47:22.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:22.352" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:22.351" endtime="20200914 00:47:22.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:22.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:22.352" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:22.352" endtime="20200914 00:47:22.352"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:22.337" endtime="20200914 00:47:22.353"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:22.336" endtime="20200914 00:47:22.353"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:24.354" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:24.354" endtime="20200914 00:47:24.354"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:24.355" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:24.355" endtime="20200914 00:47:24.355"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:24.380" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:24.381" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:24.381" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:24.355" endtime="20200914 00:47:24.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:24.381" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:24.381" endtime="20200914 00:47:24.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:24.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:24.382" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:24.382" endtime="20200914 00:47:24.382"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:24.354" endtime="20200914 00:47:24.383"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:24.353" endtime="20200914 00:47:24.383"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:26.384" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:26.384" endtime="20200914 00:47:26.384"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:26.385" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:26.385" endtime="20200914 00:47:26.385"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:26.399" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:26.399" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:26.399" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:26.386" endtime="20200914 00:47:26.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:26.400" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:26.399" endtime="20200914 00:47:26.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:26.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:26.400" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:26.400" endtime="20200914 00:47:26.400"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:26.384" endtime="20200914 00:47:26.401"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:26.383" endtime="20200914 00:47:26.401"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:28.402" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:28.402" endtime="20200914 00:47:28.402"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:28.403" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:28.403" endtime="20200914 00:47:28.403"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:28.425" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:28.425" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:28.425" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:28.403" endtime="20200914 00:47:28.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:28.426" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:28.425" endtime="20200914 00:47:28.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:28.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:28.427" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:28.426" endtime="20200914 00:47:28.427"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:28.402" endtime="20200914 00:47:28.427"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:28.401" endtime="20200914 00:47:28.427"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:30.428" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:30.428" endtime="20200914 00:47:30.428"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:30.429" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:30.429" endtime="20200914 00:47:30.429"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:30.482" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:30.482" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:30.482" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:30.430" endtime="20200914 00:47:30.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:30.483" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:30.483" endtime="20200914 00:47:30.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:30.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:30.484" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:30.483" endtime="20200914 00:47:30.484"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:30.429" endtime="20200914 00:47:30.484"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:30.427" endtime="20200914 00:47:30.485"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:32.486" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:32.486" endtime="20200914 00:47:32.486"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:32.487" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:32.487" endtime="20200914 00:47:32.487"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:32.503" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:32.503" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:32.503" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:32.487" endtime="20200914 00:47:32.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:32.504" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:32.503" endtime="20200914 00:47:32.504"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:32.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:32.504" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:32.504" endtime="20200914 00:47:32.504"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:32.486" endtime="20200914 00:47:32.505"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:32.485" endtime="20200914 00:47:32.505"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:34.506" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:34.506" endtime="20200914 00:47:34.506"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:34.507" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:34.507" endtime="20200914 00:47:34.507"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:34.521" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:34.521" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:34.521" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:34.507" endtime="20200914 00:47:34.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:34.521" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:34.521" endtime="20200914 00:47:34.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:34.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:34.522" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:34.522" endtime="20200914 00:47:34.522"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:34.506" endtime="20200914 00:47:34.522"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:34.505" endtime="20200914 00:47:34.523"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:36.524" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:36.523" endtime="20200914 00:47:36.524"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:36.525" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:36.525" endtime="20200914 00:47:36.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:36.539" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:36.539" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:36.539" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:36.526" endtime="20200914 00:47:36.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:36.540" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:36.540" endtime="20200914 00:47:36.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:36.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:36.541" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:36.540" endtime="20200914 00:47:36.541"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:36.524" endtime="20200914 00:47:36.541"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:36.523" endtime="20200914 00:47:36.541"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:38.542" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:38.542" endtime="20200914 00:47:38.542"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:38.543" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:38.543" endtime="20200914 00:47:38.544"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:38.557" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:38.557" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:38.557" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:38.544" endtime="20200914 00:47:38.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:38.558" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:38.557" endtime="20200914 00:47:38.558"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:38.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:38.558" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:38.558" endtime="20200914 00:47:38.558"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:38.543" endtime="20200914 00:47:38.559"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:38.541" endtime="20200914 00:47:38.559"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:40.560" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:40.560" endtime="20200914 00:47:40.560"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:40.561" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:40.561" endtime="20200914 00:47:40.561"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:40.574" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:40.574" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:40.574" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:40.561" endtime="20200914 00:47:40.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:40.575" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:40.574" endtime="20200914 00:47:40.575"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:40.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:40.575" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:40.575" endtime="20200914 00:47:40.575"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:40.560" endtime="20200914 00:47:40.576"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:40.559" endtime="20200914 00:47:40.576"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:42.577" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:42.577" endtime="20200914 00:47:42.578"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:42.579" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:42.578" endtime="20200914 00:47:42.579"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:42.592" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:42.592" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:42.592" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:42.579" endtime="20200914 00:47:42.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:42.593" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:42.592" endtime="20200914 00:47:42.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:42.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:42.593" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:42.593" endtime="20200914 00:47:42.593"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:42.578" endtime="20200914 00:47:42.594"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:42.576" endtime="20200914 00:47:42.594"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:44.595" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:44.595" endtime="20200914 00:47:44.595"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:44.596" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:44.596" endtime="20200914 00:47:44.596"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:44.609" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:44.609" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:44.610" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:44.596" endtime="20200914 00:47:44.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:44.610" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:44.610" endtime="20200914 00:47:44.610"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:44.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:44.611" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:44.610" endtime="20200914 00:47:44.611"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:44.595" endtime="20200914 00:47:44.611"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:44.594" endtime="20200914 00:47:44.611"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:46.613" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:46.612" endtime="20200914 00:47:46.613"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:46.614" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:46.614" endtime="20200914 00:47:46.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:46.628" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:46.628" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:46.628" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:46.614" endtime="20200914 00:47:46.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:46.628" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:46.628" endtime="20200914 00:47:46.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:46.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:46.629" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:46.629" endtime="20200914 00:47:46.629"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:46.613" endtime="20200914 00:47:46.629"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:46.612" endtime="20200914 00:47:46.630"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:48.631" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:48.631" endtime="20200914 00:47:48.631"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:48.632" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:48.632" endtime="20200914 00:47:48.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:48.645" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:48.645" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:48.645" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:48.632" endtime="20200914 00:47:48.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:48.646" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:48.646" endtime="20200914 00:47:48.646"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:48.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:48.647" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:48.646" endtime="20200914 00:47:48.647"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:48.631" endtime="20200914 00:47:48.647"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:48.630" endtime="20200914 00:47:48.647"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:50.648" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:50.648" endtime="20200914 00:47:50.648"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:50.650" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:50.649" endtime="20200914 00:47:50.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:50.662" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:50.663" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:50.663" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:50.650" endtime="20200914 00:47:50.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:50.663" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:50.663" endtime="20200914 00:47:50.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:50.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:50.664" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:50.664" endtime="20200914 00:47:50.664"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:50.649" endtime="20200914 00:47:50.664"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:50.648" endtime="20200914 00:47:50.664"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:52.666" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:52.665" endtime="20200914 00:47:52.666"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:52.667" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:52.667" endtime="20200914 00:47:52.667"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:52.680" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:52.680" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:52.680" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:52.667" endtime="20200914 00:47:52.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:52.681" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:52.681" endtime="20200914 00:47:52.681"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:52.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:52.682" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:52.681" endtime="20200914 00:47:52.682"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:52.666" endtime="20200914 00:47:52.682"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:52.665" endtime="20200914 00:47:52.682"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:54.683" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:54.683" endtime="20200914 00:47:54.683"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:54.684" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:54.684" endtime="20200914 00:47:54.685"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:54.698" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:54.698" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:54.698" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:54.685" endtime="20200914 00:47:54.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:54.699" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:54.698" endtime="20200914 00:47:54.699"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:54.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:54.699" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:54.699" endtime="20200914 00:47:54.699"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:54.684" endtime="20200914 00:47:54.700"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:54.682" endtime="20200914 00:47:54.700"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:56.701" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:56.701" endtime="20200914 00:47:56.701"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:56.702" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:56.702" endtime="20200914 00:47:56.702"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:56.715" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:56.715" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:56.715" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:56.702" endtime="20200914 00:47:56.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:56.716" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:56.715" endtime="20200914 00:47:56.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:56.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:56.717" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:56.716" endtime="20200914 00:47:56.717"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:56.701" endtime="20200914 00:47:56.717"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:56.700" endtime="20200914 00:47:56.717"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:47:58.718" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:47:58.718" endtime="20200914 00:47:58.718"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:47:58.720" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:47:58.719" endtime="20200914 00:47:58.720"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:47:58.734" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:47:58.734" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:47:58.734" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:47:58.720" endtime="20200914 00:47:58.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:47:58.735" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:47:58.735" endtime="20200914 00:47:58.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:47:58.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:47:58.736" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:58.735" endtime="20200914 00:47:58.736"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:58.719" endtime="20200914 00:47:58.736"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:58.718" endtime="20200914 00:47:58.736"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:48:00.737" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:48:00.737" endtime="20200914 00:48:00.737"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:00.739" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:48:00.738" endtime="20200914 00:48:00.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:00.753" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:48:00.753" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:48:00.753" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:00.739" endtime="20200914 00:48:00.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:00.753" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:48:00.753" endtime="20200914 00:48:00.754"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:00.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:00.754" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:00.754" endtime="20200914 00:48:00.754"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:00.738" endtime="20200914 00:48:00.754"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:00.737" endtime="20200914 00:48:00.755"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:48:02.756" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:48:02.756" endtime="20200914 00:48:02.756"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:02.757" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:48:02.757" endtime="20200914 00:48:02.757"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:02.784" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:48:02.784" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:48:02.784" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:02.758" endtime="20200914 00:48:02.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:02.785" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:48:02.785" endtime="20200914 00:48:02.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:02.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:02.786" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:02.785" endtime="20200914 00:48:02.786"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:02.756" endtime="20200914 00:48:02.786"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:02.755" endtime="20200914 00:48:02.786"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:48:04.788" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:48:04.787" endtime="20200914 00:48:04.788"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:04.789" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:48:04.788" endtime="20200914 00:48:04.789"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:04.802" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:48:04.802" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:48:04.802" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:04.789" endtime="20200914 00:48:04.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:04.803" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:48:04.803" endtime="20200914 00:48:04.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:04.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:04.804" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:04.803" endtime="20200914 00:48:04.804"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:04.788" endtime="20200914 00:48:04.804"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:04.787" endtime="20200914 00:48:04.804"></status>
</kw>
<kw name="Create Subscriber">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${SubscriberList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${SubscriberDict}</var>
</assign>
<msg timestamp="20200914 00:48:06.805" level="INFO">${SubscriberDict} = {'name': 'QQClient0', 's_tag': 222, 'c_tag': 111, 'onu_device': 'PSMO00000000', 'status': 'pre-provisioned', 'upstream_bps_id': 2, 'downstream_bps_id': 2, 'tech_profile_id': 64}</msg>
<status status="PASS" starttime="20200914 00:48:06.805" endtime="20200914 00:48:06.805"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${VOLT_SUBSCRIBER}</arg>
<arg>${SubscriberDict}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:06.806" level="INFO">${data} = {"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}</msg>
<status status="PASS" starttime="20200914 00:48:06.806" endtime="20200914 00:48:06.807"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:06.820" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 path_url=/xosapi/v1/rcord/rcordsubscribers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '177', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"name": "QQClient0", "s_tag": 222, "c_tag": 111, "onu_device": "PSMO00000000", "status": "pre-provisioned", "upstream_bps_id": 2, "downstream_bps_id": 2, "tech_profile_id": 64}' 
 </msg>
<msg timestamp="20200914 00:48:06.820" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers 
 status=400, reason=Bad Request 
 body={"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"} 
 </msg>
<msg timestamp="20200914 00:48:06.820" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:06.807" endtime="20200914 00:48:06.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:06.821" level="INFO">{"fields": {}, "specific_error": "The c_tag you specified (111) has already been used on device PSMO00000000", "error": "XOSValidationError"}</msg>
<status status="PASS" starttime="20200914 00:48:06.820" endtime="20200914 00:48:06.821"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:06.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:06.821" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:06.821" endtime="20200914 00:48:06.821"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:06.806" endtime="20200914 00:48:06.822"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:06.805" endtime="20200914 00:48:06.822"></status>
</kw>
<msg timestamp="20200914 00:48:06.822" level="FAIL">Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200</msg>
<status status="FAIL" starttime="20200914 00:47:06.155" endtime="20200914 00:48:06.822"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Create Whitelist</arg>
</arguments>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:06.824" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:06.824" endtime="20200914 00:48:06.824"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:06.825" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:06.825" endtime="20200914 00:48:06.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:06.841" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:06.841" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:06.841" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:06.825" endtime="20200914 00:48:06.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:06.841" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:06.841" endtime="20200914 00:48:06.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:06.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:06.842" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:06.842" endtime="20200914 00:48:06.842"></status>
</kw>
<msg timestamp="20200914 00:48:06.842" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:06.824" endtime="20200914 00:48:06.842"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:06.843" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:06.843" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:06.843" endtime="20200914 00:48:06.843"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:06.844" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:06.843" endtime="20200914 00:48:06.844"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:06.824" endtime="20200914 00:48:06.844"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:08.845" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:08.845" endtime="20200914 00:48:08.845"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:08.846" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:08.846" endtime="20200914 00:48:08.846"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:08.874" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:08.875" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:08.875" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:08.846" endtime="20200914 00:48:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:08.875" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:08.875" endtime="20200914 00:48:08.876"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:08.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:08.876" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:08.876" endtime="20200914 00:48:08.876"></status>
</kw>
<msg timestamp="20200914 00:48:08.877" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:08.845" endtime="20200914 00:48:08.877"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:08.877" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:08.877" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:08.877" endtime="20200914 00:48:08.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:08.878" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:08.878" endtime="20200914 00:48:08.878"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:08.844" endtime="20200914 00:48:08.878"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:10.880" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:10.879" endtime="20200914 00:48:10.880"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:10.881" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:10.880" endtime="20200914 00:48:10.881"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:10.903" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:10.903" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:10.904" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:10.881" endtime="20200914 00:48:10.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:10.904" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:10.904" endtime="20200914 00:48:10.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:10.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:10.905" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:10.904" endtime="20200914 00:48:10.905"></status>
</kw>
<msg timestamp="20200914 00:48:10.905" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:10.880" endtime="20200914 00:48:10.905"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:10.906" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:10.906" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:10.905" endtime="20200914 00:48:10.906"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:10.907" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:10.906" endtime="20200914 00:48:10.907"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:10.879" endtime="20200914 00:48:10.907"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:12.908" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:12.908" endtime="20200914 00:48:12.908"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:12.909" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:12.909" endtime="20200914 00:48:12.909"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:12.942" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:12.942" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:12.943" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:12.909" endtime="20200914 00:48:12.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:12.943" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:12.943" endtime="20200914 00:48:12.943"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:12.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:12.944" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:12.944" endtime="20200914 00:48:12.944"></status>
</kw>
<msg timestamp="20200914 00:48:12.944" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:12.908" endtime="20200914 00:48:12.944"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:12.945" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:12.945" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:12.945" endtime="20200914 00:48:12.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:12.946" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:12.945" endtime="20200914 00:48:12.946"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:12.907" endtime="20200914 00:48:12.946"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:14.947" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:14.947" endtime="20200914 00:48:14.947"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:14.948" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:14.948" endtime="20200914 00:48:14.948"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:14.982" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:14.983" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:14.983" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:14.948" endtime="20200914 00:48:14.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:14.983" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:14.983" endtime="20200914 00:48:14.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:14.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:14.984" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:14.984" endtime="20200914 00:48:14.984"></status>
</kw>
<msg timestamp="20200914 00:48:14.985" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:14.947" endtime="20200914 00:48:14.985"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:14.985" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:14.985" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:14.985" endtime="20200914 00:48:14.985"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:14.986" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:14.985" endtime="20200914 00:48:14.986"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:14.946" endtime="20200914 00:48:14.986"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:16.987" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:16.987" endtime="20200914 00:48:16.987"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:16.988" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:16.988" endtime="20200914 00:48:16.988"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:17.004" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:17.004" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:17.004" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:16.989" endtime="20200914 00:48:17.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:17.005" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:17.005" endtime="20200914 00:48:17.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:17.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:17.006" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:17.005" endtime="20200914 00:48:17.006"></status>
</kw>
<msg timestamp="20200914 00:48:17.006" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:16.987" endtime="20200914 00:48:17.006"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:17.007" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:17.007" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:17.006" endtime="20200914 00:48:17.007"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:17.007" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:17.007" endtime="20200914 00:48:17.007"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:16.986" endtime="20200914 00:48:17.007"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:19.009" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:19.008" endtime="20200914 00:48:19.009"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:19.010" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:19.009" endtime="20200914 00:48:19.010"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:19.026" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:19.026" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:19.026" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:19.010" endtime="20200914 00:48:19.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:19.026" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:19.026" endtime="20200914 00:48:19.027"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:19.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:19.027" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:19.027" endtime="20200914 00:48:19.028"></status>
</kw>
<msg timestamp="20200914 00:48:19.028" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:19.009" endtime="20200914 00:48:19.028"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:19.028" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:19.028" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:19.028" endtime="20200914 00:48:19.029"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:19.029" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:19.029" endtime="20200914 00:48:19.029"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:19.008" endtime="20200914 00:48:19.029"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:21.031" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:21.030" endtime="20200914 00:48:21.031"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:21.032" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:21.031" endtime="20200914 00:48:21.032"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:21.056" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:21.056" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:21.056" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:21.032" endtime="20200914 00:48:21.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:21.057" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:21.057" endtime="20200914 00:48:21.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:21.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:21.058" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:21.057" endtime="20200914 00:48:21.058"></status>
</kw>
<msg timestamp="20200914 00:48:21.058" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:21.031" endtime="20200914 00:48:21.058"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:21.059" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:21.059" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:21.058" endtime="20200914 00:48:21.059"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:21.059" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:21.059" endtime="20200914 00:48:21.059"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:21.030" endtime="20200914 00:48:21.060"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:23.061" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:23.060" endtime="20200914 00:48:23.061"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:23.062" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:23.061" endtime="20200914 00:48:23.062"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:23.079" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:23.079" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:23.079" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:23.062" endtime="20200914 00:48:23.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:23.080" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:23.080" endtime="20200914 00:48:23.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:23.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:23.081" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:23.080" endtime="20200914 00:48:23.081"></status>
</kw>
<msg timestamp="20200914 00:48:23.081" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:23.061" endtime="20200914 00:48:23.081"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:23.082" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:23.082" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:23.081" endtime="20200914 00:48:23.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:23.083" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:23.082" endtime="20200914 00:48:23.083"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:23.060" endtime="20200914 00:48:23.083"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:25.084" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:25.084" endtime="20200914 00:48:25.084"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:25.085" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:25.085" endtime="20200914 00:48:25.085"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:25.125" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:25.125" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:25.125" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:25.085" endtime="20200914 00:48:25.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:25.126" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:25.125" endtime="20200914 00:48:25.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:25.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:25.127" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:25.126" endtime="20200914 00:48:25.127"></status>
</kw>
<msg timestamp="20200914 00:48:25.127" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:25.084" endtime="20200914 00:48:25.127"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:25.128" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:25.128" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:25.127" endtime="20200914 00:48:25.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:25.128" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:25.128" endtime="20200914 00:48:25.128"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:25.083" endtime="20200914 00:48:25.129"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:27.130" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:27.129" endtime="20200914 00:48:27.130"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:27.131" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:27.130" endtime="20200914 00:48:27.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:27.154" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:27.154" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:27.155" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:27.131" endtime="20200914 00:48:27.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:27.155" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:27.155" endtime="20200914 00:48:27.155"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:27.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:27.156" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:27.155" endtime="20200914 00:48:27.156"></status>
</kw>
<msg timestamp="20200914 00:48:27.156" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:27.130" endtime="20200914 00:48:27.156"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:27.157" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:27.157" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:27.156" endtime="20200914 00:48:27.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:27.157" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:27.157" endtime="20200914 00:48:27.158"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:27.129" endtime="20200914 00:48:27.158"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:29.159" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:29.159" endtime="20200914 00:48:29.159"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:29.160" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:29.160" endtime="20200914 00:48:29.160"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:29.198" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:29.198" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:29.198" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:29.161" endtime="20200914 00:48:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:29.199" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:29.199" endtime="20200914 00:48:29.199"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:29.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:29.200" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:29.199" endtime="20200914 00:48:29.200"></status>
</kw>
<msg timestamp="20200914 00:48:29.200" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:29.159" endtime="20200914 00:48:29.200"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:29.201" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:29.201" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:29.200" endtime="20200914 00:48:29.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:29.201" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:29.201" endtime="20200914 00:48:29.201"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:29.158" endtime="20200914 00:48:29.202"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:31.203" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:31.203" endtime="20200914 00:48:31.203"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:31.204" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:31.204" endtime="20200914 00:48:31.204"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:31.219" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:31.219" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:31.220" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:31.204" endtime="20200914 00:48:31.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:31.220" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:31.220" endtime="20200914 00:48:31.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:31.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:31.221" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:31.220" endtime="20200914 00:48:31.221"></status>
</kw>
<msg timestamp="20200914 00:48:31.221" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:31.203" endtime="20200914 00:48:31.221"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:31.222" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:31.222" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:31.221" endtime="20200914 00:48:31.222"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:31.222" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:31.222" endtime="20200914 00:48:31.223"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:31.202" endtime="20200914 00:48:31.223"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:33.224" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:33.224" endtime="20200914 00:48:33.224"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:33.225" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:33.225" endtime="20200914 00:48:33.225"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:33.253" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:33.254" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:33.254" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:33.225" endtime="20200914 00:48:33.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:33.254" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:33.254" endtime="20200914 00:48:33.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:33.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:33.255" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:33.255" endtime="20200914 00:48:33.255"></status>
</kw>
<msg timestamp="20200914 00:48:33.256" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:33.224" endtime="20200914 00:48:33.256"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:33.256" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:33.256" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:33.256" endtime="20200914 00:48:33.256"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:33.257" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:33.257" endtime="20200914 00:48:33.257"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:33.223" endtime="20200914 00:48:33.257"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:35.258" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:35.258" endtime="20200914 00:48:35.259"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:35.260" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:35.259" endtime="20200914 00:48:35.260"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:35.275" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:35.275" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:35.276" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:35.260" endtime="20200914 00:48:35.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:35.276" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:35.276" endtime="20200914 00:48:35.276"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:35.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:35.277" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:35.276" endtime="20200914 00:48:35.277"></status>
</kw>
<msg timestamp="20200914 00:48:35.277" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:35.259" endtime="20200914 00:48:35.277"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:35.278" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:35.278" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:35.277" endtime="20200914 00:48:35.278"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:35.278" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:35.278" endtime="20200914 00:48:35.279"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:35.258" endtime="20200914 00:48:35.279"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:37.280" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:37.280" endtime="20200914 00:48:37.280"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:37.281" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:37.281" endtime="20200914 00:48:37.281"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:37.296" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:37.296" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:37.296" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:37.281" endtime="20200914 00:48:37.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:37.297" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:37.296" endtime="20200914 00:48:37.297"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:37.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:37.297" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:37.297" endtime="20200914 00:48:37.298"></status>
</kw>
<msg timestamp="20200914 00:48:37.298" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:37.280" endtime="20200914 00:48:37.298"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:37.298" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:37.298" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:37.298" endtime="20200914 00:48:37.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:37.299" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:37.299" endtime="20200914 00:48:37.299"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:37.279" endtime="20200914 00:48:37.299"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:39.301" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:39.300" endtime="20200914 00:48:39.301"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:39.302" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:39.301" endtime="20200914 00:48:39.302"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:39.323" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:39.323" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:39.324" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:39.302" endtime="20200914 00:48:39.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:39.324" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:39.324" endtime="20200914 00:48:39.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:39.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:39.325" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:39.324" endtime="20200914 00:48:39.325"></status>
</kw>
<msg timestamp="20200914 00:48:39.325" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:39.301" endtime="20200914 00:48:39.325"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:39.326" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:39.326" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:39.325" endtime="20200914 00:48:39.326"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:39.326" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:39.326" endtime="20200914 00:48:39.327"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:39.300" endtime="20200914 00:48:39.327"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:41.328" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:41.328" endtime="20200914 00:48:41.328"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:41.329" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:41.329" endtime="20200914 00:48:41.329"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:41.344" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:41.344" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:41.344" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:41.329" endtime="20200914 00:48:41.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:41.344" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:41.344" endtime="20200914 00:48:41.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:41.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:41.345" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:41.345" endtime="20200914 00:48:41.345"></status>
</kw>
<msg timestamp="20200914 00:48:41.345" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:41.328" endtime="20200914 00:48:41.345"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:41.346" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:41.346" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:41.346" endtime="20200914 00:48:41.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:41.347" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:41.346" endtime="20200914 00:48:41.347"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:41.327" endtime="20200914 00:48:41.347"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:43.348" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:43.348" endtime="20200914 00:48:43.348"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:43.349" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:43.349" endtime="20200914 00:48:43.349"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:43.369" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:43.369" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:43.369" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:43.349" endtime="20200914 00:48:43.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:43.369" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:43.369" endtime="20200914 00:48:43.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:43.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:43.370" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:43.370" endtime="20200914 00:48:43.370"></status>
</kw>
<msg timestamp="20200914 00:48:43.370" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:43.348" endtime="20200914 00:48:43.371"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:43.371" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:43.371" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:43.371" endtime="20200914 00:48:43.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:43.372" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:43.371" endtime="20200914 00:48:43.372"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:43.347" endtime="20200914 00:48:43.372"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:45.373" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:45.373" endtime="20200914 00:48:45.373"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:45.374" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:45.374" endtime="20200914 00:48:45.375"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:45.400" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:45.400" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:45.400" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:45.375" endtime="20200914 00:48:45.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:45.400" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:45.400" endtime="20200914 00:48:45.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:45.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:45.401" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:45.401" endtime="20200914 00:48:45.401"></status>
</kw>
<msg timestamp="20200914 00:48:45.401" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:45.374" endtime="20200914 00:48:45.401"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:45.402" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:45.402" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:45.402" endtime="20200914 00:48:45.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:45.403" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:45.402" endtime="20200914 00:48:45.403"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:45.373" endtime="20200914 00:48:45.403"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:47.404" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:47.404" endtime="20200914 00:48:47.404"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:47.405" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:47.405" endtime="20200914 00:48:47.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:47.428" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:47.428" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:47.428" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:47.406" endtime="20200914 00:48:47.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:47.429" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:47.428" endtime="20200914 00:48:47.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:47.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:47.430" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:47.429" endtime="20200914 00:48:47.430"></status>
</kw>
<msg timestamp="20200914 00:48:47.430" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:47.404" endtime="20200914 00:48:47.430"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:47.431" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:47.431" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:47.430" endtime="20200914 00:48:47.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:47.431" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:47.431" endtime="20200914 00:48:47.431"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:47.403" endtime="20200914 00:48:47.432"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:49.433" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:49.432" endtime="20200914 00:48:49.433"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:49.434" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:49.433" endtime="20200914 00:48:49.434"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:49.449" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:49.449" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:49.449" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:49.434" endtime="20200914 00:48:49.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:49.450" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:49.450" endtime="20200914 00:48:49.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:49.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:49.451" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:49.450" endtime="20200914 00:48:49.451"></status>
</kw>
<msg timestamp="20200914 00:48:49.451" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:49.433" endtime="20200914 00:48:49.451"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:49.452" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:49.452" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:49.451" endtime="20200914 00:48:49.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:49.452" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:49.452" endtime="20200914 00:48:49.452"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:49.432" endtime="20200914 00:48:49.453"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:51.454" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:51.453" endtime="20200914 00:48:51.454"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:51.455" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:51.454" endtime="20200914 00:48:51.455"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:51.470" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:51.470" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:51.470" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:51.455" endtime="20200914 00:48:51.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:51.471" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:51.470" endtime="20200914 00:48:51.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:51.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:51.471" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:51.471" endtime="20200914 00:48:51.471"></status>
</kw>
<msg timestamp="20200914 00:48:51.472" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:51.454" endtime="20200914 00:48:51.472"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:51.472" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:51.472" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:51.472" endtime="20200914 00:48:51.472"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:51.473" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:51.473" endtime="20200914 00:48:51.473"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:51.453" endtime="20200914 00:48:51.473"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:53.474" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:53.474" endtime="20200914 00:48:53.474"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:53.476" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:53.475" endtime="20200914 00:48:53.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:53.499" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:53.499" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:53.499" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:53.476" endtime="20200914 00:48:53.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:53.500" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:53.500" endtime="20200914 00:48:53.500"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:53.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:53.501" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:53.500" endtime="20200914 00:48:53.501"></status>
</kw>
<msg timestamp="20200914 00:48:53.501" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:53.475" endtime="20200914 00:48:53.501"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:53.501" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:53.502" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:53.501" endtime="20200914 00:48:53.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:53.502" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:53.502" endtime="20200914 00:48:53.502"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:53.474" endtime="20200914 00:48:53.502"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:55.504" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:55.503" endtime="20200914 00:48:55.504"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:55.505" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:55.504" endtime="20200914 00:48:55.505"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:55.520" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:55.520" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:55.520" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:55.505" endtime="20200914 00:48:55.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:55.521" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:55.520" endtime="20200914 00:48:55.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:55.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:55.521" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:55.521" endtime="20200914 00:48:55.522"></status>
</kw>
<msg timestamp="20200914 00:48:55.522" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:55.504" endtime="20200914 00:48:55.522"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:55.522" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:55.523" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:55.522" endtime="20200914 00:48:55.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:55.523" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:55.523" endtime="20200914 00:48:55.523"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:55.503" endtime="20200914 00:48:55.523"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:57.525" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:57.524" endtime="20200914 00:48:57.525"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:57.526" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:57.525" endtime="20200914 00:48:57.526"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:57.542" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:57.542" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:57.542" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:57.526" endtime="20200914 00:48:57.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:57.543" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:57.543" endtime="20200914 00:48:57.543"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:57.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:57.544" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:57.543" endtime="20200914 00:48:57.544"></status>
</kw>
<msg timestamp="20200914 00:48:57.544" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:57.525" endtime="20200914 00:48:57.544"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:57.545" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:57.545" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:57.544" endtime="20200914 00:48:57.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:57.546" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:57.545" endtime="20200914 00:48:57.546"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:57.524" endtime="20200914 00:48:57.546"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:48:59.547" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:48:59.547" endtime="20200914 00:48:59.547"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:48:59.548" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:48:59.548" endtime="20200914 00:48:59.548"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:48:59.572" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:48:59.573" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:48:59.573" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:48:59.548" endtime="20200914 00:48:59.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:48:59.573" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:48:59.573" endtime="20200914 00:48:59.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:48:59.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:48:59.574" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:48:59.574" endtime="20200914 00:48:59.574"></status>
</kw>
<msg timestamp="20200914 00:48:59.574" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:48:59.547" endtime="20200914 00:48:59.574"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:48:59.575" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:48:59.575" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:59.575" endtime="20200914 00:48:59.575"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:48:59.576" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:48:59.575" endtime="20200914 00:48:59.576"></status>
</kw>
<status status="FAIL" starttime="20200914 00:48:59.546" endtime="20200914 00:48:59.576"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:49:01.577" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:49:01.577" endtime="20200914 00:49:01.577"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:49:01.578" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:49:01.578" endtime="20200914 00:49:01.578"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:49:01.595" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:49:01.595" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:49:01.595" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:49:01.579" endtime="20200914 00:49:01.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:49:01.596" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:49:01.596" endtime="20200914 00:49:01.596"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:49:01.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:49:01.597" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:49:01.596" endtime="20200914 00:49:01.597"></status>
</kw>
<msg timestamp="20200914 00:49:01.598" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:49:01.577" endtime="20200914 00:49:01.598"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:49:01.598" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:49:01.598" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:49:01.598" endtime="20200914 00:49:01.598"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:49:01.599" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:49:01.598" endtime="20200914 00:49:01.599"></status>
</kw>
<status status="FAIL" starttime="20200914 00:49:01.576" endtime="20200914 00:49:01.599"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:49:03.600" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:49:03.600" endtime="20200914 00:49:03.600"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:49:03.601" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:49:03.601" endtime="20200914 00:49:03.602"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:49:03.618" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:49:03.618" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:49:03.618" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:49:03.602" endtime="20200914 00:49:03.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:49:03.619" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:49:03.619" endtime="20200914 00:49:03.619"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:49:03.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:49:03.620" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:49:03.619" endtime="20200914 00:49:03.620"></status>
</kw>
<msg timestamp="20200914 00:49:03.620" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:49:03.601" endtime="20200914 00:49:03.620"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:49:03.621" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:49:03.621" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:49:03.620" endtime="20200914 00:49:03.621"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:49:03.621" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:49:03.621" endtime="20200914 00:49:03.621"></status>
</kw>
<status status="FAIL" starttime="20200914 00:49:03.600" endtime="20200914 00:49:03.621"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:49:05.623" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:49:05.622" endtime="20200914 00:49:05.623"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:49:05.624" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:49:05.623" endtime="20200914 00:49:05.624"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:49:05.650" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:49:05.650" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:49:05.650" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:49:05.624" endtime="20200914 00:49:05.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:49:05.651" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:49:05.650" endtime="20200914 00:49:05.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:49:05.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:49:05.651" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:49:05.651" endtime="20200914 00:49:05.651"></status>
</kw>
<msg timestamp="20200914 00:49:05.652" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:49:05.623" endtime="20200914 00:49:05.652"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:49:05.652" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:49:05.652" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:49:05.652" endtime="20200914 00:49:05.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:49:05.653" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:49:05.653" endtime="20200914 00:49:05.653"></status>
</kw>
<status status="FAIL" starttime="20200914 00:49:05.622" endtime="20200914 00:49:05.653"></status>
</kw>
<kw name="Create Whitelist">
<kw name="List To Dict" library="CORDRobot">
<arguments>
<arg>${AttWhiteListList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${AttWhiteListDict}</var>
</assign>
<msg timestamp="20200914 00:49:07.655" level="INFO">${AttWhiteListDict} = {'serial_number': 'PSMO00000000', 'device_id': 'of:0000d0d3e158fede', 'pon_port_id': 1, 'owner_id': 2}</msg>
<status status="PASS" starttime="20200914 00:49:07.654" endtime="20200914 00:49:07.655"></status>
</kw>
<kw name="CORD Post" library="XOS">
<doc>Make a POST call to XOS</doc>
<arguments>
<arg>${ATT_WHITELIST}</arg>
<arg>${AttWhiteListDict}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${data})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200914 00:49:07.656" level="INFO">${data} = {"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}</msg>
<status status="PASS" starttime="20200914 00:49:07.655" endtime="20200914 00:49:07.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${SERVER_IP}</arg>
<arg>uri=${service}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200914 00:49:07.671" level="INFO">POST Request : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 path_url=/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '102', 'Authorization': 'Basic YWRtaW5Ab3BlbmNvcmQub3JnOmxldG1laW4='} 
 body=b'{"serial_number": "PSMO00000000", "device_id": "of:0000d0d3e158fede", "pon_port_id": 1, "owner_id": 2}' 
 </msg>
<msg timestamp="20200914 00:49:07.671" level="INFO">POST Response : url=http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverwhitelistentries 
 status=500, reason=Internal Server Error 
 body={"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"} 
 </msg>
<msg timestamp="20200914 00:49:07.672" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20200914 00:49:07.656" endtime="20200914 00:49:07.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200914 00:49:07.672" level="INFO">{"specific_error": "Exception calling application: {'__all__': [u'ONU Whitelist with this Owner and Serial number already exists.']}", "error": "Internal Server Error"}</msg>
<status status="PASS" starttime="20200914 00:49:07.672" endtime="20200914 00:49:07.672"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200914 00:49:07.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200914 00:49:07.673" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20200914 00:49:07.672" endtime="20200914 00:49:07.673"></status>
</kw>
<msg timestamp="20200914 00:49:07.673" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="FAIL" starttime="20200914 00:49:07.655" endtime="20200914 00:49:07.673"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200914 00:49:07.674" level="INFO">${id} = None</msg>
<msg timestamp="20200914 00:49:07.674" level="FAIL">Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:49:07.673" endtime="20200914 00:49:07.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${whitelist_id}</arg>
</arguments>
<msg timestamp="20200914 00:49:07.674" level="INFO">${whitelist_id} = 1</msg>
<status status="PASS" starttime="20200914 00:49:07.674" endtime="20200914 00:49:07.674"></status>
</kw>
<status status="FAIL" starttime="20200914 00:49:07.654" endtime="20200914 00:49:07.675"></status>
</kw>
<msg timestamp="20200914 00:49:07.675" level="FAIL">Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</msg>
<status status="FAIL" starttime="20200914 00:48:06.822" endtime="20200914 00:49:07.675"></status>
</kw>
<kw name="Subscriber Ready to Authenticate">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>15s</arg>
<arg>Validate ONU States</arg>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate ONU States" library="ONU">
<doc>Check that ONU has the expected 'operational_status' and 'admin_status'</doc>
<arguments>
<arg>ACTIVE</arg>
<arg>ENABLED</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="ONU Status Check" library="ONU">
<doc>Returns "operational_status" and "admin_status" of
a particular ONU device from "onu device list"</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${operational_status}</var>
<var>${admin_status}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ONU_DEVICE</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:49:07.697" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/volt/onudevices
Test passed: 200: {"items": [{"volt_service_instances_ids": [], "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1600034251.89177, \"exponent\": 0}", "connect_status": "REACHABLE", "device_type": "ponsim_onu", "backend_status": "OK", "id": 1, "backend_need_delete": true, "self_content_type_id": "volt.onudevice_decl", "backend_code": 1, "pon_port_id": 1, "serial_number": "PSMO00000000", "enacted": 1600034250.387418, "no_sync": false, "updated": 1600034250.387418, "vendor": "ponsim", "deleted": false, "ani_ports_ids": [4], "policy_status": "Policy in process", "lazy_blocked": false, "oper_status": "ACTIVE", "admin_state": "ENABLED", "backend_need_reap": false, "policy_code": 0, "leaf_model_name": "ONUDevice", "created": 1600034250.392713, "write_protect": false, "no_policy": false, "reason": "", "uni_ports_ids": [3], "device_id": "0001e0513876fe58", "xos_managed": false, "class_names": "ONUDevice,ONUDevice_decl,XOSBase"}]}</msg>
<msg timestamp="20200914 00:49:07.697" level="INFO">${json_result} = {'items': [{'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE'...</msg>
<status status="PASS" starttime="20200914 00:49:07.677" endtime="20200914 00:49:07.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:49:07.698" level="INFO">{'items': [{'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE', 'device_type': 'ponsim_onu', 'backend_status': 'OK', 'id': 1, 'backend_need_delete': True, 'self_content_type_id': 'volt.onudevice_decl', 'backend_code': 1, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'enacted': 1600034250.387418, 'no_sync': False, 'updated': 1600034250.387418, 'vendor': 'ponsim', 'deleted': False, 'ani_ports_ids': [4], 'policy_status': 'Policy in process', 'lazy_blocked': False, 'oper_status': 'ACTIVE', 'admin_state': 'ENABLED', 'backend_need_reap': False, 'policy_code': 0, 'leaf_model_name': 'ONUDevice', 'created': 1600034250.392713, 'write_protect': False, 'no_policy': False, 'reason': '', 'uni_ports_ids': [3], 'device_id': '0001e0513876fe58', 'xos_managed': False, 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:49:07.697" endtime="20200914 00:49:07.698"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:49:07.698" level="INFO">${json_result_list} = [{'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE', 'device_...</msg>
<status status="PASS" starttime="20200914 00:49:07.698" endtime="20200914 00:49:07.698"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:49:07.699" level="INFO">data {'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE', 'device_type': 'ponsim_onu', 'backend_status': 'OK', 'id': 1, 'backend_need_delete': True, 'self_content_type_id': 'volt.onudevice_decl', 'backend_code': 1, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'enacted': 1600034250.387418, 'no_sync': False, 'updated': 1600034250.387418, 'vendor': 'ponsim', 'deleted': False, 'ani_ports_ids': [4], 'policy_status': 'Policy in process', 'lazy_blocked': False, 'oper_status': 'ACTIVE', 'admin_state': 'ENABLED', 'backend_need_reap': False, 'policy_code': 0, 'leaf_model_name': 'ONUDevice', 'created': 1600034250.392713, 'write_protect': False, 'no_policy': False, 'reason': '', 'uni_ports_ids': [3], 'device_id': '0001e0513876fe58', 'xos_managed': False, 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase'}
return_dict {'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE', 'device_type': 'ponsim_onu', 'backend_status': 'OK', 'id': 1, 'backend_need_delete': True, 'self_content_type_id': 'volt.onudevice_decl', 'backend_code': 1, 'pon_port_id': 1, 'serial_number': 'PSMO00000000', 'enacted': 1600034250.387418, 'no_sync': False, 'updated': 1600034250.387418, 'vendor': 'ponsim', 'deleted': False, 'ani_ports_ids': [4], 'policy_status': 'Policy in process', 'lazy_blocked': False, 'oper_status': 'ACTIVE', 'admin_state': 'ENABLED', 'backend_need_reap': False, 'policy_code': 0, 'leaf_model_name': 'ONUDevice', 'created': 1600034250.392713, 'write_protect': False, 'no_policy': False, 'reason': '', 'uni_ports_ids': [3], 'device_id': '0001e0513876fe58', 'xos_managed': False, 'class_names': 'ONUDevice,ONUDevice_decl,XOSBase'}</msg>
<msg timestamp="20200914 00:49:07.699" level="INFO">${getJsonDict} = {'volt_service_instances_ids': [], 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034251.89177, "exponent": 0}', 'connect_status': 'REACHABLE', 'device_t...</msg>
<status status="PASS" starttime="20200914 00:49:07.698" endtime="20200914 00:49:07.699"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>oper_status</arg>
</arguments>
<assign>
<var>${operational_status}</var>
</assign>
<msg timestamp="20200914 00:49:07.699" level="INFO">${operational_status} = ACTIVE</msg>
<status status="PASS" starttime="20200914 00:49:07.699" endtime="20200914 00:49:07.699"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>admin_state</arg>
</arguments>
<assign>
<var>${admin_status}</var>
</assign>
<msg timestamp="20200914 00:49:07.700" level="INFO">${admin_status} = ENABLED</msg>
<status status="PASS" starttime="20200914 00:49:07.700" endtime="20200914 00:49:07.700"></status>
</kw>
<msg timestamp="20200914 00:49:07.700" level="INFO">${operational_status} = ACTIVE</msg>
<msg timestamp="20200914 00:49:07.700" level="INFO">${admin_status} = ENABLED</msg>
<status status="PASS" starttime="20200914 00:49:07.676" endtime="20200914 00:49:07.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${operational_status}</arg>
<arg>${expected_op_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.700" endtime="20200914 00:49:07.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${admin_status}</arg>
<arg>${expected_admin_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.701" endtime="20200914 00:49:07.701"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.676" endtime="20200914 00:49:07.702"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.675" endtime="20200914 00:49:07.702"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate ATT Workflow Driver SI</arg>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw name="Validate ATT Workflow Driver SI" library="ATTWorkFlowDriver">
<doc>FIXME</doc>
<arguments>
<arg>ENABLED</arg>
<arg>AWAITING</arg>
<arg>${onu_device}</arg>
<arg>ONU has been validated - Awaiting Authentication</arg>
</arguments>
<kw name="Service Instance Status Check" library="ATTWorkFlowDriver">
<doc>Returns onu_state and authentication_state fields for an ONU device
from att workflow driver</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
<var>${authentication_status}</var>
<var>${status_message}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>ATT_SERVICEINSTANCES</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:49:07.727" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/att-workflow-driver/attworkflowdriverserviceinstances
Test passed: 200: {"items": [{"policed": 1600034248.171005, "backend_need_delete_policy": false, "backend_register": "{}", "backend_status": "Provisioning in progress", "changed_by_policy": 1600034253.100256, "id": 56, "backend_need_delete": false, "provided_links_ids": [], "self_content_type_id": "att-workflow-driver.attworkflowdriverserviceinstance", "backend_code": 0, "admin_onu_state": "ENABLED", "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "serial_number": "PSMO00000000", "ports_ids": [], "status_message": "ONU has been validated - Awaiting Authentication", "no_sync": false, "owner_id": 2, "updated": 1600034248.171005, "oper_onu_status": "ENABLED", "of_dpid": "of:0000d0d3e158fede", "child_serviceinstances_ids": [], "deleted": false, "policy_status": "done", "lazy_blocked": false, "authentication_state": "AWAITING", "ip_address": "", "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "AttWorkflowDriverServiceInstance", "dhcp_state": "AWAITING", "created": 1600034248.183122, "write_protect": false, "no_policy": false, "uni_port_id": 128, "xos_managed": true, "subscribed_links_ids": [], "class_names": "AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg timestamp="20200914 00:49:07.727" level="INFO">${json_result} = {'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56,...</msg>
<status status="PASS" starttime="20200914 00:49:07.704" endtime="20200914 00:49:07.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:49:07.728" level="INFO">{'items': [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:49:07.727" endtime="20200914 00:49:07.728"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:49:07.728" level="INFO">${json_result_list} = [{'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_...</msg>
<status status="PASS" starttime="20200914 00:49:07.728" endtime="20200914 00:49:07.728"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>serial_number</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:49:07.729" level="INFO">data {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}
return_dict {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_need_delete': False, 'provided_links_ids': [], 'self_content_type_id': 'att-workflow-driver.attworkflowdriverserviceinstance', 'backend_code': 0, 'admin_onu_state': 'ENABLED', 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'serial_number': 'PSMO00000000', 'ports_ids': [], 'status_message': 'ONU has been validated - Awaiting Authentication', 'no_sync': False, 'owner_id': 2, 'updated': 1600034248.171005, 'oper_onu_status': 'ENABLED', 'of_dpid': 'of:0000d0d3e158fede', 'child_serviceinstances_ids': [], 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'authentication_state': 'AWAITING', 'ip_address': '', 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'AttWorkflowDriverServiceInstance', 'dhcp_state': 'AWAITING', 'created': 1600034248.183122, 'write_protect': False, 'no_policy': False, 'uni_port_id': 128, 'xos_managed': True, 'subscribed_links_ids': [], 'class_names': 'AttWorkflowDriverServiceInstance,ServiceInstance,ServiceInstance_decl,XOSBase'}</msg>
<msg timestamp="20200914 00:49:07.729" level="INFO">${getJsonDict} = {'policed': 1600034248.171005, 'backend_need_delete_policy': False, 'backend_register': '{}', 'backend_status': 'Provisioning in progress', 'changed_by_policy': 1600034253.100256, 'id': 56, 'backend_n...</msg>
<status status="PASS" starttime="20200914 00:49:07.728" endtime="20200914 00:49:07.729"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>${ONU_STATE_VAR}</arg>
</arguments>
<assign>
<var>${onu_state}</var>
</assign>
<msg timestamp="20200914 00:49:07.729" level="INFO">${onu_state} = ENABLED</msg>
<status status="PASS" starttime="20200914 00:49:07.729" endtime="20200914 00:49:07.730"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>authentication_state</arg>
</arguments>
<assign>
<var>${authentication_state}</var>
</assign>
<msg timestamp="20200914 00:49:07.730" level="INFO">${authentication_state} = AWAITING</msg>
<status status="PASS" starttime="20200914 00:49:07.730" endtime="20200914 00:49:07.730"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status_message</arg>
</arguments>
<assign>
<var>${status_message}</var>
</assign>
<msg timestamp="20200914 00:49:07.730" level="INFO">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20200914 00:49:07.730" endtime="20200914 00:49:07.730"></status>
</kw>
<msg timestamp="20200914 00:49:07.731" level="INFO">${onu_state} = ENABLED</msg>
<msg timestamp="20200914 00:49:07.731" level="INFO">${authentication_status} = AWAITING</msg>
<msg timestamp="20200914 00:49:07.731" level="INFO">${status_message} = ONU has been validated - Awaiting Authentication</msg>
<status status="PASS" starttime="20200914 00:49:07.703" endtime="20200914 00:49:07.731"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${onu_state}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.731" endtime="20200914 00:49:07.731"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${authentication_status}</arg>
<arg>${expected_auth_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.732" endtime="20200914 00:49:07.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expected_status_message}' != '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status_message}</arg>
<arg>${expected_status_message}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.733" endtime="20200914 00:49:07.733"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.732" endtime="20200914 00:49:07.733"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.702" endtime="20200914 00:49:07.733"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.702" endtime="20200914 00:49:07.733"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>2s</arg>
<arg>Validate Subscriber Status</arg>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Validate Subscriber Status" library="Subscriber">
<doc>Check that a subscriber has the expected status</doc>
<arguments>
<arg>awaiting-auth</arg>
<arg>${onu_device}</arg>
</arguments>
<kw name="Subscriber Status Check" library="Subscriber">
<doc>Returns Status from Subscribers List for a particular ONU device</doc>
<arguments>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Api Get" library="CORDRobot">
<arguments>
<arg>VOLT_SUBSCRIBER</arg>
</arguments>
<assign>
<var>${json_result}</var>
</assign>
<msg timestamp="20200914 00:49:07.762" level="INFO">get url... http://127.0.0.1:30006/xosapi/v1/rcord/rcordsubscribers
Test passed: 200: {"items": [{"ips_ids": [], "policed": 1600034253.019748, "c_tag": 111, "backend_need_delete_policy": false, "backend_register": "{\"next_run\": 0, \"last_success\": 1600034254.333933, \"exponent\": 0}", "backend_status": "OK", "changed_by_policy": 1600034253.019951, "id": 54, "s_tag": 222, "backend_need_delete": true, "provided_links_ids": [], "child_serviceinstances_ids": [], "self_content_type_id": "rcord.rcordsubscriber_decl", "backend_code": 1, "service_instance_attributes_ids": [], "mac_address": "", "link_deleted_count": 0, "ports_ids": [], "enacted": 1600034253.019951, "no_sync": false, "owner_id": 1, "status": "awaiting-auth", "updated": 1600034253.019748, "downstream_bps_id": 2, "deleted": false, "policy_status": "done", "lazy_blocked": false, "tech_profile_id": 64, "backend_need_reap": false, "policy_code": 1, "leaf_model_name": "RCORDSubscriber", "name": "QQClient0-0", "created": 1600034240.412517, "write_protect": false, "no_policy": false, "upstream_bps_id": 2, "creator_id": 1, "xos_managed": true, "onu_device": "PSMO00000000", "subscribed_links_ids": [], "class_names": "RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase"}]}</msg>
<msg timestamp="20200914 00:49:07.762" level="INFO">${json_result} = {'items': [{'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'ba...</msg>
<status status="PASS" starttime="20200914 00:49:07.735" endtime="20200914 00:49:07.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json_result}</arg>
</arguments>
<msg timestamp="20200914 00:49:07.763" level="INFO">{'items': [{'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'backend_status': 'OK', 'changed_by_policy': 1600034253.019951, 'id': 54, 's_tag': 222, 'backend_need_delete': True, 'provided_links_ids': [], 'child_serviceinstances_ids': [], 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'backend_code': 1, 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'ports_ids': [], 'enacted': 1600034253.019951, 'no_sync': False, 'owner_id': 1, 'status': 'awaiting-auth', 'updated': 1600034253.019748, 'downstream_bps_id': 2, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'tech_profile_id': 64, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'RCORDSubscriber', 'name': 'QQClient0-0', 'created': 1600034240.412517, 'write_protect': False, 'no_policy': False, 'upstream_bps_id': 2, 'creator_id': 1, 'xos_managed': True, 'onu_device': 'PSMO00000000', 'subscribed_links_ids': [], 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase'}]}</msg>
<status status="PASS" starttime="20200914 00:49:07.763" endtime="20200914 00:49:07.763"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${json_result}</arg>
<arg>items</arg>
</arguments>
<assign>
<var>${json_result_list}</var>
</assign>
<msg timestamp="20200914 00:49:07.764" level="INFO">${json_result_list} = [{'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'backend_stat...</msg>
<status status="PASS" starttime="20200914 00:49:07.763" endtime="20200914 00:49:07.764"></status>
</kw>
<kw name="Get Dict From List Of Dict" library="CORDRobot">
<arguments>
<arg>${json_result_list}</arg>
<arg>onu_device</arg>
<arg>${onu_device}</arg>
</arguments>
<assign>
<var>${getJsonDict}</var>
</assign>
<msg timestamp="20200914 00:49:07.764" level="INFO">data {'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'backend_status': 'OK', 'changed_by_policy': 1600034253.019951, 'id': 54, 's_tag': 222, 'backend_need_delete': True, 'provided_links_ids': [], 'child_serviceinstances_ids': [], 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'backend_code': 1, 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'ports_ids': [], 'enacted': 1600034253.019951, 'no_sync': False, 'owner_id': 1, 'status': 'awaiting-auth', 'updated': 1600034253.019748, 'downstream_bps_id': 2, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'tech_profile_id': 64, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'RCORDSubscriber', 'name': 'QQClient0-0', 'created': 1600034240.412517, 'write_protect': False, 'no_policy': False, 'upstream_bps_id': 2, 'creator_id': 1, 'xos_managed': True, 'onu_device': 'PSMO00000000', 'subscribed_links_ids': [], 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase'}
return_dict {'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'backend_status': 'OK', 'changed_by_policy': 1600034253.019951, 'id': 54, 's_tag': 222, 'backend_need_delete': True, 'provided_links_ids': [], 'child_serviceinstances_ids': [], 'self_content_type_id': 'rcord.rcordsubscriber_decl', 'backend_code': 1, 'service_instance_attributes_ids': [], 'mac_address': '', 'link_deleted_count': 0, 'ports_ids': [], 'enacted': 1600034253.019951, 'no_sync': False, 'owner_id': 1, 'status': 'awaiting-auth', 'updated': 1600034253.019748, 'downstream_bps_id': 2, 'deleted': False, 'policy_status': 'done', 'lazy_blocked': False, 'tech_profile_id': 64, 'backend_need_reap': False, 'policy_code': 1, 'leaf_model_name': 'RCORDSubscriber', 'name': 'QQClient0-0', 'created': 1600034240.412517, 'write_protect': False, 'no_policy': False, 'upstream_bps_id': 2, 'creator_id': 1, 'xos_managed': True, 'onu_device': 'PSMO00000000', 'subscribed_links_ids': [], 'class_names': 'RCORDSubscriber,RCORDSubscriber_decl,ServiceInstance,ServiceInstance_decl,XOSBase'}</msg>
<msg timestamp="20200914 00:49:07.764" level="INFO">${getJsonDict} = {'ips_ids': [], 'policed': 1600034253.019748, 'c_tag': 111, 'backend_need_delete_policy': False, 'backend_register': '{"next_run": 0, "last_success": 1600034254.333933, "exponent": 0}', 'backend_statu...</msg>
<status status="PASS" starttime="20200914 00:49:07.764" endtime="20200914 00:49:07.764"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${getJsonDict}</arg>
<arg>status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200914 00:49:07.765" level="INFO">${status} = awaiting-auth</msg>
<status status="PASS" starttime="20200914 00:49:07.764" endtime="20200914 00:49:07.765"></status>
</kw>
<msg timestamp="20200914 00:49:07.765" level="INFO">${status} = awaiting-auth</msg>
<status status="PASS" starttime="20200914 00:49:07.734" endtime="20200914 00:49:07.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${accepted_status}' == '${EMPTY}'</arg>
<arg>Should Be Equal</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>ELSE</arg>
<arg>Should Contain Any</arg>
<arg>${status}</arg>
<arg>${expected_status}</arg>
<arg>${accepted_status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>${expected_status}</arg>
</arguments>
<status status="PASS" starttime="20200914 00:49:07.766" endtime="20200914 00:49:07.766"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.765" endtime="20200914 00:49:07.766"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.734" endtime="20200914 00:49:07.766"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.733" endtime="20200914 00:49:07.766"></status>
</kw>
<status status="PASS" starttime="20200914 00:49:07.675" endtime="20200914 00:49:07.766"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:06.114" endtime="20200914 00:49:07.767"></status>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20200914 00:49:07.767" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20200914 00:49:07.767" endtime="20200914 00:49:07.767"></status>
</kw>
<status status="FAIL" starttime="20200914 00:47:06.113" endtime="20200914 00:49:07.767">Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</kw>
<doc>Test various E2E conditions for seba-in-a-box</doc>
<status status="FAIL" starttime="20200914 00:46:14.880" endtime="20200914 00:49:07.768">Suite setup failed:
No match found for '~$' in 50 seconds
Output:
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-112-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Last login: Sun Sep 13 20:57:43 2020 from 10.16.10.32
root@openCORD1:~# .

Also suite teardown failed:
Several failures occurred:

1) Keyword 'Create Subscriber' failed after retrying for 1 minute. The last error was: 400 != 200

2) Keyword 'Create Whitelist' failed after retrying for 1 minute. The last error was: Several failures occurred:

1) 500 != 200

2) Dictionary does not contain key 'id'.</status>
</suite>
<statistics>
<total>
<stat pass="0" fail="10">Critical Tests</stat>
<stat pass="0" fail="10">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="10">latest</stat>
<stat pass="0" fail="1">multicast</stat>
<stat pass="0" fail="10">stable</stat>
<stat pass="0" fail="1">test1</stat>
<stat pass="0" fail="1">test10</stat>
<stat pass="0" fail="1">test2</stat>
<stat pass="0" fail="1">test3</stat>
<stat pass="0" fail="1">test4</stat>
<stat pass="0" fail="1">test5</stat>
<stat pass="0" fail="1">test6</stat>
<stat pass="0" fail="1">test7</stat>
<stat pass="0" fail="1">test8</stat>
<stat pass="0" fail="1">test9</stat>
</tag>
<suite>
<stat pass="0" fail="10" id="s1" name="SIAB">SIAB</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
